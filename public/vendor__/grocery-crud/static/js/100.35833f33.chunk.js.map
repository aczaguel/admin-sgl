{"version":3,"sources":["themes/bootstrap-v5/skin/columns/columns-modal.skin.js","themes/bootstrap-v5/skin/columns/columns-ordering.skin.js","themes/bootstrap-v5/columns/columns-ordering.jsx","themes/bootstrap-v5/columns/columns-visibility.jsx","themes/bootstrap-v5/datagrid/datagrid-column-width.jsx","themes/bootstrap-v5/columns/columns-modal.jsx","themes/bootstrap-v5/skin/datagrid/body.skin.js","themes/bootstrap-v5/datagrid/datagrid-row.jsx","themes/bootstrap-v5/datagrid/datagrid-body.jsx","themes/bootstrap-v5/skin/datagrid/checkbox.skin.js","themes/bootstrap-v5/datagrid/datagrid-checkbox.jsx","themes/bootstrap-v5/skin/datagrid/footer.skin.js","themes/bootstrap-v5/skin/buttons/buttons.skin.js","themes/bootstrap-v5/buttons/button.jsx","themes/bootstrap-v5/datagrid/datagrid-footer.jsx","themes/bootstrap-v5/skin/datagrid/header.skin.js","themes/bootstrap-v5/datagrid/datagrid-header.jsx","themes/bootstrap-v5/skin/datagrid/title.skin.js","themes/bootstrap-v5/datagrid/datagrid-title.jsx","themes/bootstrap-v5/skin/datagrid/tools.skin.js","themes/bootstrap-v5/skin/buttons/button-dropdown.skin.js","themes/bootstrap-v5/buttons/button-dropdown.jsx","themes/bootstrap-v5/datagrid/datagrid-tools.jsx","themes/bootstrap-v5/skin/datagrid/wrapper.skin.js","themes/bootstrap-v5/datagrid/datagrid-wrapper.jsx","themes/bootstrap-v5/skin/form-dialog/form-dialog.skin.js","themes/bootstrap-v5/delete-multiple/delete-multiple-modal.jsx","themes/bootstrap-v5/delete-single/delete-single-modal.jsx","themes/bootstrap-v5/skin/error-dialog/error-dialog.skin.js","themes/bootstrap-v5/error/error-dialog.jsx","themes/bootstrap-v5/skin/filtering/filtering-dialog.skin.js","themes/bootstrap-v5/skin/filtering/filtering.skin.js","themes/bootstrap-v5/common/modal-close-button.jsx","themes/bootstrap-v5/filtering/filtering.jsx","themes/bootstrap-v5/filtering/filtering-modal.jsx","themes/bootstrap-v5/form/form.jsx","themes/bootstrap-v5/form/modal.jsx","themes/bootstrap-v5/form/full-page.jsx","themes/bootstrap-v5/form/form-dialog.jsx","themes/bootstrap-v5/buttons/group-buttons.jsx","themes/bootstrap-v5/index.js","selectors/column-width.js","components/datagrid/button/MultipleButtons.jsx","themes/bootstrap-v5/skin/datagrid/datagrid-mini.skin.js","themes/bootstrap-v5/datagrid/datagrid-mini-grid.jsx","utils/column-width.js","components/common/master-detail.jsx","components/common/input.jsx","components/common/input-container.jsx"],"names":["columnsModalSkin","opacity","composes","display","_ref","columnsModalOpen","animation","_ref2","cursor","tabs","orderingBox","position","padding","background","color","border","columnsOrderingSkin","description","selectOrderedColumns","state","datagrid","orderedColumns","useStyles","createUseStyles","ColumnsOrdering","columns","visibleColumns","changeOrdering","resetColumnsOrdering","classes","useSelector","_jsxs","_Fragment","children","className","_jsx","i18n","t","type","onClick","DragDropContext","onDragEnd","source","destination","draggableId","index","Droppable","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","map","columnName","find","column","name","columnIndex","Draggable","draggableProps","dragHandleProps","includes","displayAs","placeholder","ColumnsVisibility","selectColumnsAllOrNone","toggleVisibleColumn","onChange","checked","length","filter","c","dataType","fieldTypes","INVISIBLE","miniGridSkin","selectColumnWidth","columnWidth","DatagridColumnWidth","dispatch","useDispatch","columnWidthActions","RESET_COLUMN_WIDTH","numRow","style","width","maxWidth","draggable","onDragStart","columnWidthOnDragStart","onDrag","columnWidthOnDrag","event","columnWidthOnDragEnd","columnWidthValue","replace","for","concat","value","columnChangeWidthAction","target","TAB_VISIBILITY","TAB_ORDERING","TAB_WIDTH","ColumnsModal","onColumnsModalClose","visibleColumnsWithDetails","tabSelected","setTabSelection","useState","tabIndex","role","classNames","active","bodySkin","overflow","height","selectLocalCode","configuration","locale","selectDateFormat","dateFormat","selectHasMasterDetail","hasMasterDetail","selectOpenedRows","masterDetail","openedRows","DatagridRow","lastPrimaryKeyValue","rowData","hasActions","settings","configurationSettings","onRowUpdate","onRowUnmount","rightSideActions","skin","theme","publishEvents","rest","grocery_crud_extras","primaryKeyValue","useLayoutEffect","ActionsTd","ActionsColumn","backendActionButtons","actionButtons","isRowOpened","rowId","undefined","masterDetailActions","CLOSE_ROW","OPEN_ROW","Icon","icon","formatDatagridValue","fieldName","fieldOptions","options","permittedValues","colSpan","MasterDetail","defaultProps","selectRows","datagridRows","selectRightSideActions","DatagridBody","props","rows","checkboxSkin","checkbox","DatagridCheckbox","footerSkin","footer","alignItems","justifyContent","isMobileDevice","paddingRight","pagination","margin","borderRadius","borderLeft","borderRight","transform","loader","buttonsSkin","Button","label","link","href","newTab","title","rel","DatagridFooter","filteredTotalEntries","goToFirstPage","goToLastPage","goToNextPage","goToPreviousPage","lastPage","page","currentPage","pageChange","totalEntries","perPage","perPageChange","forceSearch","pagingLoading","pagingOptions","initError","onClearAllCache","hasBottomLeftButtons","hasBottomRightButtons","datagridButtonsBottomLeft","datagridButtonsBottomRight","hasBottomButtons","pageOption","DatagridPagingItemsLabel","disabled","onKeyUp","key","MultipleButtons","buttons","headerSkin","DatagridHeader","columnOrdering","columnSearch","columnSearchValues","columnSearchValuesDisplayAs","extendedSearchData","onMultipleDeleteModalOpen","onSelectRowAllOrNone","actionButtonHasText","hasActionButtonsMultiple","deleteMultiple","selectRowsAllOrNoneChecked","selectedIds","sorting","sortingFor","loadCssThirdParty","backendActionButtonsMultiple","actionButtonsMultiple","hasQuickSearch","isAnyColumnSearchable","some","isSearchable","hasMultipleActions","hasSecondaryHeader","button","getMultipleActionUrl","iconName","hasOrdering","InputSearchComponent","getSearchInputComponent","getClassNamesByDataType","searchValue","searchValueDisplayAs","requireForceSearchOnChange","titleSkin","DatagridTitle","toolsSkin","buttonDropdown","opened","right","direction","DROPDOWN_DIRECTION","RIGHT","_ref3","leftSpace","ButtonDropdown","buttonIcon","buttonLabel","buttonDropdownRef","useRef","setOpen","onBlur","setTimeout","url","preventDefault","text","DatagridTools","apiUrl","hasAdd","onAdd","onClearCache","onClearFiltering","onFilteringModalOpen","onOrderingReset","onRefresh","urlUniqueHash","visibleColumnsAsShortString","urlHistory","subject","landingPageUrl","hasSettings","hasPrint","hasFilters","hasColumnsButton","hasExportData","hasExportPdf","hasExportExcel","hasTopLeftButtons","hasTopRightButtons","datagridButtonsTopLeft","datagridButtonsTopRight","hasTopButtons","uniqueHashPrefix","dataForExport","getTitleTranslation","formActions","ADD","getFiltersTranslation","Object","keys","columnsActions","MODAL_OPEN","onColumnsModalOpen","printUrl","excelExportUrl","pdfExportUrl","error","console","log","FatalErrorMessage","wrapperSkin","wrapper","DatagridWrapper","formDialog","to","deleteOneModalOpen","deleteMultipleModalOpen","_ref4","_ref5","openInModal","outline","form","formLoadingOverlay","content","DeleteMultipleModal","deleteMultipleModalClose","getDeleteConfirmationMessage","DatagridMiniGrid","row","DeleteSingleModal","deleteOneModalClose","deleteOne","errorDialog","showError","ErrorDialog","closeModal","details","message","validationError","failureError","errorsList","serverError","values","defaultValue","formFields","filteringDialogSkin","filteringModalOpen","filteringSkin","ModalCloseButton","Filtering","onFilteringModalClose","onSubmit","onSubmitCallback","extendedSearchOperator","control","handleSubmit","getValues","useForm","defaultValues","basic_operator","extended_search","fields","append","remove","insert","useFieldArray","numberOfFields","data","extendedSearch","forEach","searchData","push","deepCloneArray","onError","errors","e","Controller","render","field","item","Select","oldValues","newValue","oldColumn","newColumn","doTriggerFilterRefresh","getFilterValueFromDataType","option","firstName","FilterComparisonSelect","doTriggerFilterValueRefresh","emptyFilterMapping","originalValue","SearchInputComponent","getJssNameFromType","required","id","FilteringModal","onFilteringSubmit","selectCloseModalOnSave","closeModalOnSave","Form","formIsReadOnly","readOnly","formModalClose","formState","modalLoading","onFormSubmit","register","setValue","useEffect","handleCustomEvent","detail","fieldValue","subscribeEvent","EVENT_SET_FIELD_VALUE","unsubscribeEvent","transformedData","formSubmitTransformation","InputContainer","inputContainerClassName","jssClasses","labelClassName","labelContainerClassName","TOGGLE_CLOSE_MODAL_ON_SAVE","Modal","formModalLoading","formModalOpen","FullPage","FormDialog","groupButtonSkin","GroupButtons","maxActionButtons","maxButtons","mobile","desktop","areWeGroupingButtons","__button","themeComponents","widthChanging","previousSiblingElement","parentThElement","startOffsetX","startClientX","currentTarget","closest","previousSibling","left","clientX","clientWidth","offsetLeft","CHANGE_WIDTH","removeProperty","Math","max","document","body","selectMasterDetailApiUrl","groceryCrudLoader","require","default","datagridRef","current","uniqueId","Date","now","selectPrimaryKeyValue","Input","isDependencyField","isNullable","valueLabel","InputComponent","getComponentFromDataType","onMount","onUnmount","getMountingCallbacks","inputClassName","isReadOnly","HIDDEN","htmlFor","isRequired"],"mappings":"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","file":"static/js/100.35833f33.chunk.js","sourcesContent":["const columnsModalSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"columns-modal\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ columnsModalOpen }) => (columnsModalOpen ? \"block\" : \"none\"),\n      opacity: \"0\",\n      animation: ({ columnsModalOpen }) =>\n        columnsModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"close-button\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"3px\",\n    \"margin-bottom\": \"3px\",\n  },\n  tabs: {\n    composes: \"nav nav-pills\",\n    \".nav-pills&\": {\n      \"margin-bottom\": \"10px\",\n      \"list-style\": \"none\",\n      \"padding-inline-start\": \"unset\",\n    },\n  },\n  \"tab-button\": {\n    composes: \"nav-link\",\n    \".nav-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default columnsModalSkin;\n","const orderingBox = {\n  position: \"relative\",\n  padding: \"16px\",\n  \"margin-bottom\": \"5px\",\n  background: \"var(--gc-light-background)\",\n  color: \"var(--gc-default-text-color)\",\n  border: \"1px solid var(--gc-border-separator-color)\",\n  \"border-radius\": \"4px\",\n};\n\nconst columnsOrderingSkin = {\n  \"ordering-box\": {\n    ...orderingBox,\n  },\n  \"ordering-box-disabled\": {\n    ...orderingBox,\n    opacity: 0.5,\n  },\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n  \"droppable-area\": {\n    background: \"var(--gc-light-background)\",\n    padding: \"4px\",\n  },\n  \"is-dragging-over\": {\n    background: \"var(--gc-dark-background)\",\n    padding: \"4px\",\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n  },\n};\n\nexport default columnsOrderingSkin;\n","import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport columnsOrderingSkin from \"../skin/columns/columns-ordering.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst selectOrderedColumns = (state) => state.datagrid.orderedColumns;\n\nconst useStyles = createUseStyles(columnsOrderingSkin);\n\nconst ColumnsOrdering = ({\n  columns,\n  visibleColumns,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const classes = useStyles();\n  const orderedColumns = useSelector(selectOrderedColumns);\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"ordering_drag_column\")}</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() => resetColumnsOrdering(columns)}\n          >\n            {i18n.t(\"reset_ordering\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      <DragDropContext\n        onDragEnd={({ source, destination, draggableId }) => {\n          if (source && destination && source.index !== destination.index) {\n            changeOrdering(draggableId, source.index, destination.index);\n          }\n        }}\n      >\n        <Droppable droppableId=\"columns\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={\n                snapshot.isDraggingOver\n                  ? classes[\"is-dragging-over\"]\n                  : classes[\"droppable-area\"]\n              }\n            >\n              {orderedColumns\n                .map((columnName) =>\n                  columns.find((column) => column.name === columnName)\n                )\n                .map((column, columnIndex) => (\n                  <Draggable\n                    draggableId={column.name}\n                    index={columnIndex}\n                    key={column.name}\n                  >\n                    {(provided) => (\n                      <div\n                        key={column.name}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={\n                          visibleColumns.includes(column.name)\n                            ? classes[\"ordering-box\"]\n                            : classes[\"ordering-box-disabled\"]\n                        }\n                      >\n                        {column.displayAs}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default ColumnsOrdering;\n","import PropTypes from \"prop-types\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { fieldTypes } from \"../../../constants/field-types\";\n\nconst ColumnsVisibility = ({\n  columns,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  classes,\n}) => {\n  return (\n    <>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={() => selectColumnsAllOrNone(columns)}\n            checked={visibleColumns.length === columns.length}\n          />\n          &nbsp;&nbsp;{i18n.t(\"select_all\")}\n        </label>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      {columns\n        .filter((c) => c.dataType !== fieldTypes.INVISIBLE)\n        .map((column) => (\n          <div key={column.name}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={visibleColumns.includes(column.name)}\n                onChange={() => toggleVisibleColumn(column.name, columns)}\n              />\n              &nbsp;&nbsp;\n              {column.displayAs}\n            </label>\n          </div>\n        ))}\n    </>\n  );\n};\n\nColumnsVisibility.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default ColumnsVisibility;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport PropTypes from \"prop-types\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport {\n  columnChangeWidthAction,\n  columnWidthOnDrag,\n  columnWidthOnDragEnd,\n  columnWidthOnDragStart,\n} from \"../../../utils/column-width\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnWidthActions } from \"../../../actions/column-width-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(miniGridSkin);\nconst selectColumnWidth = (state) => state.columnWidth;\n\nconst DatagridColumnWidth = ({ visibleColumns }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"column_width_drag\")}&nbsp;</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() =>\n              dispatch({\n                type: columnWidthActions.RESET_COLUMN_WIDTH,\n              })\n            }\n          >\n            {i18n.t(\"reset_column_width\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"scrolling-wrapper\"]}>\n        <table className={classes[\"interactive-grid\"]}>\n          <thead>\n            <tr>\n              {visibleColumns.map((column, numRow) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <th key={column.name}>\n                    <div\n                      className={classes[\"header-column\"]}\n                      style={{\n                        width: columnWidth[column.name],\n                        maxWidth: columnWidth[column.name],\n                      }}\n                    >\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        style={{\n                          display: \"none\",\n                        }}\n                      ></div>\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        draggable={true}\n                        onDragStart={columnWidthOnDragStart}\n                        onDrag={columnWidthOnDrag}\n                        onDragEnd={(event) =>\n                          columnWidthOnDragEnd(event, column.name, dispatch)\n                        }\n                      ></div>\n                      <span>{column.displayAs}</span>\n                    </div>\n                  </th>\n                )\n              )}\n            </tr>\n          </thead>\n        </table>\n      </div>\n      <div>\n        <br />\n        <p>{i18n.t(\"column_width_set_width_manually\")}</p>\n      </div>\n      <div>\n        {visibleColumns.map((column) => {\n          const columnWidthValue = columnWidth[column.name]\n            ? columnWidth[column.name].replace(\"px\", \"\")\n            : \"\";\n\n          return (\n            <div className=\"mb-3 row\" key={column.name}>\n              <label\n                className=\"col-sm-2 col-form-label\"\n                for={`gc-column-width-${column.name}`}\n              >\n                {column.displayAs}\n              </label>\n              <div className=\"col-sm-2\">\n                <input\n                  type=\"number\"\n                  value={columnWidthValue}\n                  name={`gc-column-width-${column.name}`}\n                  className=\"form-control\"\n                  onChange={(event) =>\n                    columnChangeWidthAction(\n                      column.name,\n                      event.target.value,\n                      dispatch\n                    )\n                  }\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nDatagridColumnWidth.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridColumnWidth;\n","import { createUseStyles } from \"react-jss\";\nimport classNames from \"classnames\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport columnsModalSkin from \"../skin/columns/columns-modal.skin\";\nimport ColumnsOrdering from \"./columns-ordering\";\nimport ColumnsVisibility from \"./columns-visibility\";\nimport { useState } from \"react\";\nimport DatagridColumnWidth from \"../datagrid/datagrid-column-width\";\n\nconst useStyles = createUseStyles(columnsModalSkin);\n\nconst TAB_VISIBILITY = \"tab-visibility\";\nconst TAB_ORDERING = \"tab-ordering\";\nconst TAB_WIDTH = \"tab-width\";\n\nconst ColumnsModal = ({\n  columns,\n  columnsModalOpen,\n  onColumnsModalClose,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  visibleColumnsWithDetails,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const [tabSelected, setTabSelection] = useState(TAB_VISIBILITY);\n  const classes = useStyles({ columnsModalOpen });\n\n  return (\n    <div className={classes[\"columns-modal\"]} tabIndex=\"-1\" role=\"dialog\">\n      <div\n        className={classNames(\"modal-dialog\", {\n          \"modal-l\": tabSelected !== TAB_WIDTH,\n          \"w-100 mw-100\": tabSelected === TAB_WIDTH,\n        })}\n        role=\"document\"\n      >\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"columns\")}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={onColumnsModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {columnsModalOpen && (\n              <>\n                <ul className={classes[\"tabs\"]}>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_VISIBILITY,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_VISIBILITY);\n                      }}\n                    >\n                      {i18n.t(\"tab_visibility\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_ORDERING,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_ORDERING);\n                      }}\n                    >\n                      {i18n.t(\"tab_ordering\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_WIDTH,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_WIDTH);\n                      }}\n                    >\n                      {i18n.t(\"tab_width\")}\n                    </button>\n                  </li>\n                </ul>\n                {tabSelected === TAB_VISIBILITY && (\n                  <ColumnsVisibility\n                    columns={columns}\n                    selectColumnsAllOrNone={selectColumnsAllOrNone}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    classes={classes}\n                  />\n                )}\n                {tabSelected === TAB_ORDERING && (\n                  <ColumnsOrdering\n                    columns={columns}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    changeOrdering={changeOrdering}\n                    resetColumnsOrdering={resetColumnsOrdering}\n                  />\n                )}\n                {tabSelected === TAB_WIDTH && (\n                  <DatagridColumnWidth\n                    visibleColumns={visibleColumnsWithDetails}\n                  />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnsModal;\n","const bodySkin = {\n  \"@keyframes flash\": {\n    \"0%\": { opacity: \"1\" },\n    \"25%\": { opacity: \"0\" },\n    \"50%\": { opacity: \"1\" },\n    \"75%\": { opacity: \"0\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"animation-flash\": {\n    animation: \"$flash 1s ease 0s normal forwards 1\",\n    position: \"relative\",\n    \"z-index\": \"1\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n  \"table-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  \"open-row\": {\n    cursor: \"pointer\",\n    padding: \"0 5px\",\n    \"min-width\": \"28px\",\n  },\n};\n\nexport default bodySkin;\n","import { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ActionsColumn from \"../../../components/datagrid/body/actions-column\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport { masterDetailActions } from \"../../../actions/master-detail-actions\";\nimport MasterDetail from \"../../../components/common/master-detail\";\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\nconst selectHasMasterDetail = (state) => state.configuration.hasMasterDetail;\nconst selectColumnWidth = (state) => state.columnWidth;\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst DatagridRow = ({\n  lastPrimaryKeyValue,\n  rowData,\n  hasActions,\n  visibleColumns,\n  settings,\n  configurationSettings: { onRowUpdate, onRowUnmount },\n  rightSideActions,\n  skin,\n  theme,\n  publishEvents,\n  ...rest\n}) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n  const hasMasterDetail = useSelector(selectHasMasterDetail);\n  const openedRows = useSelector(selectOpenedRows);\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  const {\n    grocery_crud_extras: { primaryKeyValue },\n  } = rowData;\n\n  useLayoutEffect(() => {\n    if (onRowUpdate) {\n      onRowUpdate({ primaryKeyValue });\n    }\n\n    return () => {\n      if (onRowUnmount) {\n        onRowUnmount({ primaryKeyValue });\n      }\n    };\n  }, [primaryKeyValue, rowData, onRowUpdate, onRowUnmount]);\n\n  const ActionsTd = () => (\n    <td key=\"column__action\" className={classes[\"column-action\"]}>\n      <ActionsColumn\n        {...rest}\n        backendActionButtons={rowData.grocery_crud_extras.actionButtons}\n        actionButtons={settings.actionButtons}\n        primaryKeyValue={primaryKeyValue}\n      />\n    </td>\n  );\n\n  const isRowOpened =\n    hasMasterDetail && openedRows.find((rowId) => rowId === primaryKeyValue);\n\n  return (\n    <>\n      <tr\n        className={\n          lastPrimaryKeyValue &&\n          lastPrimaryKeyValue === rowData.grocery_crud_extras.primaryKeyValue\n            ? classes[\"animation-flash\"]\n            : undefined\n        }\n      >\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n        {visibleColumns.map((column, numRow) => (\n          <td key={column.name}>\n            <div\n              className={classes[\"column-text\"]}\n              style={{\n                width: columnWidth[column.name],\n                maxWidth: columnWidth[column.name],\n              }}\n            >\n              {hasMasterDetail && numRow === 0 && (\n                <>\n                  <span\n                    className={classes[\"open-row\"]}\n                    onClick={() =>\n                      dispatch({\n                        type: isRowOpened\n                          ? masterDetailActions.CLOSE_ROW\n                          : masterDetailActions.OPEN_ROW,\n                        rowId: primaryKeyValue,\n                      })\n                    }\n                  >\n                    <Icon icon={isRowOpened ? \"caret-down\" : \"caret-right\"} />\n                  </span>\n                </>\n              )}\n              {formatDatagridValue(rowData[column.name], column.dataType, {\n                dateFormat,\n                fieldName: column.name,\n                fieldOptions: column.options,\n                locale,\n                permittedValues: column.permittedValues,\n                primaryKeyValue,\n              })}\n            </div>\n          </td>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n      </tr>\n      {isRowOpened && (\n        <tr>\n          <td colSpan={visibleColumns.length + (hasActions ? 1 : 0)}>\n            <MasterDetail\n              primaryKeyValue={primaryKeyValue}\n              skin={skin}\n              theme={theme}\n              publishEvents={publishEvents}\n            />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nDatagridRow.propTypes = {\n  settings: PropTypes.object,\n  configurationSettings: PropTypes.object,\n};\n\nDatagridRow.defaultProps = {\n  settings: {},\n  configurationSettings: {},\n};\n\nexport default DatagridRow;\n","import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport DatagridRow from \"./datagrid-row\";\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst selectRows = (state) => state.datagridRows;\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\n\nconst DatagridBody = (props) => {\n  const rows = useSelector(selectRows);\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const classes = useStyles();\n\n  return (\n    <tbody className={classes[\"table-body\"]}>\n      {rows.map((rowData, numRow) => (\n        <DatagridRow\n          key={numRow}\n          rowData={rowData}\n          rightSideActions={rightSideActions}\n          {...props}\n        />\n      ))}\n    </tbody>\n  );\n};\n\nDatagridBody.propTypes = {\n  rows: PropTypes.array,\n};\n\nexport default DatagridBody;\n","const checkboxSkin = {\n  checkbox: {\n    \"margin-right\": \"10px\",\n    display: \"inline-flex\",\n  },\n};\n\nexport default checkboxSkin;\n","import { createUseStyles } from \"react-jss\";\nimport checkboxSkin from \"../skin/datagrid/checkbox.skin\";\n\nconst useStyles = createUseStyles(checkboxSkin);\n\nconst DatagridCheckbox = ({ onChange, checked }) => {\n  const classes = useStyles();\n\n  return (\n    <input\n      type=\"checkbox\"\n      className={classes[\"checkbox\"]}\n      onChange={onChange}\n      checked={checked}\n    />\n  );\n};\n\nexport default DatagridCheckbox;\n","const footerSkin = {\n  footer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"16px 5px\",\n    \"@media (max-width: 768px)\": {\n      \"flex-direction\": \"column\",\n    },\n  },\n  \"footer-bottom-border\": {\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n    width: \"100%\",\n    height: \"1px\",\n  },\n  \"footer-error\": {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    padding: \"16px 5px\",\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n  },\n  \"footer-child\": {\n    display: \"flex\",\n    \"flex-direction\": ({ isMobileDevice }) =>\n      isMobileDevice ? \"column\" : \"row\",\n    \"& > div\": {\n      display: \"flex\",\n      \"flex-direction\": \"row\",\n      \"align-items\": \"center\",\n      padding: \"5px\",\n      \"justify-content\": \"end\",\n    },\n    \"& > div > div\": {\n      paddingRight: \"5px\",\n    },\n  },\n  pagination: {\n    composes: \"pagination\",\n    \".pagination&\": {\n      margin: \"0\",\n      \"list-style\": \"none\",\n    },\n  },\n  \"page-link\": {\n    composes: \"page-link\",\n    \".page-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"page-number\": {\n    composes: \"form-control\",\n    \"&.form-control\": {\n      borderRadius: \"0\",\n      width: \"100px\",\n      borderLeft: \"none\",\n      borderRight: \"none\",\n    },\n  },\n  \"@keyframes spin\": {\n    \"0%\": { transform: \"rotate(0deg)\" },\n    \"100%\": { transform: \"rotate(360deg)\" },\n  },\n  loader: {\n    border: \"4px solid #f3f3f3\",\n    \"border-radius\": \"50%\",\n    \"border-top\": \"4px solid #3498db\",\n    width: \"16px\",\n    height: \"16px\",\n    \"-webkit-animation\": \"$spin 2s linear infinite\" /* Safari */,\n    animation: \"$spin 2s linear infinite\",\n    \"margin-right\": \"10px\",\n  },\n  \"per-page-dropdown\": {\n    composes: \"form-control form-select\",\n    \"min-width\": \"70px\",\n  },\n};\n\nexport default footerSkin;\n","const buttonsSkin = {\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n  },\n};\n\nexport default buttonsSkin;\n","import Icon from \"../../../components/common/icon\";\nimport buttonsSkin from \"../skin/buttons/buttons.skin\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles(buttonsSkin);\n\nconst Button = ({\n  onClick,\n  icon,\n  label,\n  link = false,\n  href,\n  newTab = false,\n}) => {\n  const classes = useStyles();\n\n  if (link) {\n    return (\n      <a\n        className={classes[\"simple-button\"]}\n        onClick={onClick}\n        href={href}\n        title={label}\n        target={newTab ? \"_blank\" : undefined}\n        rel=\"noreferrer\"\n      >\n        {icon && (\n          <>\n            <Icon icon={icon}></Icon>&nbsp;\n          </>\n        )}\n        {label}\n      </a>\n    );\n  }\n\n  return (\n    <button\n      className={classes[\"simple-button\"]}\n      onClick={onClick}\n      title={label}\n    >\n      {icon && (\n        <>\n          <Icon icon={icon}></Icon>&nbsp;\n        </>\n      )}\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import { createUseStyles } from \"react-jss\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport Icon from \"../../../components/common/icon\";\nimport DatagridPagingItemsLabel from \"../../../components/datagrid/footer/datagrid-paging-items-label\";\nimport footerSkin from \"../skin/datagrid/footer.skin\";\nimport MultipleButtons from \"../../../components/datagrid/button/MultipleButtons\";\nimport Button from \"../buttons/button\";\n\nconst useStyles = createUseStyles(footerSkin);\n\nconst DatagridFooter = (props) => {\n  const classes = useStyles(props);\n\n  const {\n    filteredTotalEntries,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    lastPage,\n    page: currentPage,\n    pageChange,\n    totalEntries,\n    perPage,\n    perPageChange,\n    forceSearch,\n    pagingLoading,\n    pagingOptions,\n    initError,\n    onClearAllCache,\n  } = props;\n\n  const hasBottomLeftButtons = useSelector(\n    (state) => state.configuration.hasBottomLeftButtons\n  );\n  const hasBottomRightButtons = useSelector(\n    (state) => state.configuration.hasBottomRightButtons\n  );\n\n  const datagridButtonsBottomLeft = useSelector(\n    (state) => state.configuration.datagridButtonsBottomLeft\n  );\n\n  const datagridButtonsBottomRight = useSelector(\n    (state) => state.configuration.datagridButtonsBottomRight\n  );\n\n  const hasBottomButtons = hasBottomLeftButtons || hasBottomRightButtons;\n\n  if (initError) {\n    return (\n      <div className={classes[\"footer-error\"]}>\n        <p>\n          Couldn't load initial data sorry 😞 . This message usually appears\n          when the server is down or there is an error in the code! If the issue\n          still persist, consider clearing the cache.\n        </p>\n        <p>\n          <button className=\"btn btn-outline-dark\" onClick={onClearAllCache}>\n            Clear Cache\n          </button>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className={classes.footer}>\n        <div className={classes[\"footer-child\"]}>\n          {pagingOptions.length > 0 && (\n            <div>\n              <div>Show</div>\n              <div>\n                <select\n                  className={classes[\"per-page-dropdown\"]}\n                  onChange={perPageChange}\n                  value={perPage}\n                >\n                  {pagingOptions.map((pageOption) => (\n                    <option key={pageOption} value={pageOption}>\n                      {pageOption}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>entries</div>\n            </div>\n          )}\n        </div>\n        <div className={classes[\"footer-child\"]}>\n          {pagingLoading && (\n            <div>\n              <div className={classes.loader} />\n            </div>\n          )}\n          {filteredTotalEntries && !pagingLoading ? (\n            <div>\n              <DatagridPagingItemsLabel\n                currentPage={currentPage}\n                totalEntries={totalEntries}\n                perPage={perPage}\n                filteredTotalEntries={filteredTotalEntries}\n              />\n            </div>\n          ) : null}\n          <div>\n            <ul className={classes.pagination}>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === 1,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToFirstPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"step-backward\" />\n                </button>\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === 1,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToPreviousPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"chevron-left\" />\n                </button>\n              </li>\n              <li className=\"page-item\">\n                <input\n                  type=\"number\"\n                  className={classes[\"page-number\"]}\n                  value={currentPage}\n                  onChange={(event) => pageChange(event, currentPage, lastPage)}\n                  disabled={filteredTotalEntries === 0}\n                  onKeyUp={(event) => {\n                    if (event.key === \"Enter\") {\n                      forceSearch();\n                    }\n                  }}\n                />\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === lastPage,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToNextPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"chevron-right\" />\n                </button>\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === lastPage,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToLastPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"step-forward\" />\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {hasBottomButtons && (\n        <div className={classes.footer}>\n          <div className={classes[\"footer-child\"]}>\n            <MultipleButtons\n              Button={Button}\n              buttons={datagridButtonsBottomLeft}\n            />\n          </div>\n          <div className={classes[\"footer-child\"]}>\n            <MultipleButtons\n              Button={Button}\n              buttons={datagridButtonsBottomRight}\n            />\n          </div>\n        </div>\n      )}\n      <div className={classes[\"footer-bottom-border\"]}></div>\n    </>\n  );\n};\n\nDatagridFooter.propTypes = {\n  page: PropTypes.number,\n};\n\nexport default DatagridFooter;\n","const headerSkin = {\n  \"search-column\": {\n    \"min-width\": \"160px\",\n    \"vertical-align\": \"middle\",\n  },\n  \"multiple-action-button\": {\n    composes: \"btn btn-default btn-outline-dark\",\n    display: \"inline-flex\",\n    \"margin-right\": \"5px\",\n    \"vertical-align\": \"middle\",\n    \"align-items\": \"center\",\n  },\n  \"table-th-with-ordering\": {\n    cursor: \"pointer\",\n  },\n  \"actions-column-header\": {\n    \"align-items\": \"center\",\n    display: \"flex\",\n    height: \"39px\",\n  },\n  \"with-ordering\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n  },\n\n  \"input-text\": {\n    composes: \"form-control\",\n  },\n  \"input-select\": {\n    composes: \"form-control form-select\",\n  },\n  \"input-select-search\": {},\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n};\n\nexport default headerSkin;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport headerSkin from \"../skin/datagrid/header.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getSearchInputComponent,\n  requireForceSearchOnChange,\n} from \"../../../utils/field-types\";\nimport { getClassNamesByDataType } from \"../../../utils/datagrid\";\nimport DatagridCheckbox from \"./datagrid-checkbox\";\nimport { getMultipleActionUrl } from \"../../../utils/urls\";\n\nconst useStyles = createUseStyles(headerSkin);\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\n\nconst DatagridHeader = (props) => {\n  const {\n    columnOrdering,\n    columnSearch,\n    columnSearchValues,\n    columnSearchValuesDisplayAs,\n    extendedSearchData,\n    forceSearch,\n    hasActions,\n    onMultipleDeleteModalOpen,\n    onSelectRowAllOrNone,\n    options: { actionButtonHasText, hasActionButtonsMultiple, deleteMultiple },\n    selectRowsAllOrNoneChecked,\n    selectedIds,\n    sorting,\n    sortingFor,\n    visibleColumns,\n    loadCssThirdParty,\n    isMobileDevice,\n    backendActionButtonsMultiple,\n    configurationSettings: { actionButtonsMultiple },\n  } = props;\n\n  const classes = useStyles(props);\n\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const hasQuickSearch = extendedSearchData.length === 0;\n\n  const isAnyColumnSearchable = visibleColumns.some(\n    (column) => column.isSearchable\n  );\n\n  const hasMultipleActions =\n    (deleteMultiple || hasActionButtonsMultiple) && !isMobileDevice;\n  const hasSecondaryHeader = isAnyColumnSearchable || hasMultipleActions;\n\n  const ActionsTd = () => (\n    <td className={classes[\"column-action\"]}>\n      <div className={classes[\"actions-column-header\"]}>\n        {hasMultipleActions && (\n          <>\n            <DatagridCheckbox\n              onChange={onSelectRowAllOrNone}\n              checked={selectRowsAllOrNoneChecked}\n            />\n            {selectedIds.length > 0 && (\n              <>\n                <button\n                  type=\"button\"\n                  className={classes[\"multiple-action-button\"]}\n                  onClick={onMultipleDeleteModalOpen}\n                >\n                  <Icon icon=\"trash\" />\n                  &nbsp;&nbsp;\n                  {actionButtonHasText && (\n                    <span>{i18n.t(\"action_delete\")}</span>\n                  )}\n                </button>\n                {hasActionButtonsMultiple &&\n                  backendActionButtonsMultiple.map((button) => (\n                    <a\n                      className={classes[\"multiple-action-button\"]}\n                      href={getMultipleActionUrl({ button, selectedIds })}\n                      target={button.newTab ? \"_blank\" : undefined}\n                      rel=\"noreferrer\"\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </a>\n                  ))}\n                {actionButtonsMultiple &&\n                  actionButtonsMultiple.map((button) => (\n                    <button\n                      className={classes[\"multiple-action-button\"]}\n                      onClick={() => {\n                        if (button.onClick) {\n                          button.onClick({ selectedIds });\n                        }\n                      }}\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </button>\n                  ))}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </td>\n  );\n\n  return (\n    <thead>\n      <tr>\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <th className={classes[\"column-action\"]}>{i18n.t(\"actions\")}</th>\n        )}\n        {visibleColumns.map((column, numRow) => (\n          <th\n            className={\n              column.hasOrdering ? classes[\"table-th-with-ordering\"] : undefined\n            }\n            key={column.name}\n            onClick={() => {\n              if (column.hasOrdering) {\n                columnOrdering({\n                  columnName: column.name,\n                  sorting:\n                    sorting === \"\" || sorting === \"desc\" ? \"asc\" : \"desc\",\n                });\n              }\n            }}\n          >\n            <div className={classes[\"with-ordering\"]}>\n              <span>{column.displayAs}</span>\n              {column.hasOrdering && (\n                <>\n                  {sortingFor === column.name ? (\n                    <Icon\n                      icon={\n                        sorting === \"asc\"\n                          ? \"sort-amount-down-alt\"\n                          : \"sort-amount-down\"\n                      }\n                    />\n                  ) : (\n                    <Icon icon=\"sort\" />\n                  )}\n                </>\n              )}\n            </div>\n          </th>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <th>{i18n.t(\"actions\")}</th>\n        )}\n      </tr>\n      {hasSecondaryHeader && (\n        <tr>\n          {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n          {visibleColumns.map((column) => {\n            const InputSearchComponent = getSearchInputComponent(\n              column.dataType\n            );\n\n            return (\n              <td key={column.name} className={classes[\"search-column\"]}>\n                {hasQuickSearch && column.isSearchable && (\n                  <InputSearchComponent\n                    className={\n                      classes[getClassNamesByDataType(column.dataType)]\n                    }\n                    placeholder={i18n.t(\"quick_search\")}\n                    permittedValues={column.permittedValues}\n                    loadCssThirdParty={loadCssThirdParty}\n                    onChange={(event) => {\n                      columnSearch({\n                        columnName: column.name,\n                        searchValue:\n                          typeof event.target.value === \"object\"\n                            ? event.target.value.key\n                            : event.target.value,\n                        searchValueDisplayAs:\n                          typeof event.target.value === \"object\"\n                            ? event.target.value.displayAs\n                            : \"\",\n                      });\n                      if (\n                        requireForceSearchOnChange(column.dataType) === true\n                      ) {\n                        forceSearch();\n                      }\n                    }}\n                    onKeyUp={(event) => {\n                      if (event.key === \"Enter\") {\n                        forceSearch();\n                      }\n                    }}\n                    value={\n                      columnSearchValues[column.name]\n                        ? columnSearchValues[column.name]\n                        : \"\"\n                    }\n                    displayAs={\n                      columnSearchValuesDisplayAs[column.name]\n                        ? columnSearchValuesDisplayAs[column.name]\n                        : \"\"\n                    }\n                    fieldName={column.name}\n                  />\n                )}\n              </td>\n            );\n          })}\n          {hasActions && rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n        </tr>\n      )}\n    </thead>\n  );\n};\n\nDatagridHeader.propTypes = {\n  actionButtonsMultiple: PropTypes.array,\n  columnSearchValues: PropTypes.object,\n  columnSearchValuesDisplayAs: PropTypes.object,\n  configurationSettings: PropTypes.object,\n  extendedSearchData: PropTypes.array,\n  hasActions: PropTypes.bool,\n  options: PropTypes.object,\n  selectedIds: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nDatagridHeader.defaultProps = {\n  actionButtonsMultiple: [],\n  columnSearchValues: {},\n  columnSearchValuesDisplayAs: {},\n  configurationSettings: { actionButtonsMultiple: [] },\n  extendedSearchData: [],\n  hasActions: false,\n  options: { actionButtonHasText: true, hasActionButtonsMultiple: false },\n  selectedIds: [],\n  visibleColumns: [],\n};\n\nexport default DatagridHeader;\n","const bodySkin = {\n  title: {\n    composes: \"gc-caption-title\",\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default bodySkin;\n","import { createUseStyles } from \"react-jss\";\nimport titleSkin from \"../skin/datagrid/title.skin\";\n\nconst useStyles = createUseStyles(titleSkin);\n\nconst DatagridTitle = (props) => {\n  const { title } = props;\n\n  const classes = useStyles(props);\n\n  return <div className={classes[\"title\"]}>{title ? title : <>&nbsp;</>}</div>;\n};\n\nexport default DatagridTitle;\n","const toolsSkin = {\n  \"datagrid-tools\": {\n    position: \"relative\",\n    padding: \"10px\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n  },\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n  },\n  \"success-button\": {\n    composes: \"btn btn-success\",\n    \"margin-left\": \"5px\",\n  },\n  \"danger-button\": {\n    composes: \"btn btn-danger\",\n    \"margin-left\": \"5px\",\n  },\n  \"warning-button\": {\n    composes: \"btn btn-warning\",\n    \"margin-left\": \"5px\",\n  },\n};\n\nexport default toolsSkin;\n","import { DROPDOWN_DIRECTION } from \"../../../../constants/dropdown\";\n\nconst buttonDropdown = {\n  \"dropdown-menu\": {\n    composes: \"dropdown-menu\",\n    \".dropdown-menu&\": {\n      \"margin-top\": \"38px\",\n      display: ({ opened }) => (opened ? \"block\" : \"none\"),\n      right: ({ direction }) =>\n        direction === DROPDOWN_DIRECTION.RIGHT ? \"0\" : \"auto\",\n    },\n  },\n  \"dropdown-menu-container\": {\n    composes: \"btn-group\",\n    \"margin-left\": ({ leftSpace }) => (leftSpace ? \"5px\" : \"0\"),\n  },\n  \"dropdown-menu-button\": {\n    composes: \"btn btn-outline-dark dropdown-toggle\",\n  },\n};\n\nexport default buttonDropdown;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\nimport { useState, useRef } from \"react\";\n\nimport buttonDropdown from \"../skin/buttons/button-dropdown.skin\";\nimport Icon from \"../../../components/common/icon\";\n\nconst useStyles = createUseStyles(buttonDropdown);\n\nconst ButtonDropdown = ({\n  buttons,\n  buttonIcon,\n  buttonLabel,\n  direction,\n  leftSpace,\n}) => {\n  const buttonDropdownRef = useRef(null);\n  const [opened, setOpen] = useState(false);\n\n  function openToggle() {\n    setOpen(!opened);\n  }\n\n  function close(event) {\n    // Having enough time to close in case you press any click into the dropdown\n    setTimeout(() => {\n      setOpen(false);\n    }, 200);\n  }\n\n  const classes = useStyles({ opened, direction, leftSpace });\n\n  if (buttons.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={classes[\"dropdown-menu-container\"]} ref={buttonDropdownRef}>\n      <button\n        className={classes[\"dropdown-menu-button\"]}\n        onClick={openToggle}\n        onBlur={close}\n      >\n        {buttonIcon && (\n          <>\n            <Icon icon={buttonIcon} />\n            &nbsp;\n          </>\n        )}\n        {buttonLabel}&nbsp;\n        <Icon icon=\"caret\" />\n      </button>\n\n      <ul className={classes[\"dropdown-menu\"]}>\n        {buttons.map((button) => (\n          <li key={button.key}>\n            <a\n              href={button.url ? button.url : \"\"}\n              target={button.newTab ? \"_blank\" : undefined}\n              className=\"dropdown-item\"\n              rel=\"noreferrer\"\n              onClick={\n                button.onClick\n                  ? (event) => {\n                      event.preventDefault();\n                      if (button.onClick) {\n                        button.onClick({\n                          primaryKeyValue: button.primaryKeyValue,\n                        });\n                      }\n                    }\n                  : undefined\n              }\n            >\n              {button.icon && (\n                <>\n                  <Icon icon={button.icon} />\n                  &nbsp;&nbsp;\n                </>\n              )}\n              {button.text}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nButtonDropdown.propTypes = {\n  buttons: PropTypes.array,\n  buttonIcon: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  leftSpace: PropTypes.bool,\n};\n\nButtonDropdown.defaultProps = {\n  buttons: [],\n  buttonIcon: \"\",\n  buttonLabel: \"\",\n  direction: \"left\",\n  leftSpace: false,\n};\n\nexport default ButtonDropdown;\n","import { createUseStyles } from \"react-jss\";\nimport toolsSkin from \"../skin/datagrid/tools.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getFiltersTranslation,\n  getTitleTranslation,\n} from \"../../../utils/translations-helper\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ButtonDropdown from \"../buttons/button-dropdown\";\nimport { DROPDOWN_DIRECTION } from \"../../../constants/dropdown\";\nimport { excelExportUrl, pdfExportUrl, printUrl } from \"../../../utils/urls\";\nimport Button from \"../buttons/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnsActions } from \"../../../actions/columns-actions\";\nimport FatalErrorMessage from \"../../../components/common/error/fatal-error-message\";\nimport MultipleButtons from \"../../../components/datagrid/button/MultipleButtons\";\n\nconst useStyles = createUseStyles(toolsSkin);\n\nconst onColumnsModalOpen = (dispatch) =>\n  dispatch({\n    type: columnsActions.MODAL_OPEN,\n  });\n\nconst DatagridTools = (props) => {\n  const {\n    apiUrl,\n    columnSearchValues,\n    extendedSearchData,\n    hasAdd,\n    onAdd,\n    onClearCache,\n    onClearFiltering,\n    onFilteringModalOpen,\n    onOrderingReset,\n    onRefresh,\n    sorting,\n    sortingFor,\n    urlUniqueHash,\n    visibleColumnsAsShortString,\n  } = props;\n\n  const classes = useStyles(props);\n  const dispatch = useDispatch();\n\n  const urlHistory = useSelector((state) => state.configuration.urlHistory);\n  const subject = useSelector((state) => state.configuration.subject);\n  const landingPageUrl = useSelector(\n    (state) => state.configuration.landingPageUrl\n  );\n\n  const hasSettings = useSelector((state) => state.configuration.hasSettings);\n  const hasPrint = useSelector((state) => state.configuration.hasPrint);\n  const hasFilters = useSelector((state) => state.configuration.hasFilters);\n  const hasColumnsButton = useSelector(\n    (state) => state.configuration.hasColumnsButton\n  );\n  const hasExportData = useSelector(\n    (state) => state.configuration.hasExportData\n  );\n  const hasExportPdf = useSelector((state) => state.configuration.hasExportPdf);\n  const hasExportExcel = useSelector(\n    (state) => state.configuration.hasExportExcel\n  );\n\n  const hasTopLeftButtons = useSelector(\n    (state) => state.configuration.hasTopLeftButtons\n  );\n  const hasTopRightButtons = useSelector(\n    (state) => state.configuration.hasTopRightButtons\n  );\n\n  const datagridButtonsTopLeft = useSelector(\n    (state) => state.configuration.datagridButtonsTopLeft\n  );\n\n  const datagridButtonsTopRight = useSelector(\n    (state) => state.configuration.datagridButtonsTopRight\n  );\n\n  const hasTopButtons = hasTopLeftButtons || hasTopRightButtons;\n  // TODO: To pass the urlUniqueHash at the future\n  const uniqueHashPrefix = urlUniqueHash ? `/${urlUniqueHash}` : \"\";\n\n  const dataForExport = {\n    apiUrl,\n    columnSearchValues,\n    sorting,\n    sortingFor,\n    visibleColumnsAsShortString,\n    extendedSearchData,\n  };\n\n  try {\n    return hasTopButtons ? (\n      <div className={classes[\"datagrid-tools\"]}>\n        <div>\n          {hasTopLeftButtons && (\n            <>\n              {hasAdd && (\n                <Button\n                  link={true}\n                  href={\n                    urlHistory ? `${landingPageUrl}${uniqueHashPrefix}/add` : \"\"\n                  }\n                  icon=\"plus\"\n                  label={getTitleTranslation(formActions.ADD, subject)}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    onAdd();\n                  }}\n                />\n              )}\n            </>\n          )}\n          <MultipleButtons Button={Button} buttons={datagridButtonsTopLeft} />\n        </div>\n        <div>\n          {hasTopRightButtons && (\n            <>\n              <MultipleButtons\n                Button={Button}\n                buttons={datagridButtonsTopRight}\n              />\n              {hasFilters && (\n                <button\n                  className={\n                    extendedSearchData.length > 0\n                      ? classes[\"success-button\"]\n                      : classes[\"simple-button\"]\n                  }\n                  onClick={onFilteringModalOpen}\n                >\n                  <Icon icon=\"filter\"></Icon>&nbsp;\n                  {getFiltersTranslation(extendedSearchData.length)}\n                </button>\n              )}\n              {hasFilters &&\n                (extendedSearchData.length > 0 ||\n                  Object.keys(columnSearchValues).length > 0) && (\n                  <button\n                    className={classes[\"warning-button\"]}\n                    onClick={onClearFiltering}\n                  >\n                    <Icon icon=\"eraser\"></Icon>&nbsp;\n                    {i18n.t(\"filtering_remove_filters\")}\n                  </button>\n                )}\n              {hasColumnsButton && (\n                <Button\n                  onClick={() => onColumnsModalOpen(dispatch)}\n                  label={i18n.t(\"columns\")}\n                  icon=\"list-alt\"\n                />\n              )}\n              {hasPrint && (\n                <a\n                  className={classes[\"simple-button\"]}\n                  href={printUrl(dataForExport)}\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Icon icon=\"print\"></Icon>&nbsp;\n                  {i18n.t(\"print\")}\n                </a>\n              )}\n              {hasExportData && (\n                <ButtonDropdown\n                  buttons={[\n                    hasExportExcel && {\n                      icon: \"file-excel\",\n                      text: \"Excel\",\n                      url: excelExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"excel\",\n                    },\n                    hasExportPdf && {\n                      icon: \"file-pdf\",\n                      text: \"PDF\",\n                      url: pdfExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"pdf\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"export_to_file\")}\n                  buttonIcon=\"download\"\n                  leftSpace={true}\n                />\n              )}\n              {hasSettings && (\n                <ButtonDropdown\n                  leftSpace={true}\n                  direction={DROPDOWN_DIRECTION.RIGHT}\n                  buttons={[\n                    {\n                      icon: \"broom\",\n                      text: i18n.t(\"clear_cache\"),\n                      onClick: onClearCache,\n                      key: \"clear_cache\",\n                    },\n                    {\n                      icon: \"eraser\",\n                      text: i18n.t(\"clear_filtering\"),\n                      onClick: onClearFiltering,\n                      key: \"clear_filtering\",\n                    },\n                    {\n                      icon: \"unlink\",\n                      text: i18n.t(\"reset_ordering\"),\n                      onClick: onOrderingReset,\n                      key: \"reset_ordering\",\n                    },\n                    {\n                      icon: \"sync-alt\",\n                      text: i18n.t(\"refresh\"),\n                      onClick: onRefresh,\n                      key: \"refresh\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"settings\")}\n                  buttonIcon=\"cog\"\n                />\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    ) : null;\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nexport default DatagridTools;\n","const wrapperSkin = {\n  wrapper: {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n    width: ({ columnWidth }) =>\n      Object.keys(columnWidth).length > 0 ? \"auto\" : \"100%\",\n  },\n  \"wrapper-no-hover\": {\n    composes: \"table table-bordered\",\n    \"margin-bottom\": \"0px\",\n    width: ({ columnWidth }) =>\n      Object.keys(columnWidth).length > 0 ? \"auto\" : \"100%\",\n  },\n};\n\nexport default wrapperSkin;\n","import { createUseStyles } from \"react-jss\";\nimport wrapperSkin from \"../skin/datagrid/wrapper.skin\";\nimport { useSelector } from \"react-redux\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(wrapperSkin);\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst DatagridWrapper = ({ children }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n  const openedRows = useSelector(selectOpenedRows);\n  const classes = useStyles({ columnWidth, openedRows });\n\n  return (\n    <table\n      className={\n        openedRows.length > 0 ? classes[\"wrapper-no-hover\"] : classes.wrapper\n      }\n    >\n      {children}\n    </table>\n  );\n};\n\nexport default DatagridWrapper;\n","import i18n from \"../../../../utils/locale/i18n\";\n\nconst formDialog = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"@keyframes shine\": {\n    to: {\n      \"background-position\": \"100% 0\",\n    },\n  },\n  \"form-dialog\": {\n    composes: \"modal\",\n    \".modal&\": {\n      opacity: \"0\",\n      animation: \"$fadeIn 0.15s ease 0s normal forwards 1\",\n    },\n  },\n  \"dialog-hide\": {\n    \".modal&\": {\n        display: \"none\",\n    }\n  },\n  \"dialog-show\": {\n    \".modal&\": {\n        display: \"block\",\n    }\n  },\n  \"modal-delete-one\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ deleteOneModalOpen }) =>\n        deleteOneModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ deleteOneModalOpen }) =>\n        deleteOneModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"button-close\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"modal-delete-multiple\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ deleteMultipleModalOpen }) =>\n        deleteMultipleModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ deleteMultipleModalOpen }) =>\n        deleteMultipleModalOpen\n          ? \"$fadeIn 0.15s ease 0s normal forwards 1\"\n          : \"none\",\n    },\n  },\n  \"close-button\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": ({ openInModal }) =>\n      openInModal ? \"calc(100vh - 240px)\" : undefined,\n    padding: \"0px 10px\",\n  },\n  \"@media (max-height: 300px)\": {\n    \"form-fields\": {\n      \"max-height\": \"none\",\n    },\n  },\n  \"skeleton-loader\": {\n    width: \"100%\",\n    height: \"15px\",\n    border: \"1px solid rgb(239,239,239)\",\n    \"border-radius\": \"4px\",\n    display: \"block\",\n    \"background-repeat\": \"repeat-y\",\n    \"background-size\": \"50px 500px\",\n    \"background-position\": \"0 0\",\n    background:\n      \"linear-gradient(to right, rgba(239, 239, 239, 0), rgba(239, 239, 239, 0.5) 50%, rgba(239, 239, 239, 0) 80%),rgb(255,255,255)\",\n    animation: \"$shine 2s infinite\",\n    \"animation-delay\": \"0.3s\",\n  },\n  \"form-input-read-only\": {\n    padding: \"7px 0px\",\n    border: \"none\",\n    \"background-color\": \"var(--gc-input-light-background)\",\n    \"&:focus-visible, &:focus\": {\n      border: \"none\",\n      outline: \"none\",\n      \"background-color\": \"var(--gc-input-light-background)\",\n    },\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-textarea\": {\n    composes: \"form-control\",\n    \"textarea&\": {\n      \"min-height\": \"250px\",\n    },\n  },\n  \"form-select\": {\n    composes: \"form-control form-select\",\n  },\n  form: {\n    composes: \"form-horizontal\",\n    position: \"relative\",\n    \"&:before\": {\n      display: (props) => (props.formLoadingOverlay ? \"block\" : \"none\"),\n      content: (props) =>\n        props.formLoadingOverlay ? `\"${i18n.t(\"loading\")}\"` : \"none\",\n      opacity: (props) => (props.formLoadingOverlay ? \"0.5\" : \"0\"),\n      \"font-size\": \"26px\",\n      position: \"absolute\",\n      \"text-align\": \"center\",\n      \"z-index\": \"9999\",\n      color: \"var(--gc-light-background-text-color)\",\n      background: \"var(--gc-light-background)\",\n      cursor: \"default\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n  \"full-page-title\": {\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default formDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { getDeleteConfirmationMessage } from \"../../../utils/translations-helper\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteMultipleModal = (props) => {\n  const {\n    deleteMultipleModalOpen,\n    deleteMultipleModalClose,\n    deleteMultiple,\n    selectedIds,\n    visibleColumnsWithDetails,\n    rows,\n  } = props;\n\n  const classes = useStyles({ deleteMultipleModalOpen });\n\n  return (\n    <div\n      className={classes[\"modal-delete-multiple\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"action_delete\")}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={deleteMultipleModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <p>{getDeleteConfirmationMessage(selectedIds.length)}</p>\n            {deleteMultipleModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter((row) =>\n                  selectedIds.includes(row.grocery_crud_extras.primaryKeyValue)\n                )}\n              />\n            )}\n          </div>\n          {deleteMultipleModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteMultipleModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              {/* making sure that we have at least one selection to remove */}\n              {selectedIds.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger delete-single-confirmation-button\"\n                  onClick={deleteMultiple}\n                >\n                  {i18n.t(\"action_delete\")}\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteMultipleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteMultipleModal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteSingleModal = (props) => {\n  const {\n    deleteOneModalOpen,\n    deleteOneModalClose,\n    deleteOne,\n    visibleColumnsWithDetails,\n    primaryKeyValue,\n    rows,\n  } = props;\n\n  const classes = useStyles({ deleteOneModalOpen });\n\n  return (\n    <div\n      className={classes[\"modal-delete-one\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h4 className=\"modal-title\">{i18n.t(\"action_delete\")}</h4>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={deleteOneModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <p>{i18n.t(\"confirm_delete\")}</p>\n            {deleteOneModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter(\n                  (row) =>\n                    row.grocery_crud_extras.primaryKeyValue === primaryKeyValue\n                )}\n              />\n            )}\n          </div>\n          {deleteOneModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteOneModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger delete-single-confirmation-button\"\n                onClick={deleteOne}\n              >\n                {i18n.t(\"action_delete\")}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteSingleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteSingleModal;\n","const errorDialog = {\n  \"error-dialog\": {\n    composes: \"modal\",\n    \".modal&\": {\n      \"z-index\": \"1100\", // more than 1050 that is the default of bootstrap modal\n      display: ({ showError }) => (showError ? \"block\" : \"none\"),\n    },\n  },\n  \"error-details\": {\n    width: \"100%\",\n    height: \"200px\",\n  },\n};\n\nexport default errorDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport errorDialog from \"../skin/error-dialog/error-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(errorDialog);\n\nconst ErrorDialog = ({\n  closeModal,\n  showError,\n  details,\n  message,\n  validationError,\n  failureError,\n  errorsList,\n}) => {\n  const classes = useStyles({ showError });\n\n  const serverError = !failureError && !validationError;\n\n  return (\n    <div\n      className={classes[\"error-dialog\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"error_generic_title\")}</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={closeModal}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {validationError && (\n              <ul>\n                {Object.values(errorsList).map((error, index) => (\n                  <li key={index}>{error}</li>\n                ))}\n              </ul>\n            )}\n            {failureError && <div>{message}</div>}\n            {serverError && (\n              <>\n                <div>\n                  {i18n.t(\"error_message\")}: {message}\n                </div>\n                <div>{i18n.t(\"error_text\")}:</div>\n                <div>\n                  <textarea\n                    defaultValue={details || \"\"}\n                    className={classes[\"error-details\"]}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              data-dismiss=\"modal\"\n              onClick={closeModal}\n            >\n              {i18n.t(\"close_modal\")}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorDialog.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nErrorDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default ErrorDialog;\n","const filteringDialogSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"filtering-modal\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ filteringModalOpen }) =>\n        filteringModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ filteringModalOpen }) =>\n        filteringModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default filteringDialogSkin;\n","const filteringSkin = {\n  \"filtering-row\": {\n    composes: \"row\",\n    \"padding-top\": \"10px\",\n    \"padding-bottom\": \"10px\",\n  },\n  \"filtering-column\": {\n    // hardcoding the color here since we have an issue with third party components that inherits the color from the parent\n    color: \"#212529\",\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-select\": {\n    composes: \"form-control form-select\",\n  },\n  \"close-button\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default filteringSkin;\n","const ModalCloseButton = ({ className, onClick }) => {\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      data-dismiss=\"modal\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport default ModalCloseButton;\n","import { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport classNames from \"classnames\";\n\nimport filteringSkin from \"../skin/filtering/filtering.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport { deepCloneArray } from \"../../../utils/array-helper\";\nimport {\n  doTriggerFilterRefresh,\n  doTriggerFilterValueRefresh,\n  emptyFilterMapping,\n  getFilterValueFromDataType,\n} from \"../../../utils/filtering-helper\";\nimport FilterComparisonSelect from \"../../../components/filtering/filter-comparison-select\";\nimport {\n  getJssNameFromType,\n  getSearchInputComponent,\n} from \"../../../utils/field-types\";\nimport ModalCloseButton from \"../common/modal-close-button\";\nimport { fieldTypes } from \"../../../constants/field-types\";\n\nconst useStyles = createUseStyles(filteringSkin);\n\nconst Filtering = (props) => {\n  const {\n    onFilteringModalClose,\n    columns,\n    onSubmit: onSubmitCallback,\n    extendedSearchOperator,\n    extendedSearchData,\n    loadCssThirdParty,\n  } = props;\n\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      basic_operator: extendedSearchOperator || \"AND\",\n      extended_search:\n        extendedSearchData.length > 0\n          ? extendedSearchData\n          : [\n              {\n                name: columns[0].name,\n                filter: \"contains\",\n                value: \"\",\n              },\n            ],\n    },\n  });\n  const { fields, append, remove, insert } = useFieldArray({\n    control,\n    name: \"extended_search\",\n  });\n\n  const classes = useStyles(props);\n\n  const onSubmit = (data) => {\n    if (onSubmitCallback) {\n      // making sure that we are not sending any data by reference\n      let extendedSearch = [];\n      data[\"extended_search\"].forEach((searchData) => {\n        extendedSearch.push(searchData);\n      });\n      onSubmitCallback(\n        deepCloneArray({\n          ...data,\n          extended_search: extendedSearch,\n        })\n      );\n    }\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const numberOfFields = fields.length;\n\n  return (\n    <form\n      className=\"form-horizontal\"\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\">{i18n.t(\"filtering_filter_text\")}</h5>\n        <ModalCloseButton\n          className={classes[\"close-button\"]}\n          onClick={onFilteringModalClose}\n        />\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"row\">\n          <label className=\"col-md-3 control-label\">\n            {i18n.t(\"filtering_operator\")} :\n          </label>\n          <div className=\"col-md-3\">\n            <Controller\n              render={({ field: { onChange, onBlur, value } }) => (\n                <select\n                  name=\"basic_operator\"\n                  onChange={onChange}\n                  className=\"form-control form-select\"\n                  defaultValue={value}\n                >\n                  <option value=\"AND\">\n                    {i18n.t(\"filtering_and_statement\")}\n                  </option>\n                  <option value=\"OR\">{i18n.t(\"filtering_or_statement\")}</option>\n                </select>\n              )}\n              name=\"basic_operator\"\n              control={control}\n              defaultValue=\"AND\"\n            />\n          </div>\n        </div>\n        <div>\n          {fields.map((item, index) => {\n            const columnName = getValues(`extended_search[${index}]`).name;\n\n            const column = columns.find((column) => column.name === columnName);\n\n            return (\n              <div className={classes[\"filtering-row\"]} key={item.id}>\n                <div className=\"col-md-1\">\n                  <button\n                    className=\"btn btn-outline-dark btn-block\"\n                    type=\"button\"\n                    onClick={() => remove(index)}\n                    disabled={numberOfFields === 1}\n                  >\n                    <Icon icon=\"trash\" />\n                  </button>\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, onBlur, value } }) => {\n                      const name = `extended_search[${index}].name`;\n                      const options = columns\n                        .filter(\n                          (column) =>\n                            column.isSearchable &&\n                            column.dataType !== fieldTypes.INVISIBLE\n                        )\n                        .map((column) => ({\n                          value: column.name,\n                          label: column.displayAs,\n                        }));\n                      return (\n                        <Select\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.value;\n\n                            const oldColumn = columns.find(\n                              (column) => column.name === oldValues.name\n                            );\n                            const newColumn = columns.find(\n                              (column) => column.name === newValue\n                            );\n\n                            if (\n                              doTriggerFilterRefresh(\n                                oldColumn.dataType,\n                                newColumn.dataType\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: newValue,\n                                filter: getFilterValueFromDataType(\n                                  newColumn.dataType\n                                ),\n                                value: \"\",\n                              });\n                            }\n\n                            onChange({ target: { name, value: event.value } });\n                          }}\n                          name={name}\n                          value={options.filter(\n                            (option) => option.value === value\n                          )}\n                          options={options}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].name`}\n                    control={control}\n                    defaultValue={item.firstName} // make sure to set up defaultValue\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, value } }) => {\n                      return (\n                        <FilterComparisonSelect\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.target.value;\n                            if (\n                              doTriggerFilterValueRefresh(\n                                oldValues.filter,\n                                newValue\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: oldValues.name,\n                                filter: newValue,\n                                // null is an indication to not show an input\n                                value: emptyFilterMapping[newValue] ? null : \"\",\n                              });\n                            }\n\n                            onChange(event);\n                          }}\n                          className=\"form-control form-select\"\n                          name={`extended_search[${index}].filter`}\n                          value={value}\n                          dataType={column.dataType}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].filter`}\n                    control={control}\n                    defaultValue={item.filter}\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-5\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({\n                      field: { onChange, onBlur, value: originalValue },\n                    }) => {\n                      // null is an indication that we will not show an input\n                      if (originalValue === null) {\n                        return null;\n                      }\n\n                      const { dataType, permittedValues } = column;\n\n                      const displayAs =\n                        typeof originalValue === \"object\"\n                          ? originalValue.displayAs\n                          : \"\";\n                      const value =\n                        typeof originalValue === \"object\"\n                          ? originalValue.key\n                          : originalValue;\n\n                      const SearchInputComponent =\n                        getSearchInputComponent(dataType);\n\n                      return (\n                        <SearchInputComponent\n                          onChange={onChange}\n                          onBlur={onBlur}\n                          className={classes[getJssNameFromType(dataType)]}\n                          name={`extended_search[${index}].value`}\n                          value={value}\n                          required={true}\n                          permittedValues={permittedValues}\n                          fieldName={column.name}\n                          displayAs={displayAs}\n                          loadCssThirdParty={loadCssThirdParty}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].value`}\n                    control={control}\n                    defaultValue={item.value}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className={classes[\"filtering-row\"]}>\n          <div className=\"col-md-12\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              onClick={() => {\n                append({\n                  name: columns[0].name,\n                  filter: \"contains\",\n                  value: \"\",\n                });\n              }}\n            >\n              <Icon icon=\"plus\" />\n              &nbsp;\n              {i18n.t(\"filtering_add_more\")}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={onFilteringModalClose}\n        >\n          {i18n.t(\"filtering_cancel\")}\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-success delete-multiple-confirmation-button\"\n        >\n          {i18n.t(\"filtering_filter_text\")}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Filtering;\n","import { createUseStyles } from \"react-jss\";\nimport filteringDialogSkin from \"../skin/filtering/filtering-dialog.skin\";\nimport Filtering from \"./filtering\";\n\nconst useStyles = createUseStyles(filteringDialogSkin);\n\nconst FilteringModal = (props) => {\n  const { filteringModalOpen, onFilteringSubmit, columns } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classes[\"filtering-modal\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\">\n        <div className=\"modal-content\">\n          {filteringModalOpen && (\n            <Filtering\n              {...props}\n              columns={columns}\n              onSubmit={onFilteringSubmit}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilteringModal;\n","import { useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { formSubmitTransformation } from \"../../../utils/form-fields\";\nimport InputContainer from \"../../../components/common/input-container\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport {\n  EVENT_SET_FIELD_VALUE,\n  subscribeEvent,\n  unsubscribeEvent,\n} from \"../../../utils/events\";\n\nconst selectCloseModalOnSave = (state) => state.form.closeModalOnSave;\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Form = ({\n  configurationSettings,\n  formFields,\n  formIsReadOnly: readOnly,\n  formLoadingOverlay,\n  formModalClose,\n  formState,\n  loadCssThirdParty,\n  modalLoading,\n  onFormSubmit,\n  publishEvents,\n}) => {\n  const closeModalOnSave = useSelector(selectCloseModalOnSave);\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  const dispatch = useDispatch();\n  const { handleSubmit, control, register, setValue } = useForm();\n\n  useEffect(() => {\n    const handleCustomEvent = ({ detail }) => {\n      setValue(detail.fieldName, detail.fieldValue);\n    };\n\n    if (publishEvents) {\n      subscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n    }\n\n    // Clean up event listener on component unmount\n    return () => {\n      if (publishEvents) {\n        unsubscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n      }\n    };\n  }, [setValue, publishEvents]);\n\n  const onSubmit = (data) => {\n    const transformedData = formSubmitTransformation(data, formFields);\n\n    onFormSubmit({\n      formState,\n      data: transformedData,\n    });\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const classes = useStyles({\n    formFields,\n    formLoadingOverlay,\n    formModalClose,\n    modalLoading,\n    readOnly,\n    openInModal,\n  });\n\n  return (\n    <form\n      className={classes[\"form\"]}\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className={classes[\"form-fields\"]}>\n        {modalLoading\n          ? \"Loading...\"\n          : formFields.map((field) => {\n              return (\n                <InputContainer\n                  control={control}\n                  field={field}\n                  inputContainerClassName=\"col-sm-9\"\n                  jssClasses={classes}\n                  key={field.fieldName}\n                  labelClassName=\"col-sm-3 col-form-label\"\n                  labelContainerClassName=\"mb-3 row\"\n                  loadCssThirdParty={loadCssThirdParty}\n                  readOnly={readOnly}\n                  register={register}\n                  setValue={setValue}\n                  configurationSettings={configurationSettings}\n                  formState={formState}\n                />\n              );\n            })}\n      </div>\n      <div className=\"modal-footer\">\n        {!readOnly && (\n          <>\n            <label className=\"options-on-save\">\n              <input\n                type=\"checkbox\"\n                checked={closeModalOnSave}\n                onChange={() =>\n                  dispatch({\n                    type: formActions.TOGGLE_CLOSE_MODAL_ON_SAVE,\n                  })\n                }\n              />{\" \"}\n              {i18n.t(\"close_modal_on_save\")}\n            </label>{\" \"}\n            &nbsp; &nbsp;\n          </>\n        )}\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={formModalClose}\n        >\n          {i18n.t(\"close_modal\")}\n        </button>\n        {!readOnly && (\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {i18n.t(\"modal_save\")}\n          </button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  configurationSettings: PropTypes.object,\n};\n\nForm.defaultProps = {\n  configurationSettings: {},\n};\n\nexport default Form;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport { useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Modal = (props) => {\n  const { formModalLoading, formModalClose, formState, formModalOpen } = props;\n\n  const classes = useStyles(props);\n  const subject = useSelector((state) => state.configuration.subject);\n\n  return (\n    <div className={\n      classNames(classes[\"form-dialog\"], {\n          [classes[\"dialog-show\"]]: formModalOpen,\n          [classes[\"dialog-hide\"]]: !formModalOpen,\n      })\n    } tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">\n              {getTitleTranslation(formState, subject)}\n            </h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              aria-label=\"Close\"\n              onClick={formModalClose}\n            />\n          </div>\n          {formModalOpen && (\n            <div className=\"modal-body\">\n              {formModalLoading ? (\n                <div className={classes[\"skeleton-loader\"]} />\n              ) : (\n                <Form {...props} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default Modal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst FullPage = (props) => {\n  const { formModalLoading, formState, formModalOpen } = props;\n\n  const classes = useStyles(props);\n  const subject = useSelector((state) => state.configuration.subject);\n\n  return (\n    <div className={classes[\"full-page\"]} tabIndex=\"-1\">\n      <div className={classes[\"full-page-title\"]}>\n        {getTitleTranslation(formState, subject)}\n      </div>\n      <div>\n        {formModalOpen && (\n          <div className=\"modal-body\">\n            {formModalLoading ? (\n              <div className={classes[\"skeleton-loader\"]} />\n            ) : (\n              <Form {...props} />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nFullPage.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nFullPage.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default FullPage;\n","import Modal from \"./modal\";\nimport FullPage from \"./full-page\";\nimport { useSelector } from \"react-redux\";\n\nconst FormDialog = ({ ...props }) => {\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  return openInModal ? <Modal {...props} /> : <FullPage {...props} />;\n};\n\nexport default FormDialog;\n","import { createUseStyles } from \"react-jss\";\n\nimport groupButtonSkin from \"../skin/buttons/buttons.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport ButtonDropdown from \"./button-dropdown\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = createUseStyles(groupButtonSkin);\n\nconst GroupButtons = (props) => {\n  const { buttons, maxActionButtons, isMobileDevice } = props;\n  const classes = useStyles(props);\n\n  const maxButtons = isMobileDevice\n    ? maxActionButtons.mobile\n    : maxActionButtons.desktop;\n\n  const areWeGroupingButtons = buttons.length > maxButtons;\n\n  return (\n    <>\n      {buttons\n        // The logic here is that when we need to group buttons then we don't want to have the edge case situation\n        // when the grouping button is the last one button. In that case if we keep it as is (e.g. maxButtons -1)\n        // then we will have a More button that will lead to only one button which is undesirable.\n        .filter((__button, key) =>\n          areWeGroupingButtons ? key < maxButtons - 1 : key < maxButtons\n        )\n        .map((button) => (\n          <a\n            href={button.url ? button.url : \"\"}\n            className={classes[\"simple-button\"]}\n            key={button.key}\n            title={button.label}\n            target={button.newTab ? \"_blank\" : undefined}\n            rel=\"noreferrer\"\n            onClick={\n              button.onClick\n                ? (event) => {\n                    event.preventDefault();\n                    if (button.onClick) {\n                      button.onClick({\n                        primaryKeyValue: button.primaryKeyValue,\n                      });\n                    }\n                  }\n                : undefined\n            }\n          >\n            {button.icon && (\n              <>\n                <Icon icon={button.icon} />\n                &nbsp;\n              </>\n            )}\n            {button.text}\n          </a>\n        ))}\n      <ButtonDropdown\n        buttons={\n          areWeGroupingButtons\n            ? buttons.filter((__button, key) => key >= maxButtons - 1)\n            : []\n        }\n        buttonLabel={maxButtons === 1 ? i18n.t(\"actions\") : i18n.t(\"more\")}\n        leftSpace={true}\n      />\n    </>\n  );\n};\n\nGroupButtons.propTypes = {\n  buttons: PropTypes.array,\n  maxActionButtons: PropTypes.shape({\n    mobile: PropTypes.number,\n    desktop: PropTypes.number,\n  }),\n};\n\nGroupButtons.defaultProps = {\n  buttons: [],\n  maxActionButtons: {\n    mobile: 1,\n    desktop: 2,\n  },\n};\n\nexport default GroupButtons;\n","import ColumnsModal from \"./columns/columns-modal\";\nimport DatagridBody from \"./datagrid/datagrid-body\";\nimport DatagridCheckbox from \"./datagrid/datagrid-checkbox\";\nimport DatagridFooter from \"./datagrid/datagrid-footer\";\nimport DatagridHeader from \"./datagrid/datagrid-header\";\nimport DatagridTitle from \"./datagrid/datagrid-title\";\nimport DatagridTools from \"./datagrid/datagrid-tools\";\nimport DatagridWrapper from \"./datagrid/datagrid-wrapper\";\nimport DeleteMultipleModal from \"./delete-multiple/delete-multiple-modal\";\nimport DeleteSingleModal from \"./delete-single/delete-single-modal\";\nimport ErrorDialog from \"./error/error-dialog\";\nimport FilteringModal from \"./filtering/filtering-modal\";\nimport FormDialog from \"./form/form-dialog\";\nimport GroupButtons from \"./buttons/group-buttons\";\n\nconst themeComponents = {\n  ColumnsModal,\n  DatagridBody,\n  DatagridCheckbox,\n  DatagridFooter,\n  DatagridHeader,\n  DatagridTitle,\n  DatagridTools,\n  DatagridWrapper,\n  DeleteMultipleModal,\n  DeleteSingleModal,\n  ErrorDialog,\n  FilteringModal,\n  FormDialog,\n  GroupButtons,\n};\n\nexport default themeComponents;\n","export const selectColumnWidth = (state) => state.columnWidth;\n","const MultipleButtons = ({ buttons, Button }) => {\n  return (\n    <>\n      {buttons.map((button, index) => {\n        return (\n          <Button\n            key={index}\n            label={button.label}\n            icon={button.iconName}\n            href={button.url}\n            newTab={button.newTab}\n            link={true}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default MultipleButtons;\n","const widthChanging = {\n  display: \"block\",\n  position: \"absolute\",\n  right: \"-13px\",\n  height: \"39px\",\n  width: \"10px\",\n  cursor: \"col-resize\",\n  opacity: \"0.8\",\n  \"z-index\": \"10\",\n  \"&:hover\": {\n    background: \"var(--gc-emphasis-background-color)\",\n    cursor: \"col-resize\",\n  },\n  \"&:focus, &:active\": {\n    background: \"transparent\",\n    cursor: \"col-resize\",\n  },\n};\n\nconst miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"interactive-grid\": {\n    composes: \"table table-bordered\",\n    width: ({ columnWidth }) =>\n      typeof columnWidth === \"object\" && Object.keys(columnWidth).length > 0\n        ? \"auto\"\n        : \"100%\",\n  },\n  \"scrolling-wrapper\": {\n    composes: \"gc-mini-grid-scrolling-wrapper\",\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n    \"margin-bottom\": \"10px\",\n  },\n  \"width-changing\": {\n    ...widthChanging,\n  },\n  \"width-changing-last\": {\n    ...widthChanging,\n    right: \"-8px\",\n  },\n  \"header-column\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n    \"min-width\": \"100px\",\n    \"white-space\": \"nowrap\",\n    \"padding-right\": \"10px\",\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === fieldTypes.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          permittedValues: column.permittedValues,\n                          fieldName: column.name,\n                          locale,\n                          dateFormat,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n","import { columnWidthActions } from \"../actions/column-width-actions\";\n\nlet previousSiblingElement;\nlet parentThElement;\nlet startOffsetX;\nlet startClientX;\nlet columnWidth;\nconst MIN_WIDTH = 100;\nconst EXTRA_PADDING = 13;\n\nexport const columnWidthOnDragStart = (event) => {\n  const currentTarget = event.currentTarget;\n\n  currentTarget.closest(\"th\").style.background = \"var(--gc-dark-background)\";\n  currentTarget.style.opacity = \"0\";\n\n  previousSiblingElement = event.currentTarget.previousSibling;\n  parentThElement = event.currentTarget.closest(\"th\");\n\n  previousSiblingElement.style.background =\n    \"var(--gc-emphasis-background-color)\";\n  previousSiblingElement.style.right = \"0\";\n  previousSiblingElement.style.position = \"fixed\";\n  previousSiblingElement.style.left = event.clientX - EXTRA_PADDING + \"px\";\n  previousSiblingElement.style.display = \"block\";\n\n  startClientX = event.clientX;\n  columnWidth = parentThElement.clientWidth;\n  startOffsetX = parentThElement.offsetLeft + columnWidth;\n};\n\nexport const columnWidthOnDrag = (event) => {\n  if (previousSiblingElement !== null) {\n    previousSiblingElement.style.left =\n      startOffsetX + event.clientX - startClientX + \"px\";\n  }\n};\n\nexport const columnChangeWidthAction = (columnName, columnWidth, dispatch) => {\n  dispatch({\n    type: columnWidthActions.CHANGE_WIDTH,\n    columnName,\n    columnWidth,\n  });\n};\n\nexport const columnWidthOnDragEnd = (event, columnName, dispatch) => {\n  if (parentThElement !== null) {\n    parentThElement.style.removeProperty(\"background\");\n    columnChangeWidthAction(\n      columnName,\n      Math.max(\n        columnWidth + event.clientX - startClientX - EXTRA_PADDING,\n        MIN_WIDTH\n      ),\n      dispatch\n    );\n  }\n  event.currentTarget.style.removeProperty(\"right\");\n  event.currentTarget.style.removeProperty(\"background\");\n  event.currentTarget.style.removeProperty(\"position\");\n  event.currentTarget.style.removeProperty(\"left\");\n  event.currentTarget.style.removeProperty(\"opacity\");\n\n  previousSiblingElement.style.removeProperty(\"right\");\n  previousSiblingElement.style.removeProperty(\"background\");\n  previousSiblingElement.style.removeProperty(\"position\");\n  previousSiblingElement.style.removeProperty(\"left\");\n  previousSiblingElement.style.removeProperty(\"opacity\");\n\n  document.body.style.removeProperty(\"cursor\");\n};\n","import { useSelector } from \"react-redux\";\nimport { useEffect, useRef } from \"react\";\n\nconst selectMasterDetailApiUrl = (state) => state.masterDetail.apiUrl;\nconst groceryCrudLoader = require(\"../../grocery-crud-loader\").default;\n\nconst MasterDetail = ({ primaryKeyValue, skin, theme, publishEvents }) => {\n  const apiUrl = useSelector(selectMasterDetailApiUrl);\n  const datagridRef = useRef(null);\n\n  useEffect(() => {\n    if (datagridRef.current) {\n      groceryCrudLoader(datagridRef.current);\n    }\n  }, [datagridRef]);\n\n  const uniqueId = Date.now();\n\n  return (\n    <div\n      ref={datagridRef}\n      className=\"grocery-crud\"\n      data-api-url={apiUrl}\n      data-unique-id={uniqueId}\n      data-skin={skin}\n      data-theme={theme}\n      data-master-primary-key-value={primaryKeyValue}\n      data-load-css-theme=\"false\"\n      data-load-css-icons=\"false\"\n      data-remember-state=\"false\"\n      data-publish-events={publishEvents ? \"true\" : \"false\"}\n    ></div>\n  );\n};\n\nexport default MasterDetail;\n","import PropTypes from \"prop-types\";\nimport {\n  getComponentFromDataType,\n  getMountingCallbacks,\n} from \"../../utils/field-types\";\nimport { useSelector } from \"react-redux\";\n\nconst selectPrimaryKeyValue = (state) => state.form.primaryKeyValue;\n\nconst Input = ({\n  className,\n  control,\n  dataType,\n  fieldOptions,\n  id,\n  isDependencyField,\n  isNullable,\n  loadCssThirdParty,\n  name,\n  permittedValues,\n  readOnly,\n  register,\n  setValue,\n  value,\n  valueLabel,\n  formState,\n  configurationSettings,\n}) => {\n  const primaryKeyValue = useSelector(selectPrimaryKeyValue);\n\n  const InputComponent = getComponentFromDataType({ dataType, readOnly });\n  const { onMount, onUnmount } = getMountingCallbacks({\n    configurationSettings,\n    dataType,\n    fieldName: name,\n    formState,\n  });\n\n  return (\n    <InputComponent\n      className={className}\n      control={control}\n      fieldOptions={fieldOptions}\n      id={id}\n      isDependencyField={isDependencyField}\n      isNullable={isNullable}\n      loadCssThirdParty={loadCssThirdParty}\n      name={name}\n      permittedValues={permittedValues}\n      primaryKeyValue={primaryKeyValue}\n      register={register}\n      setValue={setValue}\n      value={value}\n      valueLabel={valueLabel}\n      onMount={onMount}\n      onUnmount={onUnmount}\n    />\n  );\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  control: PropTypes.object,\n  dataType: PropTypes.string,\n  id: PropTypes.string,\n  isNullable: PropTypes.bool,\n  name: PropTypes.string,\n  permittedValues: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  readOnly: PropTypes.bool,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.number,\n  ]),\n};\n\nexport default Input;\n","import PropTypes from \"prop-types\";\nimport Input from \"./input\";\nimport { fieldTypes } from \"../../constants/field-types\";\nimport { getJssNameFromType } from \"../../utils/field-types\";\nconst InputContainer = ({\n  control,\n  field,\n  inputClassName,\n  inputContainerClassName,\n  jssClasses,\n  labelClassName,\n  labelContainerClassName,\n  loadCssThirdParty,\n  readOnly,\n  register,\n  setValue,\n  configurationSettings,\n  formState,\n}) => {\n  const isReadOnly = readOnly || field.isReadOnly;\n  const isVisibleField = field.dataType !== fieldTypes.HIDDEN;\n\n  if (isVisibleField) {\n    return (\n      <div className={labelContainerClassName}>\n        <label\n          className={labelClassName}\n          htmlFor={`gc-form-${field.fieldName}`}\n        >\n          {field.isRequired && <span>*</span>}\n          {field.displayAs}\n        </label>\n        <div className={inputContainerClassName}>\n          <Input\n            className={\n              jssClasses[getJssNameFromType(field.dataType, isReadOnly)]\n            }\n            control={control}\n            dataType={field.dataType}\n            fieldOptions={field.options || {}}\n            id={`gc-form-${field.fieldName}`}\n            isDependencyField={field.isDependencyField}\n            isNullable={field.isNullable}\n            loadCssThirdParty={loadCssThirdParty}\n            name={field.fieldName}\n            permittedValues={field.permittedValues}\n            readOnly={isReadOnly}\n            register={register}\n            setValue={setValue}\n            value={field.fieldValue}\n            valueLabel={field.valueLabel}\n            formState={formState}\n            configurationSettings={configurationSettings}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // Not visible fields (e.g. hidden)\n  return (\n    <Input\n      className={inputClassName}\n      control={control}\n      dataType={field.dataType}\n      id={`gc-form-${field.fieldName}`}\n      isNullable={field.isNullable}\n      name={field.fieldName}\n      readOnly={isReadOnly}\n      value={field.fieldValue}\n    />\n  );\n};\n\nInputContainer.propTypes = {\n  jssClasses: PropTypes.object,\n};\n\nInputContainer.defaultProps = {\n  jssClasses: {},\n};\n\nexport default InputContainer;\n"],"sourceRoot":""}