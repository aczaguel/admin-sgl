{"version":3,"sources":["themes/tailwind-v2/skin/columns/columns-modal.skin.js","themes/tailwind-v2/columns/columns-modal.jsx","themes/tailwind-v2/skin/datagrid/body.skin.js","themes/tailwind-v2/datagrid/datagrid-body.jsx","themes/tailwind-v2/skin/datagrid/checkbox.skin.js","themes/tailwind-v2/datagrid/datagrid-checkbox.jsx","themes/tailwind-v2/skin/datagrid/footer.skin.js","themes/tailwind-v2/datagrid/datagrid-footer.jsx","themes/tailwind-v2/skin/datagrid/header.skin.js","themes/tailwind-v2/skin/buttons/buttons.skin.js","themes/tailwind-v2/buttons/button.jsx","themes/tailwind-v2/datagrid/datagrid-header.jsx","themes/tailwind-v2/datagrid/datagrid-title.jsx","themes/tailwind-v2/skin/datagrid/tools.skin.js","themes/tailwind-v2/skin/buttons/button-dropdown.skin.js","themes/tailwind-v2/buttons/button-dropdown-list.jsx","themes/tailwind-v2/buttons/button-dropdown.jsx","themes/tailwind-v2/datagrid/datagrid-tools.jsx","themes/tailwind-v2/skin/datagrid/wrapper.skin.js","themes/tailwind-v2/datagrid/datagrid-wrapper.jsx","themes/tailwind-v2/skin/form-dialog/form-dialog.skin.js","themes/tailwind-v2/skin/datagrid/datagrid-mini.skin.js","themes/tailwind-v2/datagrid/datagrid-mini-grid.jsx","themes/tailwind-v2/delete-multiple/delete-multiple-modal.jsx","themes/tailwind-v2/delete-single/delete-single-modal.jsx","themes/tailwind-v2/skin/error-dialog/error-dialog.skin.js","themes/tailwind-v2/error/error-dialog.jsx","themes/tailwind-v2/skin/filtering/filtering-dialog.skin.js","themes/tailwind-v2/skin/filtering/filtering.skin.js","themes/tailwind-v2/filtering/filtering.jsx","themes/tailwind-v2/filtering/filtering-modal.jsx","themes/tailwind-v2/common/modal-header.jsx","themes/tailwind-v2/form/form.jsx","themes/tailwind-v2/form/form-dialog.jsx","themes/tailwind-v2/buttons/group-buttons.jsx","themes/tailwind-v2/index.js","selectors/column-width.js","themes/bootstrap-v5/skin/datagrid/datagrid-mini.skin.js","themes/bootstrap-v5/datagrid/datagrid-mini-grid.jsx"],"names":["columnsModalSkin","opacity","composes","display","_ref","columnsModalOpen","animation","_ref2","position","useStyles","createUseStyles","ColumnsModal","columns","onColumnsModalClose","selectColumnsAllOrNone","toggleVisibleColumn","visibleColumns","classes","_jsx","className","tabIndex","role","children","_jsxs","i18n","t","type","onClick","_Fragment","onChange","checked","length","map","column","includes","name","displayAs","bodySkin","overflow","selectLocalCode","state","configuration","locale","selectDateFormat","dateFormat","DatagridBody","props","useSelector","rows","hasActions","lastPrimaryKeyValue","rowData","numRow","grocery_crud_extras","primaryKeyValue","undefined","ActionsColumn","formatDatagridValue","dataType","fieldName","fieldOptions","options","permittedValues","checkboxSkin","checkbox","DatagridCheckbox","footerSkin","footer","padding","justifyContent","alignItems","paddingRight","pagination","margin","borderRadius","width","transform","loader","border","height","DatagridFooter","filteredTotalEntries","goToFirstPage","goToLastPage","goToNextPage","goToPreviousPage","lastPage","page","currentPage","pageChange","totalEntries","perPage","perPageChange","forceSearch","pagingLoading","pagingOptions","value","pageOption","DatagridPagingItemsLabel","classNames","Icon","icon","event","disabled","onKeyUp","key","headerSkin","cursor","background","groupButtonSkin","buttonsSkin","Button","label","link","href","DatagridHeader","columnOrdering","columnSearch","columnSearchValues","columnSearchValuesDisplayAs","extendedSearchData","onMultipleDeleteModalOpen","onSelectRowAllOrNone","actionButtonHasText","selectRowsAllOrNoneChecked","selectedIds","sorting","sortingFor","loadCssThirdParty","isMobileDevice","hasQuickSearch","columnName","InputSearchComponent","getSearchInputComponent","getClassNamesByDataType","placeholder","searchValue","target","searchValueDisplayAs","requireForceSearchOnChange","defaultProps","DatagridTitle","title","toolsSkin","buttonDropdown","left","top","opened","right","_ref3","direction","DROPDOWN_DIRECTION","RIGHT","_ref4","leftSpace","ButtonDropdownList","buttons","button","url","newTab","rel","preventDefault","text","ButtonDropdown","buttonIcon","buttonLabel","buttonDropdownRef","useRef","setOpen","useState","ref","onBlur","setTimeout","tabindex","DatagridTools","apiUrl","hasAdd","onAdd","onClearCache","onClearFiltering","onFilteringModalOpen","onOrderingReset","onRefresh","subject","visibleColumnsAsShortString","dispatch","useDispatch","hasSettings","hasPrint","hasFilters","hasColumnsButton","hasExportData","hasExportPdf","hasExportExcel","hasDatagridTools","dataForExport","getTitleTranslation","formActions","ADD","getFiltersTranslation","columnsActions","MODAL_OPEN","onColumnsModalOpen","printUrl","excelExportUrl","pdfExportUrl","error","console","log","FatalErrorMessage","wrapperSkin","wrapper","DatagridWrapper","formDialog","to","formModalOpen","deleteOneModalOpen","deleteMultipleModalOpen","miniGridSkin","DatagridMiniGrid","fieldTypes","INVISIBLE","DeleteMultipleModal","deleteMultipleModalClose","deleteMultiple","visibleColumnsWithDetails","fill","viewBox","xmlns","fillRule","d","clipRule","getDeleteConfirmationMessage","filter","row","DeleteSingleModal","deleteOneModalClose","deleteOne","errorDialog","showError","ErrorDialog","closeModal","details","message","defaultValue","formFields","filteringDialogSkin","filteringModalOpen","filteringSkin","Filtering","onFilteringModalClose","onSubmit","onSubmitCallback","extendedSearchOperator","control","handleSubmit","getValues","useForm","defaultValues","basic_operator","extended_search","fields","append","remove","insert","useFieldArray","numberOfFields","data","extendedSearch","forEach","searchData","push","deepCloneArray","onError","errors","e","Controller","render","field","item","index","concat","find","oldValues","newValue","oldColumn","newColumn","doTriggerFilterRefresh","getFilterValueFromDataType","isSearchable","firstName","FilterComparisonSelect","doTriggerFilterValueRefresh","emptyFilterMapping","SearchInputComponent","getJssNameFromType","required","id","FilteringModal","onFilteringSubmit","ModalHeader","onClose","Form","modalLoading","formModalClose","formState","onFormSubmit","readOnly","publishEvents","setValue","useEffect","handleCustomEvent","detail","fieldValue","subscribeEvent","EVENT_SET_FIELD_VALUE","unsubscribeEvent","htmlFor","InputText","FormDialog","formIsReadOnly","GroupButtons","maxButtons","__button","themeComponents","selectColumnWidth","columnWidth","widthChanging","Object","keys","description"],"mappings":"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","file":"static/js/102.90b99ca6.chunk.js","sourcesContent":["const columnsModalSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"columns-modal\": {\n    composes: \"modal\",\n    display: ({ columnsModalOpen }) => (columnsModalOpen ? \"block\" : \"none\"),\n    opacity: \"0\",\n    \"z-index\": \"10\",\n    animation: ({ columnsModalOpen }) =>\n      columnsModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default columnsModalSkin;\n","import { createUseStyles } from \"react-jss\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport columnsModalSkin from \"../skin/columns/columns-modal.skin\";\n\nconst useStyles = createUseStyles(columnsModalSkin);\n\nconst ColumnsModal = ({\n  columns,\n  columnsModalOpen,\n  onColumnsModalClose,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n}) => {\n  const classes = useStyles({ columnsModalOpen });\n\n  return (\n    <div className={classes[\"columns-modal\"]} tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog modal-l\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"columns\")}</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={onColumnsModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {columnsModalOpen && (\n              <>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => selectColumnsAllOrNone(columns)}\n                    checked={visibleColumns.length === columns.length}\n                  />\n                </div>\n                {columns.map((column) => (\n                  <div key={column.name}>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={visibleColumns.includes(column.name)}\n                        onChange={() =>\n                          toggleVisibleColumn(column.name, columns)\n                        }\n                      />{\" \"}\n                      {column.displayAs}\n                    </label>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnsModal;\n","const bodySkin = {\n  \"column-text\": {\n    overflow: \"hidden\",\n    \"max-width\": \"350px\",\n    \"text-overflow\": \"ellipsis\",\n    \"white-space\": \"nowrap\",\n    \"vertical-align\": \"middle\",\n  },\n  \"column-action\": {\n    composes: \"border px-4 py-2 font-normal flex\",\n    \"white-space\": \"nowrap\",\n    \"align-items\": \"center\",\n  },\n};\n\nexport default bodySkin;\n","import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport ActionsColumn from \"../../../components/datagrid/body/actions-column\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\n\nconst useStyles = createUseStyles(bodySkin);\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridBody = (props) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const { rows, visibleColumns, hasActions, lastPrimaryKeyValue } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <tbody className={classes[\"table-body\"]}>\n      {rows.map((rowData, numRow) => (\n        <tr\n          key={numRow}\n          className={\n            lastPrimaryKeyValue &&\n            lastPrimaryKeyValue === rowData.grocery_crud_extras.primaryKeyValue\n              ? classes[\"animation-flash\"]\n              : undefined\n          }\n        >\n          {hasActions && visibleColumns.length > 0 && (\n            <td key=\"column__action\" className={classes[\"column-action\"]}>\n              <ActionsColumn\n                {...props}\n                primaryKeyValue={rowData.grocery_crud_extras.primaryKeyValue}\n              />\n            </td>\n          )}\n          {visibleColumns.map((column) => (\n            <td key={column.name}>\n              <div className={classes[\"column-text\"]}>\n                {formatDatagridValue(rowData[column.name], column.dataType, {\n                  dateFormat,\n                  fieldName: column.name,\n                  fieldOptions: column.options,\n                  locale,\n                  permittedValues: column.permittedValues,\n                  primaryKeyValue: rowData.grocery_crud_extras.primaryKeyValue,\n                })}\n              </div>\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\nDatagridBody.propTypes = {\n  visibleColumns: PropTypes.array,\n  hasActions: PropTypes.bool,\n  rows: PropTypes.array,\n};\n\nexport default DatagridBody;\n","const checkboxSkin = {\n  checkbox: {\n    \"margin-right\": \"10px\",\n  },\n};\n\nexport default checkboxSkin;\n","import { createUseStyles } from \"react-jss\";\nimport checkboxSkin from \"../skin/datagrid/checkbox.skin\";\n\nconst useStyles = createUseStyles(checkboxSkin);\n\nconst DatagridCheckbox = ({ onChange, checked }) => {\n  const classes = useStyles();\n\n  return (\n    <input\n      type=\"checkbox\"\n      className={classes[\"checkbox\"]}\n      onChange={onChange}\n      checked={checked}\n    />\n  );\n};\n\nexport default DatagridCheckbox;\n","const footerSkin = {\n  footer: {\n    display: \"flex\",\n    padding: \"5px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  \"footer-child\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& > div\": {\n      paddingRight: \"5px\",\n    },\n  },\n  pagination: {\n    composes: \"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\",\n    margin: \"0\",\n  },\n  \"page-number\": {\n    composes:\n      \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium\",\n    borderRadius: \"0\",\n    width: \"100px\",\n  },\n  \"@keyframes spin\": {\n    \"0%\": { transform: \"rotate(0deg)\" },\n    \"100%\": { transform: \"rotate(360deg)\" },\n  },\n  loader: {\n    border: \"4px solid #f3f3f3\",\n    \"border-radius\": \"50%\",\n    \"border-top\": \"4px solid #3498db\",\n    width: \"16px\",\n    height: \"16px\",\n    \"-webkit-animation\": \"$spin 2s linear infinite\" /* Safari */,\n    animation: \"$spin 2s linear infinite\",\n    \"margin-right\": \"10px\",\n  },\n};\n\nexport default footerSkin;\n","import { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport DatagridPagingItemsLabel from \"../../../components/datagrid/footer/datagrid-paging-items-label\";\nimport footerSkin from \"../skin/datagrid/footer.skin\";\n\nconst useStyles = createUseStyles(footerSkin);\n\nconst DatagridFooter = (props) => {\n  const classes = useStyles(props);\n\n  const {\n    filteredTotalEntries,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    lastPage,\n    page: currentPage,\n    pageChange,\n    totalEntries,\n    perPage,\n    perPageChange,\n    forceSearch,\n    pagingLoading,\n    pagingOptions,\n  } = props;\n\n  return (\n    <div className={classes.footer}>\n      <div className={classes[\"footer-child\"]}>\n        <div>Show</div>\n        <div className=\"floatL r5 l5 t3 per-page-container\">\n          <select\n            className=\"form-control form-select\"\n            onChange={perPageChange}\n            value={perPage}\n          >\n            {pagingOptions.map((pageOption) => (\n              <option key={pageOption} value={pageOption}>\n                {pageOption}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>entries</div>\n      </div>\n      <div className={classes[\"footer-child\"]}>\n        {pagingLoading && <div className={classes.loader} />}\n        {filteredTotalEntries && !pagingLoading ? (\n          <div>\n            <DatagridPagingItemsLabel\n              currentPage={currentPage}\n              totalEntries={totalEntries}\n              perPage={perPage}\n              filteredTotalEntries={filteredTotalEntries}\n            />\n          </div>\n        ) : null}\n        <div>\n          <div className={classes.pagination}>\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === 1,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage > 1,\n                }\n              )}\n              onClick={() => goToFirstPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"step-backward\" />\n            </button>\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === 1,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage > 1,\n                }\n              )}\n              onClick={() => goToPreviousPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"chevron-left\" />\n            </button>\n            <input\n              type=\"number\"\n              className={classes[\"page-number\"]}\n              value={currentPage}\n              onChange={(event) => pageChange(event, currentPage, lastPage)}\n              disabled={filteredTotalEntries === 0}\n              onKeyUp={(event) => {\n                if (event.key === \"Enter\") {\n                  forceSearch();\n                }\n              }}\n            />\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === lastPage,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage < lastPage,\n                }\n              )}\n              onClick={() => goToNextPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"chevron-right\" />\n            </button>\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === lastPage,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage < lastPage,\n                }\n              )}\n              onClick={() => goToLastPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"step-forward\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDatagridFooter.propTypes = {\n  page: PropTypes.number,\n};\n\nexport default DatagridFooter;\n","const headerSkin = {\n  \"search-column\": {\n    \"min-width\": \"160px\",\n  },\n  \"table-th-with-ordering\": {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      background: \"var(--gc-table-hover-background)\",\n    },\n  },\n  \"actions-column-header\": {\n    \"align-items\": \"center\",\n    display: \"flex\",\n    height: \"39px\",\n  },\n  \"with-ordering\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n  },\n  \"input-text\": {\n    composes: \"px-4 py-3 border border-gray-200 w-full\",\n  },\n  \"input-select\": {\n    composes: \"px-4 py-3 border border-gray-200 w-full\",\n  },\n  \"input-select-search\": {},\n};\n\nexport default headerSkin;\n","const groupButtonSkin = {\n  \"simple-button\": {\n    composes:\n      \"bg-white hover:bg-gray-50 text-gray-700 font-bold py-2 px-4 rounded border border-gray-700 shadow-sm text-gray-700 hover:bg-gray-100 focus:ring-4 focus:ring-gray-300\",\n    \"margin-right\": \"5px\",\n  },\n  \"buttons-group\": {\n    display: \"flex\",\n  },\n};\n\nexport default groupButtonSkin;\n","import Icon from \"../../../components/common/icon\";\nimport buttonsSkin from \"../skin/buttons/buttons.skin\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles(buttonsSkin);\n\nconst Button = ({ onClick, icon, label, link = false, href }) => {\n  const classes = useStyles();\n\n  if (link) {\n    return (\n      <a className={classes[\"simple-button\"]} onClick={onClick} href={href}>\n        {icon && (\n          <>\n            <Icon icon={icon}></Icon>&nbsp;\n          </>\n        )}\n        {label}\n      </a>\n    );\n  }\n\n  return (\n    <button className={classes[\"simple-button\"]} onClick={onClick}>\n      {icon && (\n        <>\n          <Icon icon={icon}></Icon>&nbsp;\n        </>\n      )}\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport headerSkin from \"../skin/datagrid/header.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getSearchInputComponent,\n  requireForceSearchOnChange,\n} from \"../../../utils/field-types\";\nimport { getClassNamesByDataType } from \"../../../utils/datagrid\";\nimport React from \"react\";\nimport Button from \"../buttons/button\";\n\nconst useStyles = createUseStyles(headerSkin);\n\nconst DatagridHeader = (props) => {\n  const {\n    DatagridCheckbox,\n    columnOrdering,\n    columnSearch,\n    columnSearchValues,\n    columnSearchValuesDisplayAs,\n    extendedSearchData,\n    forceSearch,\n    hasActions,\n    onMultipleDeleteModalOpen,\n    onSelectRowAllOrNone,\n    options: { actionButtonHasText },\n    selectRowsAllOrNoneChecked,\n    selectedIds,\n    sorting,\n    sortingFor,\n    visibleColumns,\n    loadCssThirdParty,\n    isMobileDevice,\n  } = props;\n\n  const classes = useStyles(props);\n\n  const hasQuickSearch = extendedSearchData.length === 0;\n\n  return (\n    <thead>\n      <tr>\n        {hasActions && visibleColumns.length > 0 && (\n          <th>{i18n.t(\"actions\")}</th>\n        )}\n        {visibleColumns.map((column) => (\n          <th\n            className={classes[\"table-th-with-ordering\"]}\n            key={column.name}\n            onClick={() =>\n              columnOrdering({\n                columnName: column.name,\n                sorting: sorting === \"\" || sorting === \"desc\" ? \"asc\" : \"desc\",\n              })\n            }\n          >\n            <div className={classes[\"with-ordering\"]}>\n              <span>{column.displayAs}</span>\n              {sortingFor === column.name ? (\n                <Icon\n                  icon={\n                    sorting === \"asc\"\n                      ? \"sort-amount-down-alt\"\n                      : \"sort-amount-down\"\n                  }\n                />\n              ) : (\n                <Icon icon=\"sort\" />\n              )}\n            </div>\n          </th>\n        ))}\n      </tr>\n      <tr>\n        {hasActions && visibleColumns.length > 0 && (\n          <td>\n            <div className={classes[\"actions-column-header\"]}>\n              {!isMobileDevice && (\n                <>\n                  <DatagridCheckbox\n                    onChange={onSelectRowAllOrNone}\n                    checked={selectRowsAllOrNoneChecked}\n                  />\n                  {selectedIds.length > 0 && (\n                    <Button\n                      onClick={onMultipleDeleteModalOpen}\n                      icon=\"trash\"\n                      label={actionButtonHasText ? i18n.t(\"action_delete\") : \"\"}\n                    />\n                  )}\n                </>\n              )}\n            </div>\n          </td>\n        )}\n        {visibleColumns.map((column) => {\n          const InputSearchComponent = getSearchInputComponent(column.dataType);\n\n          return (\n            <td key={column.name} className={classes[\"search-column\"]}>\n              {hasQuickSearch && (\n                <InputSearchComponent\n                  className={classes[getClassNamesByDataType(column.dataType)]}\n                  placeholder={i18n.t(\"quick_search\")}\n                  permittedValues={column.permittedValues}\n                  loadCssThirdParty={loadCssThirdParty}\n                  onChange={(event) => {\n                    columnSearch({\n                      columnName: column.name,\n                      searchValue:\n                        typeof event.target.value === \"object\"\n                          ? event.target.value.key\n                          : event.target.value,\n                      searchValueDisplayAs:\n                        typeof event.target.value === \"object\"\n                          ? event.target.value.displayAs\n                          : \"\",\n                    });\n                    if (requireForceSearchOnChange(column.dataType) === true) {\n                      forceSearch();\n                    }\n                  }}\n                  onKeyUp={(event) => {\n                    if (event.key === \"Enter\") {\n                      forceSearch();\n                    }\n                  }}\n                  value={\n                    columnSearchValues[column.name]\n                      ? columnSearchValues[column.name]\n                      : \"\"\n                  }\n                  displayAs={\n                    columnSearchValuesDisplayAs[column.name]\n                      ? columnSearchValuesDisplayAs[column.name]\n                      : \"\"\n                  }\n                  fieldName={column.name}\n                />\n              )}\n            </td>\n          );\n        })}\n      </tr>\n    </thead>\n  );\n};\n\nDatagridHeader.propTypes = {\n  hasActions: PropTypes.bool,\n  visibleColumns: PropTypes.array,\n};\n\nDatagridHeader.defaultProps = {\n  hasActions: false,\n  visibleColumns: [],\n  options: {\n    actionButtonHasText: true,\n  },\n};\n\nexport default DatagridHeader;\n","const DatagridTitle = ({ title }) => {\n  return <div className=\"gc-datagrid-title\">{title}</div>;\n};\n\nexport default DatagridTitle;\n","const toolsSkin = {\n  \"datagrid-tools\": {\n    position: \"relative\",\n    padding: \"10px\",\n    \"border-left\": \"1px solid var(--gc-border-separator-color)\",\n    \"border-right\": \"1px solid var(--gc-border-separator-color)\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n  },\n  \"simple-button\": {\n    composes:\n      \"bg-white hover:bg-gray-50 text-gray-700 font-bold py-2 px-4 rounded border border-gray-700 shadow-sm text-gray-700 hover:bg-gray-100\",\n    \"margin-right\": \"5px\",\n  },\n  \"tools-container\": {\n    display: \"flex\",\n  },\n};\n\nexport default toolsSkin;\n","import { DROPDOWN_DIRECTION } from \"../../../../constants/dropdown\";\n\nconst buttonDropdown = {\n  \"dropdown-menu\": {\n    composes:\n      \"origin-top-right absolute right-0 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 text-gray-700 font-bold focus:outline-none\",\n    left: \"auto\",\n    top: \"auto\",\n    display: ({ opened }) => (opened ? \"block\" : \"none\"),\n    opacity: ({ opened }) => (opened ? \"1\" : \"0\"),\n    right: ({ direction }) =>\n      direction === DROPDOWN_DIRECTION.RIGHT ? \"0\" : \"auto\",\n    \"margin-top\": \"38px\",\n    \"z-index\": \"100\",\n  },\n  \"dropdown-menu-container\": {\n    composes: \"inline-flex\",\n    \"margin-left\": ({ leftSpace }) => (leftSpace ? \"5px\" : \"0\"),\n  },\n  \"dropdown-menu-button\": {\n    composes:\n      \"inline-flex justify-center bg-white hover:bg-gray-50 text-gray-700 font-bold py-2 px-4 rounded border border-gray-700 shadow-sm hover:bg-gray-100\",\n    \"align-items\": \"center\",\n  },\n};\n\nexport default buttonDropdown;\n","import Icon from \"../../../components/common/icon\";\n\nconst ButtonDropdownList = ({ buttons }) => {\n  return (\n    <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-20\">\n      {buttons.map((button) => (\n        <li>\n          <a\n            key={button.key}\n            href={button.url ? button.url : \"\"}\n            target={button.newTab ? \"_blank\" : undefined}\n            className=\"text-gray-700 block px-4 py-2 text-sm hover:bg-gray-100\"\n            rel=\"noreferrer\"\n            onClick={\n              button.onClick\n                ? (event) => {\n                    event.preventDefault();\n                    if (button.onClick) {\n                      button.onClick({\n                        primaryKeyValue: button.primaryKeyValue,\n                      });\n                    }\n                  }\n                : undefined\n            }\n          >\n            {button.icon && (\n              <>\n                <Icon icon={button.icon} />\n                &nbsp;&nbsp;\n              </>\n            )}\n            {button.text}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ButtonDropdownList;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\nimport { useState, useRef } from \"react\";\n\nimport buttonDropdown from \"../skin/buttons/button-dropdown.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport ButtonDropdownList from \"./button-dropdown-list\";\n\nconst useStyles = createUseStyles(buttonDropdown);\n\nconst ButtonDropdown = ({\n  buttons,\n  buttonIcon,\n  buttonLabel,\n  direction,\n  leftSpace,\n}) => {\n  const buttonDropdownRef = useRef(null);\n  const [opened, setOpen] = useState(false);\n\n  function openToggle() {\n    setOpen(!opened);\n  }\n\n  function close(event) {\n    // Having enough time to close in case you press any click into the dropdown\n    setTimeout(() => {\n      setOpen(false);\n    }, 200);\n  }\n\n  const classes = useStyles({ opened, direction, leftSpace });\n\n  if (buttons.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={classes[\"dropdown-menu-container\"]} ref={buttonDropdownRef}>\n      <button\n        className={classes[\"dropdown-menu-button\"]}\n        onClick={openToggle}\n        onBlur={close}\n      >\n        {buttonIcon && (\n          <>\n            <Icon icon={buttonIcon} />\n            &nbsp;\n          </>\n        )}\n        {buttonLabel}&nbsp;\n        <Icon icon=\"caret-down\" />\n      </button>\n\n      <div\n        className={classes[\"dropdown-menu\"]}\n        role=\"menu\"\n        aria-orientation=\"vertical\"\n        aria-labelledby=\"menu-button\"\n        tabindex=\"-1\"\n      >\n        <div className=\"py-1\" role=\"none\">\n          <ButtonDropdownList buttons={buttons} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nButtonDropdown.propTypes = {\n  buttons: PropTypes.array,\n  buttonIcon: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  leftSpace: PropTypes.bool,\n};\n\nButtonDropdown.defaultProps = {\n  buttons: [],\n  buttonIcon: \"\",\n  buttonLabel: \"\",\n  direction: \"left\",\n  leftSpace: false,\n};\n\nexport default ButtonDropdown;\n","import { createUseStyles } from \"react-jss\";\nimport toolsSkin from \"../skin/datagrid/tools.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getFiltersTranslation,\n  getTitleTranslation,\n} from \"../../../utils/translations-helper\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ButtonDropdown from \"../buttons/button-dropdown\";\nimport { DROPDOWN_DIRECTION } from \"../../../constants/dropdown\";\nimport { excelExportUrl, pdfExportUrl, printUrl } from \"../../../utils/urls\";\nimport Button from \"../buttons/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnsActions } from \"../../../actions/columns-actions\";\nimport FatalErrorMessage from \"../../../components/common/error/fatal-error-message\";\n\nconst useStyles = createUseStyles(toolsSkin);\n\nconst onColumnsModalOpen = (dispatch) =>\n  dispatch({\n    type: columnsActions.MODAL_OPEN,\n  });\n\nconst DatagridTools = (props) => {\n  const {\n    apiUrl,\n    columnSearchValues,\n    extendedSearchData,\n    hasAdd,\n    onAdd,\n    onClearCache,\n    onClearFiltering,\n    onFilteringModalOpen,\n    onOrderingReset,\n    onRefresh,\n    sorting,\n    sortingFor,\n    subject,\n    visibleColumnsAsShortString,\n  } = props;\n\n  const classes = useStyles(props);\n  const dispatch = useDispatch();\n  const hasSettings = useSelector((state) => state.configuration.hasSettings);\n  const hasPrint = useSelector((state) => state.configuration.hasPrint);\n  const hasFilters = useSelector((state) => state.configuration.hasFilters);\n  const hasColumnsButton = useSelector(\n    (state) => state.configuration.hasColumnsButton\n  );\n  const hasExportData = useSelector(\n    (state) => state.configuration.hasExportData\n  );\n  const hasExportPdf = useSelector((state) => state.configuration.hasExportPdf);\n  const hasExportExcel = useSelector(\n    (state) => state.configuration.hasExportExcel\n  );\n\n  const hasDatagridTools = hasAdd;\n\n  const dataForExport = {\n    apiUrl,\n    columnSearchValues,\n    sorting,\n    sortingFor,\n    visibleColumnsAsShortString,\n    extendedSearchData,\n  };\n\n  try {\n    return hasDatagridTools ? (\n      <div className={classes[\"datagrid-tools\"]}>\n        {hasAdd && (\n          <Button\n            link={true}\n            href=\"/add\"\n            icon=\"plus\"\n            label={getTitleTranslation(formActions.ADD, subject)}\n            onClick={(event) => {\n              event.preventDefault();\n              onAdd();\n            }}\n          />\n        )}\n        <div>\n          {hasFilters && (\n            <button\n              className={\n                extendedSearchData.length > 0\n                  ? classes[\"success-button\"]\n                  : classes[\"simple-button\"]\n              }\n              onClick={onFilteringModalOpen}\n            >\n              <Icon icon=\"filter\"></Icon>&nbsp;\n              {getFiltersTranslation(extendedSearchData.length)}\n            </button>\n          )}\n          {hasFilters && extendedSearchData.length > 0 && (\n            <button\n              className={classes[\"danger-button\"]}\n              onClick={onClearFiltering}\n            >\n              <Icon icon=\"eraser\"></Icon>&nbsp;\n              {i18n.t(\"filtering_remove_filters\")}\n            </button>\n          )}\n          {hasColumnsButton && (\n            <Button\n              onClick={() => onColumnsModalOpen(dispatch)}\n              label={i18n.t(\"columns\")}\n              icon=\"list-alt\"\n            />\n          )}\n          {hasPrint && (\n            <a\n              className={classes[\"simple-button\"]}\n              href={printUrl(dataForExport)}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon icon=\"print\"></Icon>&nbsp;\n              {i18n.t(\"print\")}\n            </a>\n          )}\n          {hasExportData && (\n            <ButtonDropdown\n              buttons={[\n                hasExportExcel && {\n                  icon: \"file-excel\",\n                  text: \"Excel\",\n                  url: excelExportUrl(dataForExport),\n                  newTab: true,\n                  key: \"excel\",\n                },\n                hasExportPdf && {\n                  icon: \"file-pdf\",\n                  text: \"PDF\",\n                  url: pdfExportUrl(dataForExport),\n                  newTab: true,\n                  key: \"pdf\",\n                },\n              ]}\n              buttonLabel={i18n.t(\"export_to_file\")}\n              buttonIcon=\"download\"\n              leftSpace={true}\n            />\n          )}\n          {hasSettings && (\n            <ButtonDropdown\n              leftSpace={true}\n              direction={DROPDOWN_DIRECTION.RIGHT}\n              buttons={[\n                {\n                  icon: \"broom\",\n                  text: i18n.t(\"clear_cache\"),\n                  onClick: onClearCache,\n                  key: \"clear_cache\",\n                },\n                {\n                  icon: \"eraser\",\n                  text: i18n.t(\"clear_filtering\"),\n                  onClick: onClearFiltering,\n                  key: \"clear_filtering\",\n                },\n                {\n                  icon: \"unlink\",\n                  text: i18n.t(\"reset_ordering\"),\n                  onClick: onOrderingReset,\n                  key: \"reset_ordering\",\n                },\n                {\n                  icon: \"sync-alt\",\n                  text: i18n.t(\"refresh\"),\n                  onClick: onRefresh,\n                  key: \"refresh\",\n                },\n              ]}\n              buttonLabel={i18n.t(\"settings\")}\n              buttonIcon=\"cog\"\n            />\n          )}\n        </div>\n      </div>\n    ) : null;\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nexport default DatagridTools;\n","const wrapperSkin = {\n  wrapper: {\n    composes: \"border table-auto\",\n    width: \"100%\",\n  },\n};\n\nexport default wrapperSkin;\n","import { createUseStyles } from \"react-jss\";\n\nimport wrapperSkin from \"../skin/datagrid/wrapper.skin\";\n\nconst useStyles = createUseStyles(wrapperSkin);\n\nconst DatagridWrapper = (props) => {\n  const classes = useStyles(props);\n\n  return <table className={classes.wrapper}>{props.children}</table>;\n};\n\nexport default DatagridWrapper;\n","const formDialog = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"@keyframes shine\": {\n    to: {\n      \"background-position\": \"100% 0\",\n    },\n  },\n  \"form-dialog\": {\n    composes:\n      \"hidden overflow-y-auto overflow-x-hidden fixed right-0 left-0 top-4 z-50 justify-center items-center h-modal md:h-full md:inset-0\",\n    display: ({ formModalOpen }) => (formModalOpen ? \"block\" : \"none\"),\n    opacity: \"0\",\n    \"z-index\": \"10\",\n    animation: ({ formModalOpen }) =>\n      formModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n  },\n  \"primary-button\": {\n    composes:\n      \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n  },\n  \"secondary-button\": {\n    composes:\n      \"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:ring-gray-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600\",\n  },\n  \"form-fields\": {\n    composes: \"w-full md:w-auto overflow-auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n  \"skeleton-loader\": {\n    width: \"100%\",\n    height: \"15px\",\n    border: \"1px solid rgb(239,239,239)\",\n    \"border-radius\": \"4px\",\n    display: \"block\",\n    \"background-repeat\": \"repeat-y\",\n    \"background-size\": \"50px 500px\",\n    \"background-position\": \"0 0\",\n    background:\n      \"linear-gradient(to right, rgba(239, 239, 239, 0), rgba(239, 239, 239, 0.5) 50%, rgba(239, 239, 239, 0) 80%),rgb(255,255,255)\",\n    animation: \"$shine 2s infinite\",\n    \"animation-delay\": \"0.3s\",\n  },\n  \"modal-delete-one\": {\n    composes:\n      \"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 w-full md:inset-0 h-modal md:h-full\",\n    display: ({ deleteOneModalOpen }) =>\n      deleteOneModalOpen ? \"block\" : \"none\",\n  },\n  \"modal-delete-multiple\": {\n    composes:\n      \"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 w-full md:inset-0 h-modal md:h-full\",\n    display: ({ deleteMultipleModalOpen }) =>\n      deleteMultipleModalOpen ? \"block\" : \"none\",\n  },\n  \"modal-header\": {\n    composes:\n      \"flex justify-between items-start p-4 rounded-t border-b dark:border-gray-600\",\n  },\n  \"modal-header-label\": {\n    composes: \"text-xl font-semibold text-gray-900 dark:text-white\",\n  },\n  \"modal-dialog\": {\n    composes: \"relative p-4 w-full max-w-2xl h-full md:h-auto\",\n  },\n  \"modal-content\": {\n    composes: \"relative bg-white rounded-lg shadow dark:bg-gray-700\",\n  },\n};\n\nexport default formDialog;\n","const miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"scrolling-wrapper\": {\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { fieldTypes } from \"../../../constants/field-types\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const classes = useStyles();\n\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === fieldTypes.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          permittedValues: column.permittedValues,\n                          fieldName: column.name,\n                          locale,\n                          dateFormat,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { getDeleteConfirmationMessage } from \"../../../utils/translations-helper\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\nimport Button from \"../buttons/button\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteMultipleModal = (props) => {\n  const {\n    deleteMultipleModalOpen,\n    deleteMultipleModalClose,\n    deleteMultiple,\n    selectedIds,\n    visibleColumnsWithDetails,\n    rows,\n  } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classes[\"modal-delete-multiple\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className={classes[\"modal-dialog\"]}>\n        <div className={classes[\"modal-content\"]}>\n          <div className={classes[\"modal-header\"]}>\n            <h3 className={classes[\"modal-header-label\"]}>\n              {i18n.t(\"action_delete\")}\n            </h3>\n            <button\n              type=\"button\"\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n              onClick={deleteMultipleModalClose}\n            >\n              <svg\n                className=\"w-5 h-5\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <p>{getDeleteConfirmationMessage(selectedIds.length)}</p>\n            {deleteMultipleModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter((row) =>\n                  selectedIds.includes(row.grocery_crud_extras.primaryKeyValue)\n                )}\n              />\n            )}\n          </div>\n          {deleteMultipleModalOpen && (\n            <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n              <Button\n                label={i18n.t(\"cancel\")}\n                onClick={deleteMultipleModalClose}\n              />\n              {/* making sure that we have at least one selection to remove */}\n              {selectedIds.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 text-white dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900 font-bold py-2 px-4 rounded border border-red-500 shadow-sm\"\n                  onClick={deleteMultiple}\n                >\n                  {i18n.t(\"action_delete\")}\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteMultipleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteMultipleModal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport Button from \"../buttons/button\";\nimport DatagridMiniGrid from \"../../bootstrap-v5/datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteSingleModal = ({\n  deleteOneModalOpen,\n  deleteOneModalClose,\n  deleteOne,\n  visibleColumnsWithDetails,\n  primaryKeyValue,\n  rows,\n}) => {\n  const classes = useStyles({\n    deleteOneModalOpen,\n  });\n\n  // Tailwind CSS modal component\n\n  return (\n    <div\n      className={classes[\"modal-delete-one\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className={classes[\"modal-dialog\"]}>\n        <div className={classes[\"modal-content\"]}>\n          <div className={classes[\"modal-header\"]}>\n            <h3 className={classes[\"modal-header-label\"]}>\n              {i18n.t(\"action_delete\")}\n            </h3>\n            <button\n              type=\"button\"\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n              onClick={deleteOneModalClose}\n            >\n              <svg\n                className=\"w-5 h-5\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n          <div className=\"p-6 space-y-6\">\n            <p>{i18n.t(\"confirm_delete\")}</p>\n            {deleteOneModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter(\n                  (row) =>\n                    row.grocery_crud_extras.primaryKeyValue === primaryKeyValue\n                )}\n              />\n            )}\n          </div>\n          {deleteOneModalOpen && (\n            <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n              <Button label={i18n.t(\"cancel\")} onClick={deleteOneModalClose} />\n              <button\n                type=\"button\"\n                className=\"bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 text-white dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900 font-bold py-2 px-4 rounded border border-red-500 shadow-sm\"\n                onClick={deleteOne}\n              >\n                {i18n.t(\"action_delete\")}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteSingleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteSingleModal;\n","const errorDialog = {\n  \"error-dialog\": {\n    composes: \"modal\",\n    \"z-index\": \"1100\", // more than 1050 that is the default of bootstrap modal\n    display: ({ showError }) => (showError ? \"block\" : \"none\"),\n  },\n  \"error-details\": {\n    width: \"100%\",\n    height: \"200px\",\n  },\n};\n\nexport default errorDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport errorDialog from \"../skin/error-dialog/error-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(errorDialog);\n\nconst ErrorDialog = ({ closeModal, showError, details, message }) => {\n  const classes = useStyles({ showError });\n\n  return (\n    <div\n      className={classes[\"error-dialog\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"error_generic_title\")}</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={closeModal}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <div>Message: {message}</div>\n            <div>Error:</div>\n            <div>\n              <textarea\n                defaultValue={details || \"\"}\n                className={classes[\"error-details\"]}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              data-dismiss=\"modal\"\n              onClick={closeModal}\n            >\n              {i18n.t(\"close_modal\")}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorDialog.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nErrorDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default ErrorDialog;\n","const filteringDialogSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"filtering-modal\": {\n    composes: \"modal\",\n    display: ({ filteringModalOpen }) =>\n      filteringModalOpen ? \"block\" : \"none\",\n    opacity: \"0\",\n    animation: ({ filteringModalOpen }) =>\n      filteringModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default filteringDialogSkin;\n","const filteringSkin = {\n  \"filtering-row\": {\n    composes: \"row\",\n    \"padding-top\": \"10px\",\n    \"padding-bottom\": \"10px\",\n  },\n};\n\nexport default filteringSkin;\n","import { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport React from \"react\";\nimport filteringSkin from \"../skin/filtering/filtering.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport { deepCloneArray } from \"../../../utils/array-helper\";\nimport {\n  doTriggerFilterRefresh,\n  doTriggerFilterValueRefresh,\n  emptyFilterMapping,\n  getFilterValueFromDataType,\n} from \"../../../utils/filtering-helper\";\nimport FilterComparisonSelect from \"../../../components/filtering/filter-comparison-select\";\nimport {\n  getJssNameFromType,\n  getSearchInputComponent,\n} from \"../../../utils/field-types\";\n\nconst useStyles = createUseStyles(filteringSkin);\n\nconst Filtering = (props) => {\n  const {\n    onFilteringModalClose,\n    columns,\n    onSubmit: onSubmitCallback,\n    extendedSearchOperator,\n    extendedSearchData,\n  } = props;\n\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      basic_operator: extendedSearchOperator || \"AND\",\n      extended_search:\n        extendedSearchData.length > 0\n          ? extendedSearchData\n          : [\n              {\n                name: columns[0].name,\n                filter: \"contains\",\n                value: \"\",\n              },\n            ],\n    },\n  });\n  const { fields, append, remove, insert } = useFieldArray({\n    control,\n    name: \"extended_search\",\n  });\n\n  const classes = useStyles(props);\n\n  const onSubmit = (data) => {\n    if (onSubmitCallback) {\n      // making sure that we are not sending any data by reference\n      let extendedSearch = [];\n      data[\"extended_search\"].forEach((searchData) => {\n        if (searchData !== null) {\n          extendedSearch.push(searchData);\n        }\n      });\n      onSubmitCallback(\n        deepCloneArray({\n          ...data,\n          extended_search: extendedSearch,\n        })\n      );\n    }\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const numberOfFields = fields.length;\n\n  return (\n    <form\n      className=\"form-horizontal\"\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\">{i18n.t(\"filtering_filter_text\")}</h5>\n        <button\n          type=\"button\"\n          className=\"btn-close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n          onClick={onFilteringModalClose}\n        />\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"row\">\n          <label className=\"col-md-3 control-label\">\n            {i18n.t(\"filtering_operator\")} :\n          </label>\n          <div className=\"col-md-3\">\n            <Controller\n              render={({ field: { onChange, onBlur, value } }) => (\n                <select\n                  name=\"basic_operator\"\n                  onChange={onChange}\n                  className=\"form-control form-select\"\n                  defaultValue={value}\n                >\n                  <option value=\"AND\">\n                    {i18n.t(\"filtering_and_statement\")}\n                  </option>\n                  <option value=\"OR\">{i18n.t(\"filtering_or_statement\")}</option>\n                </select>\n              )}\n              name=\"basic_operator\"\n              control={control}\n              defaultValue=\"AND\"\n            />\n          </div>\n        </div>\n        <div>\n          {fields.map((item, index) => {\n            const columnName = getValues(`extended_search[${index}]`).name;\n\n            const column = columns.find((column) => column.name === columnName);\n\n            return (\n              <div className={classes[\"filtering-row\"]} key={item.id}>\n                <div className=\"col-md-1\">\n                  <button\n                    className=\"btn btn-outline-dark btn-block\"\n                    type=\"button\"\n                    onClick={() => remove(index)}\n                    disabled={numberOfFields === 1}\n                  >\n                    <Icon icon=\"trash\" />\n                  </button>\n                </div>\n                <div className=\"col-md-3\">\n                  <Controller\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <select\n                        onChange={(event) => {\n                          const oldValues = {\n                            ...getValues(`extended_search[${index}]`),\n                          };\n                          const newValue = event.target.value;\n\n                          const oldColumn = columns.find(\n                            (column) => column.name === oldValues.name\n                          );\n                          const newColumn = columns.find(\n                            (column) => column.name === newValue\n                          );\n\n                          if (\n                            doTriggerFilterRefresh(\n                              oldColumn.dataType,\n                              newColumn.dataType\n                            )\n                          ) {\n                            remove(index);\n                            insert(index, {\n                              name: newValue,\n                              filter: getFilterValueFromDataType(\n                                newColumn.dataType\n                              ),\n                              value: \"\",\n                            });\n                          }\n\n                          onChange(event);\n                        }}\n                        className=\"form-control form-select\"\n                        name={`extended_search[${index}].name`}\n                        value={value}\n                      >\n                        {columns.map(\n                          (column) =>\n                            column.isSearchable && (\n                              <option value={column.name} key={column.name}>\n                                {column.displayAs}\n                              </option>\n                            )\n                        )}\n                      </select>\n                    )}\n                    name={`extended_search[${index}].name`}\n                    control={control}\n                    defaultValue={item.firstName} // make sure to set up defaultValue\n                  />\n                </div>\n                <div className=\"col-md-3\">\n                  <Controller\n                    render={({ field: { onChange, value } }) => {\n                      return (\n                        <FilterComparisonSelect\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.target.value;\n                            if (\n                              doTriggerFilterValueRefresh(\n                                oldValues.filter,\n                                newValue\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: oldValues.name,\n                                filter: newValue,\n                                // null is an indication to not show an input\n                                value: emptyFilterMapping[newValue] ? null : \"\",\n                              });\n                            }\n\n                            onChange(event);\n                          }}\n                          className=\"form-control form-select\"\n                          name={`extended_search[${index}].filter`}\n                          value={value}\n                          dataType={column.dataType}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].filter`}\n                    control={control}\n                    defaultValue={item.filter}\n                  />\n                </div>\n                <div className=\"col-md-5\">\n                  <Controller\n                    render={({ field: { onChange, onBlur, value } }) => {\n                      // null is an indication that we will not show an input\n                      if (value === null) {\n                        return null;\n                      }\n\n                      const { dataType, permittedValues } = column;\n\n                      const SearchInputComponent =\n                        getSearchInputComponent(dataType);\n\n                      return (\n                        <SearchInputComponent\n                          onChange={onChange}\n                          onBlur={onBlur}\n                          className={classes[getJssNameFromType(dataType)]}\n                          name={`extended_search[${index}].value`}\n                          value={value}\n                          required={true}\n                          permittedValues={permittedValues}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].value`}\n                    control={control}\n                    defaultValue={item.value}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className={classes[\"filtering-row\"]}>\n          <div className=\"col-md-12\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              onClick={() => {\n                append({\n                  name: columns[0].name,\n                  filter: \"contains\",\n                  value: \"\",\n                });\n              }}\n            >\n              <Icon icon=\"plus\" />\n              &nbsp;\n              {i18n.t(\"filtering_add_more\")}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={onFilteringModalClose}\n        >\n          {i18n.t(\"filtering_cancel\")}\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-success delete-multiple-confirmation-button\"\n        >\n          {i18n.t(\"filtering_filter_text\")}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Filtering;\n","import { createUseStyles } from \"react-jss\";\nimport filteringDialogSkin from \"../skin/filtering/filtering-dialog.skin\";\nimport Filtering from \"./filtering\";\n\nconst useStyles = createUseStyles(filteringDialogSkin);\n\nconst FilteringModal = (props) => {\n  const { filteringModalOpen, onFilteringSubmit, columns } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classes[\"filtering-modal\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      {filteringModalOpen && (\n        <Filtering {...props} fields={columns} onSubmit={onFilteringSubmit} />\n      )}\n    </div>\n  );\n};\n\nexport default FilteringModal;\n","const ModalHeader = ({ title, onClose }) => {\n  return (\n    <div className=\"flex justify-between items-start p-5 rounded-t border-b dark:border-gray-600\">\n      <h3 className=\"text-xl font-semibold text-gray-900 lg:text-2xl dark:text-white\">\n        {title}\n      </h3>\n      <button\n        onClick={onClose}\n        type=\"button\"\n        className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n        data-modal-toggle=\"defaultModal\"\n      >\n        <svg\n          className=\"w-5 h-5\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n            clip-rule=\"evenodd\"\n          ></path>\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default ModalHeader;\n","import { createUseStyles } from \"react-jss\";\nimport { useForm } from \"react-hook-form\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport InputText from \"../../../components/common/input-type/input-text\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ModalHeader from \"../common/modal-header\";\nimport Button from \"../buttons/button\";\nimport {\n  EVENT_SET_FIELD_VALUE,\n  subscribeEvent,\n  unsubscribeEvent,\n} from \"../../../utils/events\";\nimport { useEffect } from \"react\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Form = ({\n  modalLoading,\n  formModalClose,\n  formFields,\n  formState,\n  onFormSubmit,\n  readOnly,\n  publishEvents,\n}) => {\n  const { handleSubmit, control, setValue } = useForm();\n\n  useEffect(() => {\n    const handleCustomEvent = ({ detail }) => {\n      setValue(detail.fieldName, detail.fieldValue);\n    };\n\n    if (publishEvents) {\n      subscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n    }\n\n    // Clean up event listener on component unmount\n    return () => {\n      if (publishEvents) {\n        unsubscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n      }\n    };\n  }, [setValue, publishEvents]);\n\n  const onSubmit = (data) => {\n    onFormSubmit({ formState, data });\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const classes = useStyles({ modalLoading, formModalClose, formFields });\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit, onError)}>\n        <div className=\"relative px-4 w-full h-full md:h-auto\">\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n            <ModalHeader\n              title={getTitleTranslation(formState)}\n              onClose={formModalClose}\n            />\n            <div className={classes[\"form-fields\"]}>\n              {modalLoading\n                ? \"Loading...\"\n                : formFields.map((field) => {\n                    return (\n                      <div className=\"flex px-4 py-3\" key={field.fieldName}>\n                        <label\n                          className=\"w-1/4\"\n                          htmlFor={`gc-form-${field.fieldName}`}\n                        >\n                          {field.displayAs}\n                        </label>\n                        <div className=\"w-3/4\">\n                          <InputText\n                            className=\"px-4 py-3 border border-gray-200 w-full\"\n                            name={field.fieldName}\n                            value={field.fieldValue}\n                            control={control}\n                            id={`form-${field.fieldName}`}\n                          />\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n            <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n              {!readOnly && (\n                <>\n                  <label>\n                    <input type=\"checkbox\" />\n                    {/* Extra span is needed for checkbox to work for materialize UI*/}\n                    {i18n.t(\"close_modal_on_save\")}\n                  </label>{\" \"}\n                  &nbsp; &nbsp;\n                </>\n              )}\n              <Button onClick={formModalClose} label={i18n.t(\"close_modal\")} />\n              {!readOnly && (\n                <button type=\"submit\" className={classes[\"primary-button\"]}>\n                  {i18n.t(\"modal_save\")}\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ModalHeader from \"../common/modal-header\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst FormDialog = (props) => {\n  const {\n    modalLoading,\n    formModalClose,\n    formFields,\n    formState,\n    onFormSubmit,\n    formIsReadOnly,\n  } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes[\"form-dialog\"]} tabIndex=\"-1\">\n      {modalLoading ? (\n        <>\n          <div className=\"relative px-4 w-full h-full md:h-auto\">\n            <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n              <ModalHeader\n                title={getTitleTranslation(formState)}\n                onClose={formModalClose}\n              />\n              <div className=\"p-6 space-y-6\">\n                <div className={classes[\"skeleton-loader\"]} />\n              </div>\n              <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n                <button\n                  type=\"button\"\n                  onClick={formModalClose}\n                  className={classes[\"secondary-button\"]}\n                >\n                  {i18n.t(\"close_modal\")}\n                </button>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <Form\n          formFields={formFields}\n          formModalClose={formModalClose}\n          modalLoading={modalLoading}\n          formState={formState}\n          onFormSubmit={onFormSubmit}\n          readOnly={formIsReadOnly}\n        />\n      )}\n    </div>\n  );\n};\n\nFormDialog.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  formFields: PropTypes.array,\n};\n\nFormDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default FormDialog;\n","import { createUseStyles } from \"react-jss\";\n\nimport groupButtonSkin from \"../skin/buttons/buttons.skin\";\nimport ButtonDropdown from \"./button-dropdown\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./button\";\n\nconst useStyles = createUseStyles(groupButtonSkin);\n\nconst GroupButtons = (props) => {\n  const { buttons, maxButtons } = props;\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes[\"buttons-group\"]}>\n      {buttons\n        .filter((__button, key) => key < maxButtons - 1)\n        .map((button) => (\n          <Button\n            key={button.key}\n            onClick={(event) => {\n              event.preventDefault();\n              if (button.onClick) {\n                button.onClick({ primaryKeyValue: button.primaryKeyValue });\n              }\n            }}\n            link={true}\n            href={button.url ? button.url : \"\"}\n            icon={button.icon}\n            label={button.text}\n          />\n        ))}\n      <ButtonDropdown\n        buttons={buttons.filter((__button, key) => key >= maxButtons - 1)}\n        buttonLabel={maxButtons === 1 ? i18n.t(\"actions\") : i18n.t(\"more\")}\n      />\n    </div>\n  );\n};\n\nGroupButtons.propTypes = {\n  buttons: PropTypes.array,\n  maxButtons: PropTypes.number,\n};\n\nGroupButtons.defaultProps = {\n  buttons: [],\n  maxButtons: 2,\n};\n\nexport default GroupButtons;\n","import ColumnsModal from \"./columns/columns-modal\";\nimport DatagridBody from \"./datagrid/datagrid-body\";\nimport DatagridCheckbox from \"./datagrid/datagrid-checkbox\";\nimport DatagridFooter from \"./datagrid/datagrid-footer\";\nimport DatagridHeader from \"./datagrid/datagrid-header\";\nimport DatagridTitle from \"./datagrid/datagrid-title\";\nimport DatagridTools from \"./datagrid/datagrid-tools\";\nimport DatagridWrapper from \"./datagrid/datagrid-wrapper\";\nimport DeleteMultipleModal from \"./delete-multiple/delete-multiple-modal\";\nimport DeleteSingleModal from \"./delete-single/delete-single-modal\";\nimport ErrorDialog from \"./error/error-dialog\";\nimport FilteringModal from \"./filtering/filtering-modal\";\nimport FormDialog from \"./form/form-dialog\";\nimport GroupButtons from \"./buttons/group-buttons\";\n\nconst themeComponents = {\n  ColumnsModal,\n  DatagridBody,\n  DatagridCheckbox,\n  DatagridFooter,\n  DatagridHeader,\n  DatagridTitle,\n  DatagridTools,\n  DatagridWrapper,\n  DeleteMultipleModal,\n  DeleteSingleModal,\n  ErrorDialog,\n  FilteringModal,\n  FormDialog,\n  GroupButtons,\n};\n\nexport default themeComponents;\n","export const selectColumnWidth = (state) => state.columnWidth;\n","const widthChanging = {\n  display: \"block\",\n  position: \"absolute\",\n  right: \"-13px\",\n  height: \"39px\",\n  width: \"10px\",\n  cursor: \"col-resize\",\n  opacity: \"0.8\",\n  \"z-index\": \"10\",\n  \"&:hover\": {\n    background: \"var(--gc-emphasis-background-color)\",\n    cursor: \"col-resize\",\n  },\n  \"&:focus, &:active\": {\n    background: \"transparent\",\n    cursor: \"col-resize\",\n  },\n};\n\nconst miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"interactive-grid\": {\n    composes: \"table table-bordered\",\n    width: ({ columnWidth }) =>\n      typeof columnWidth === \"object\" && Object.keys(columnWidth).length > 0\n        ? \"auto\"\n        : \"100%\",\n  },\n  \"scrolling-wrapper\": {\n    composes: \"gc-mini-grid-scrolling-wrapper\",\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n    \"margin-bottom\": \"10px\",\n  },\n  \"width-changing\": {\n    ...widthChanging,\n  },\n  \"width-changing-last\": {\n    ...widthChanging,\n    right: \"-8px\",\n  },\n  \"header-column\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n    \"min-width\": \"100px\",\n    \"white-space\": \"nowrap\",\n    \"padding-right\": \"10px\",\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === fieldTypes.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          permittedValues: column.permittedValues,\n                          fieldName: column.name,\n                          locale,\n                          dateFormat,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n"],"sourceRoot":""}