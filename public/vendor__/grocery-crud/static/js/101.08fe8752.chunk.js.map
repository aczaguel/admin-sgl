{"version":3,"sources":["themes/bootstrap-v4/skin/columns/columns-modal.skin.js","themes/bootstrap-v4/skin/columns/columns-ordering.skin.js","themes/bootstrap-v4/columns/columns-ordering.jsx","themes/bootstrap-v4/columns/columns-visibility.jsx","themes/bootstrap-v4/skin/datagrid/datagrid-mini.skin.js","themes/bootstrap-v4/datagrid/datagrid-column-width.jsx","themes/bootstrap-v4/columns/columns-modal.jsx","themes/bootstrap-v4/skin/datagrid/body.skin.js","themes/bootstrap-v4/datagrid/datagrid-row.jsx","themes/bootstrap-v4/datagrid/datagrid-body.jsx","themes/bootstrap-v4/skin/datagrid/checkbox.skin.js","themes/bootstrap-v4/datagrid/datagrid-checkbox.jsx","themes/bootstrap-v4/skin/datagrid/footer.skin.js","themes/bootstrap-v4/datagrid/datagrid-footer.jsx","themes/bootstrap-v4/skin/datagrid/header.skin.js","themes/bootstrap-v4/datagrid/datagrid-header.jsx","themes/bootstrap-v4/skin/datagrid/title.skin.js","themes/bootstrap-v4/datagrid/datagrid-title.jsx","themes/bootstrap-v4/skin/datagrid/tools.skin.js","themes/bootstrap-v4/skin/buttons/button-dropdown.skin.js","themes/bootstrap-v4/buttons/button-dropdown.jsx","themes/bootstrap-v4/skin/buttons/buttons.skin.js","themes/bootstrap-v4/buttons/button.jsx","themes/bootstrap-v4/datagrid/datagrid-tools.jsx","themes/bootstrap-v4/skin/datagrid/wrapper.skin.js","themes/bootstrap-v4/datagrid/datagrid-wrapper.jsx","themes/bootstrap-v4/skin/form-dialog/form-dialog.skin.js","themes/bootstrap-v4/datagrid/datagrid-mini-grid.jsx","themes/bootstrap-v4/delete-multiple/delete-multiple-modal.jsx","themes/bootstrap-v4/delete-single/delete-single-modal.jsx","themes/bootstrap-v4/skin/error-dialog/error-dialog.skin.js","themes/bootstrap-v4/error/error-dialog.jsx","themes/bootstrap-v4/skin/filtering/filtering-dialog.skin.js","themes/bootstrap-v4/skin/filtering/filtering.skin.js","themes/bootstrap-v4/common/modal-close-button.jsx","themes/bootstrap-v4/filtering/filtering.jsx","themes/bootstrap-v4/filtering/filtering-modal.jsx","themes/bootstrap-v4/form/form.jsx","themes/bootstrap-v4/form/modal.jsx","themes/bootstrap-v4/form/full-page.jsx","themes/bootstrap-v4/form/form-dialog.jsx","themes/bootstrap-v4/buttons/group-buttons.jsx","themes/bootstrap-v4/index.js","selectors/column-width.js","components/datagrid/button/MultipleButtons.jsx","utils/column-width.js","components/common/master-detail.jsx","components/common/input.jsx","components/common/input-container.jsx"],"names":["columnsModalSkin","opacity","composes","display","_ref","columnsModalOpen","animation","_ref2","cursor","tabs","orderingBox","position","padding","background","color","border","columnsOrderingSkin","description","selectOrderedColumns","state","datagrid","orderedColumns","useStyles","createUseStyles","ColumnsOrdering","columns","visibleColumns","changeOrdering","resetColumnsOrdering","classes","useSelector","_jsxs","_Fragment","children","className","_jsx","i18n","t","type","onClick","DragDropContext","onDragEnd","source","destination","draggableId","index","Droppable","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","map","columnName","find","column","name","columnIndex","Draggable","draggableProps","dragHandleProps","includes","displayAs","placeholder","ColumnsVisibility","selectColumnsAllOrNone","toggleVisibleColumn","onChange","checked","length","filter","c","dataType","fieldTypes","INVISIBLE","widthChanging","right","height","width","miniGridSkin","columnWidth","Object","keys","overflow","selectColumnWidth","DatagridColumnWidth","dispatch","useDispatch","columnWidthActions","RESET_COLUMN_WIDTH","numRow","style","maxWidth","draggable","onDragStart","columnWidthOnDragStart","onDrag","columnWidthOnDrag","event","columnWidthOnDragEnd","columnWidthValue","replace","for","concat","value","columnChangeWidthAction","target","TAB_VISIBILITY","TAB_ORDERING","TAB_WIDTH","ColumnsModal","onColumnsModalClose","visibleColumnsWithDetails","tabSelected","setTabSelection","useState","tabIndex","role","classNames","active","bodySkin","selectLocalCode","configuration","locale","selectDateFormat","dateFormat","selectHasMasterDetail","hasMasterDetail","selectOpenedRows","masterDetail","openedRows","DatagridRow","lastPrimaryKeyValue","rowData","hasActions","settings","configurationSettings","onRowUpdate","onRowUnmount","rightSideActions","skin","theme","publishEvents","rest","grocery_crud_extras","primaryKeyValue","useLayoutEffect","ActionsTd","ActionsColumn","backendActionButtons","actionButtons","isRowOpened","rowId","undefined","masterDetailActions","CLOSE_ROW","OPEN_ROW","Icon","icon","formatDatagridValue","fieldName","fieldOptions","options","permittedValues","colSpan","MasterDetail","defaultProps","selectRows","datagridRows","selectRightSideActions","DatagridBody","props","rows","checkboxSkin","checkbox","DatagridCheckbox","footerSkin","footer","alignItems","justifyContent","isMobileDevice","paddingRight","pagination","margin","borderRadius","borderLeft","borderRight","transform","loader","DatagridFooter","filteredTotalEntries","goToFirstPage","goToLastPage","goToNextPage","goToPreviousPage","lastPage","page","currentPage","pageChange","totalEntries","perPage","perPageChange","forceSearch","pagingLoading","pagingOptions","initError","onClearAllCache","pageOption","DatagridPagingItemsLabel","disabled","onKeyUp","key","headerSkin","DatagridHeader","columnOrdering","columnSearch","columnSearchValues","columnSearchValuesDisplayAs","extendedSearchData","onMultipleDeleteModalOpen","onSelectRowAllOrNone","actionButtonHasText","hasActionButtonsMultiple","deleteMultiple","selectRowsAllOrNoneChecked","selectedIds","sorting","sortingFor","loadCssThirdParty","backendActionButtonsMultiple","actionButtonsMultiple","hasQuickSearch","isAnyColumnSearchable","some","isSearchable","hasMultipleActions","hasSecondaryHeader","button","href","getMultipleActionUrl","newTab","rel","iconName","label","hasOrdering","InputSearchComponent","getSearchInputComponent","getClassNamesByDataType","searchValue","searchValueDisplayAs","requireForceSearchOnChange","title","titleSkin","DatagridTitle","toolsSkin","buttonDropdown","opened","direction","DROPDOWN_DIRECTION","RIGHT","_ref3","leftSpace","ButtonDropdown","buttons","buttonIcon","buttonLabel","buttonDropdownRef","useRef","setOpen","onBlur","setTimeout","url","preventDefault","text","buttonsSkin","Button","link","DatagridTools","apiUrl","hasAdd","onAdd","onClearCache","onClearFiltering","onFilteringModalOpen","onOrderingReset","onRefresh","subject","urlUniqueHash","visibleColumnsAsShortString","urlHistory","landingPageUrl","hasSettings","hasPrint","hasFilters","hasColumnsButton","hasExportData","hasExportPdf","hasExportExcel","hasTopLeftButtons","hasTopRightButtons","datagridButtonsTopLeft","datagridButtonsTopRight","hasTopButtons","uniqueHashPrefix","dataForExport","getTitleTranslation","formActions","ADD","MultipleButtons","getFiltersTranslation","columnsActions","MODAL_OPEN","onColumnsModalOpen","printUrl","excelExportUrl","pdfExportUrl","error","console","log","FatalErrorMessage","wrapperSkin","wrapper","DatagridWrapper","formDialog","to","formModalOpen","deleteOneModalOpen","_ref4","_ref5","deleteMultipleModalOpen","_ref6","_ref7","openInModal","outline","form","formLoadingOverlay","content","DatagridMiniGrid","DeleteMultipleModal","deleteMultipleModalClose","getDeleteConfirmationMessage","row","DeleteSingleModal","deleteOneModalClose","deleteOne","errorDialog","showError","ErrorDialog","closeModal","details","message","defaultValue","formFields","filteringDialogSkin","filteringModalOpen","filteringSkin","ModalCloseButton","Filtering","onFilteringModalClose","onSubmit","onSubmitCallback","extendedSearchOperator","control","handleSubmit","getValues","useForm","defaultValues","basic_operator","extended_search","fields","append","remove","insert","useFieldArray","numberOfFields","data","extendedSearch","forEach","searchData","push","deepCloneArray","onError","errors","e","Controller","render","field","item","Select","oldValues","newValue","oldColumn","newColumn","doTriggerFilterRefresh","getFilterValueFromDataType","option","firstName","FilterComparisonSelect","doTriggerFilterValueRefresh","emptyFilterMapping","originalValue","SearchInputComponent","getJssNameFromType","required","id","FilteringModal","onFilteringSubmit","selectCloseModalOnSave","closeModalOnSave","Form","formIsReadOnly","readOnly","formModalClose","formState","modalLoading","onFormSubmit","register","setValue","useEffect","handleCustomEvent","detail","fieldValue","subscribeEvent","EVENT_SET_FIELD_VALUE","unsubscribeEvent","transformedData","formSubmitTransformation","InputContainer","inputContainerClassName","jssClasses","labelClassName","labelContainerClassName","TOGGLE_CLOSE_MODAL_ON_SAVE","Modal","formModalLoading","FullPage","FormDialog","groupButtonSkin","GroupButtons","maxActionButtons","maxButtons","mobile","desktop","areWeGroupingButtons","__button","themeComponents","previousSiblingElement","parentThElement","startOffsetX","startClientX","currentTarget","closest","previousSibling","left","clientX","clientWidth","offsetLeft","CHANGE_WIDTH","removeProperty","Math","max","document","body","selectMasterDetailApiUrl","groceryCrudLoader","require","default","datagridRef","current","uniqueId","Date","now","selectPrimaryKeyValue","Input","isDependencyField","isNullable","valueLabel","InputComponent","getComponentFromDataType","onMount","onUnmount","getMountingCallbacks","inputClassName","isReadOnly","HIDDEN","htmlFor","isRequired"],"mappings":"yLA0CeA,MA1CU,CACvB,oBAAqB,CACnB,KAAM,CAAEC,QAAS,OACjB,MAAO,CAAEA,QAAS,QAClB,OAAQ,CAAEA,QAAS,MAErB,gBAAiB,CACfC,SAAU,QACV,UAAW,CACTC,QAASC,IAAA,IAAC,iBAAEC,GAAkBD,EAAA,OAAMC,EAAmB,QAAU,MAAM,EACvEJ,QAAS,IACTK,UAAWC,IAAA,IAAC,iBAAEF,GAAkBE,EAAA,OAC9BF,EAAmB,0CAA4C,MAAM,IAG3E,eAAgB,CACdH,SAAU,QACV,UAAW,CACTM,OAAQ,YAGZ,kBAAmB,CACjB,aAAc,6CACd,aAAc,MACd,gBAAiB,OAEnBC,KAAM,CACJP,SAAU,eACV,aAAc,CACZ,gBAAiB,OACjB,aAAc,OACd,uBAAwB,UAG5B,aAAc,CACZA,SAAU,WACV,aAAc,CACZM,OAAQ,a,gBCrCd,MAAME,EAAc,CAClBC,SAAU,WACVC,QAAS,OACT,gBAAiB,MACjBC,WAAY,6BACZC,MAAO,+BACPC,OAAQ,6CACR,gBAAiB,OA+BJC,MA5Ba,CAC1B,eAAgB,IACXN,GAEL,wBAAyB,IACpBA,EACHT,QAAS,IAEX,kBAAmB,CACjB,aAAc,6CACd,aAAc,MACd,gBAAiB,OAEnB,iBAAkB,CAChBY,WAAY,6BACZD,QAAS,OAEX,mBAAoB,CAClBC,WAAY,4BACZD,QAAS,OAEXK,YAAa,CACXd,QAAS,OACT,cAAe,SACf,kBAAmB,kB,OC5BvB,MAAMe,EAAwBC,GAAUA,EAAMC,SAASC,eAEjDC,EAAYC,YAAgBP,GAgFnBQ,MA9ESpB,IAKjB,IALkB,QACvBqB,EAAO,eACPC,EAAc,eACdC,EAAc,qBACdC,GACDxB,EACC,MAAMyB,EAAUP,IACVD,EAAiBS,YAAYZ,GAEnC,OACEa,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,OAAKG,UAAWL,EAAqB,YAAEI,SAAA,CACrCE,cAAA,OAAAF,SAAMG,IAAKC,EAAE,0BACbF,cAAA,OAAAF,SACEE,cAAA,UACEG,KAAK,SACLJ,UAAU,uBACVK,QAASA,IAAMX,EAAqBH,GAASQ,SAE5CG,IAAKC,EAAE,yBAIdF,cAAA,OAAKD,UAAWL,EAAQ,qBACxBM,cAACK,IAAe,CACdC,UAAWlC,IAA2C,IAA1C,OAAEmC,EAAM,YAAEC,EAAW,YAAEC,GAAarC,EAC1CmC,GAAUC,GAAeD,EAAOG,QAAUF,EAAYE,OACxDlB,EAAeiB,EAAaF,EAAOG,MAAOF,EAAYE,MACxD,EACAZ,SAEFE,cAACW,IAAS,CAACC,YAAY,UAASd,SAC7BA,CAACe,EAAUC,IACVlB,eAAA,UACMiB,EAASE,eACbC,IAAKH,EAASI,SACdlB,UACEe,EAASI,eACLxB,EAAQ,oBACRA,EAAQ,kBACbI,SAAA,CAEAZ,EACEiC,KAAKC,GACJ9B,EAAQ+B,MAAMC,GAAWA,EAAOC,OAASH,MAE1CD,KAAI,CAACG,EAAQE,IACZxB,cAACyB,IAAS,CACRhB,YAAaa,EAAOC,KACpBb,MAAOc,EAAY1B,SAGjBe,GACAb,cAAA,OAEEgB,IAAKH,EAASI,YACVJ,EAASa,kBACTb,EAASc,gBACb5B,UACER,EAAeqC,SAASN,EAAOC,MAC3B7B,EAAQ,gBACRA,EAAQ,yBACbI,SAEAwB,EAAOO,WAVHP,EAAOC,OAJXD,EAAOC,QAmBjBV,EAASiB,qBAKjB,E,OCrCQC,MA3CW9D,IAMnB,IANoB,QACzBqB,EAAO,uBACP0C,EAAsB,oBACtBC,EAAmB,eACnB1C,EAAc,QACdG,GACDzB,EACC,OACE2B,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAA,OAAAF,SACEF,eAAA,SAAAE,SAAA,CACEE,cAAA,SACEG,KAAK,WACL+B,SAAUA,IAAMF,EAAuB1C,GACvC6C,QAAS5C,EAAe6C,SAAW9C,EAAQ8C,SAC3C,WACWnC,IAAKC,EAAE,mBAGxBF,cAAA,OAAKD,UAAWL,EAAQ,qBACvBJ,EACE+C,QAAQC,GAAMA,EAAEC,WAAaC,IAAWC,YACxCtB,KAAKG,GACJtB,cAAA,OAAAF,SACEF,eAAA,SAAAE,SAAA,CACEE,cAAA,SACEG,KAAK,WACLgC,QAAS5C,EAAeqC,SAASN,EAAOC,MACxCW,SAAUA,IAAMD,EAAoBX,EAAOC,KAAMjC,KACjD,WAEDgC,EAAOO,cARFP,EAAOC,UAYpB,E,OCvCP,MAAMmB,EAAgB,CACpB1E,QAAS,QACTQ,SAAU,WACVmE,MAAO,QACPC,OAAQ,OACRC,MAAO,OACPxE,OAAQ,aACRP,QAAS,MACT,UAAW,KACX,UAAW,CACTY,WAAY,sCACZL,OAAQ,cAEV,oBAAqB,CACnBK,WAAY,cACZL,OAAQ,eAgEGyE,MA5DM,CACnB,YAAa,CACX/E,SAAU,mCACV,gBAAiB,OAEnB,mBAAoB,CAClBA,SAAU,uBACV8E,MAAO5E,IAAA,IAAC,YAAE8E,GAAa9E,EAAA,MACE,kBAAhB8E,GAA4BC,OAAOC,KAAKF,GAAaX,OAAS,EACjE,OACA,MAAM,GAEd,oBAAqB,CACnBrE,SAAU,iCACV8E,MAAO,OACPrE,SAAU,WACV,aAAc,QAEhB,cAAe,CACb,SAAU,CACR,gBAAiB,WACjB,cAAe,SACf0E,SAAU,UAEZ,cAAe,SACf,YAAa,QACb,YAAa,IACb,iBAAkB,SAClBlF,QAAS,OACT4E,OAAQ,QAEV,iBAAkB,CAChB,WAAY,CACV,aAAc,SAGlB9D,YAAa,CACXd,QAAS,OACT,cAAe,SACf,kBAAmB,gBACnB,gBAAiB,QAEnB,iBAAkB,IACb0E,GAEL,sBAAuB,IAClBA,EACHC,MAAO,QAET,gBAAiB,CACf3E,QAAS,OACT,kBAAmB,gBACnB,cAAe,SACfQ,SAAU,WACV,YAAa,QACb,cAAe,SACf,gBAAiB,S,iBC7DrB,MAAMW,EAAYC,YAAgB0D,GAC5BK,EAAqBnE,GAAUA,EAAM+D,YAuH5BK,MArHanF,IAAyB,IAAxB,eAAEsB,GAAgBtB,EAC7C,MAAM8E,EAAcpD,YAAYwD,GAE1BzD,EAAUP,EAAU,CAAE4D,gBAEtBM,EAAWC,cAEjB,OACE1D,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,OAAKG,UAAWL,EAAqB,YAAEI,SAAA,CACrCF,eAAA,OAAAE,SAAA,CAAMG,IAAKC,EAAE,qBAAqB,UAClCF,cAAA,OAAAF,SACEE,cAAA,UACEG,KAAK,SACLJ,UAAU,uBACVK,QAASA,IACPiD,EAAS,CACPlD,KAAMoD,IAAmBC,qBAE5B1D,SAEAG,IAAKC,EAAE,6BAIdF,cAAA,OAAKD,UAAWL,EAAQ,qBAAqBI,SAC3CE,cAAA,SAAOD,UAAWL,EAAQ,oBAAoBI,SAC5CE,cAAA,SAAAF,SACEE,cAAA,MAAAF,SACGP,EAAe4B,KAAI,CAACG,EAAQmC,IAC3BnC,EAAOiB,WAAaC,IAAWC,UAAY,KACzCzC,cAAA,MAAAF,SACEF,eAAA,OACEG,UAAWL,EAAQ,iBACnBgE,MAAO,CACLb,MAAOE,EAAYzB,EAAOC,MAC1BoC,SAAUZ,EAAYzB,EAAOC,OAC7BzB,SAAA,CAEFE,cAAA,OACED,UACER,EAAekE,EAAS,GACpB/D,EAAQ,kBACRA,EAAQ,uBAEdgE,MAAO,CACL1F,QAAS,UAGbgC,cAAA,OACED,UACER,EAAekE,EAAS,GACpB/D,EAAQ,kBACRA,EAAQ,uBAEdkE,WAAW,EACXC,YAAaC,IACbC,OAAQC,IACR1D,UAAY2D,GACVC,YAAqBD,EAAO3C,EAAOC,KAAM8B,KAG7CrD,cAAA,QAAAF,SAAOwB,EAAOO,gBA/BTP,EAAOC,gBAwC5B3B,eAAA,OAAAE,SAAA,CACEE,cAAA,SACAA,cAAA,KAAAF,SAAIG,IAAKC,EAAE,wCAEbF,cAAA,OAAAF,SACGP,EAAe4B,KAAKG,IACnB,MAAM6C,EAAmBpB,EAAYzB,EAAOC,MACxCwB,EAAYzB,EAAOC,MAAM6C,QAAQ,KAAM,IACvC,GAEJ,OACExE,eAAA,OAAKG,UAAU,WAAUD,SAAA,CACvBE,cAAA,SACED,UAAU,0BACVsE,IAAG,mBAAAC,OAAqBhD,EAAOC,MAAOzB,SAErCwB,EAAOO,YAEV7B,cAAA,OAAKD,UAAU,WAAUD,SACvBE,cAAA,SACEG,KAAK,SACLoE,MAAOJ,EACP5C,KAAI,mBAAA+C,OAAqBhD,EAAOC,MAChCxB,UAAU,eACVmC,SAAW+B,GACTO,YACElD,EAAOC,KACP0C,EAAMQ,OAAOF,MACblB,SAjBqB/B,EAAOC,KAsBhC,QAIX,ECpHP,MAAMpC,EAAYC,YAAgBvB,GAE5B6G,EAAiB,iBACjBC,EAAe,eACfC,EAAY,YA+GHC,MA7GM5G,IAUd,IAVe,QACpBqB,EAAO,iBACPpB,EAAgB,oBAChB4G,EAAmB,uBACnB9C,EAAsB,oBACtBC,EAAmB,eACnB1C,EAAc,0BACdwF,EAAyB,eACzBvF,EAAc,qBACdC,GACDxB,EACC,MAAO+G,EAAaC,GAAmBC,mBAASR,GAC1ChF,EAAUP,EAAU,CAAEjB,qBAE5B,OACE8B,cAAA,OAAKD,UAAWL,EAAQ,iBAAkByF,SAAS,KAAKC,KAAK,SAAQtF,SACnEE,cAAA,OACED,UAAWsF,IAAW,eAAgB,CACpC,UAAWL,IAAgBJ,EAC3B,eAAgBI,IAAgBJ,IAElCQ,KAAK,WAAUtF,SAEfF,eAAA,OAAKG,UAAU,gBAAeD,SAAA,CAC5BF,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,MAAID,UAAU,cAAaD,SAAEG,IAAKC,EAAE,aACpCF,cAAA,UACEG,KAAK,SACLJ,UAAWL,EAAQ,gBACnB,eAAa,QACb,aAAW,QACXU,QAAS0E,EAAoBhF,SAE7BE,cAAA,QAAM,cAAY,OAAMF,SAAC,cAG7BE,cAAA,OAAKD,UAAU,aAAYD,SACxB5B,GACC0B,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,MAAIG,UAAWL,EAAc,KAAEI,SAAA,CAC7BE,cAAA,MAAID,UAAU,WAAUD,SACtBE,cAAA,UACED,UAAWsF,IAAW3F,EAAQ,cAAe,CAC3C4F,OAAQN,IAAgBN,IAE1BtE,QAASA,KACP6E,EAAgBP,EAAe,EAC/B5E,SAEDG,IAAKC,EAAE,sBAGZF,cAAA,MAAID,UAAU,WAAUD,SACtBE,cAAA,UACED,UAAWsF,IAAW3F,EAAQ,cAAe,CAC3C4F,OAAQN,IAAgBL,IAE1BvE,QAASA,KACP6E,EAAgBN,EAAa,EAC7B7E,SAEDG,IAAKC,EAAE,oBAGZF,cAAA,MAAID,UAAU,WAAUD,SACtBE,cAAA,UACED,UAAWsF,IAAW3F,EAAQ,cAAe,CAC3C4F,OAAQN,IAAgBJ,IAE1BxE,QAASA,KACP6E,EAAgBL,EAAU,EAC1B9E,SAEDG,IAAKC,EAAE,oBAIb8E,IAAgBN,GACf1E,cAAC+B,EAAiB,CAChBzC,QAASA,EACT0C,uBAAwBA,EACxBC,oBAAqBA,EACrB1C,eAAgBA,EAChBG,QAASA,IAGZsF,IAAgBL,GACf3E,cAACX,EAAe,CACdC,QAASA,EACT2C,oBAAqBA,EACrB1C,eAAgBA,EAChBC,eAAgBA,EAChBC,qBAAsBA,IAGzBuF,IAAgBJ,GACf5E,cAACoD,EAAmB,CAClB7D,eAAgBwF,eAQ1B,EC9EKQ,MA1CE,CACf,mBAAoB,CAClB,KAAM,CAAEzH,QAAS,KACjB,MAAO,CAAEA,QAAS,KAClB,MAAO,CAAEA,QAAS,KAClB,MAAO,CAAEA,QAAS,KAClB,OAAQ,CAAEA,QAAS,MAErB,kBAAmB,CACjBK,UAAW,sCACXK,SAAU,WACV,UAAW,KAEb,cAAe,CACb,SAAU,CACR,gBAAiB,WACjB,cAAe,SACf0E,SAAU,UAEZ,cAAe,SACf,YAAa,QACb,YAAa,IACb,iBAAkB,SAClBlF,QAAS,OACT4E,OAAQ,QAEV,gBAAiB,CACf,cAAe,SACf,cAAe,QAEjB,aAAc,CACZ,WAAY,CACV,aAAc,SAGlB,WAAY,CACVvE,OAAQ,UACRI,QAAS,QACT,YAAa,S,4CC3BjB,MAAM+G,EAAmBxG,GAAUA,EAAMyG,cAAcC,OACjDC,EAAoB3G,GAAUA,EAAMyG,cAAcG,WAClDC,EAAyB7G,GAAUA,EAAMyG,cAAcK,gBACvD3C,EAAqBnE,GAAUA,EAAM+D,YACrCgD,EAAoB/G,GAAUA,EAAMgH,aAAaC,WAEjD9G,EAAYC,YAAgBmG,GAE5BW,EAAcjI,IAYb,IAZc,oBACnBkI,EAAmB,QACnBC,EAAO,WACPC,EAAU,eACV9G,EAAc,SACd+G,EACAC,uBAAuB,YAAEC,EAAW,aAAEC,GAAc,iBACpDC,EAAgB,KAChBC,EAAI,MACJC,EAAK,cACLC,KACGC,GACJ7I,EACC,MAAMyH,EAAS/F,YAAY6F,GACrBI,EAAajG,YAAYgG,GACzB5C,EAAcpD,YAAYwD,GAC1B2C,EAAkBnG,YAAYkG,GAC9BI,EAAatG,YAAYoG,GAEzB1C,EAAWC,cAEX5D,EAAUP,KAGd4H,qBAAqB,gBAAEC,IACrBZ,EAEJa,2BAAgB,KACVT,GACFA,EAAY,CAAEQ,oBAGT,KACDP,GACFA,EAAa,CAAEO,mBACjB,IAED,CAACA,EAAiBZ,EAASI,EAAaC,IAE3C,MAAMS,EAAYA,IAChBlH,cAAA,MAAyBD,UAAWL,EAAQ,iBAAiBI,SAC3DE,cAACmH,IAAa,IACRL,EACJM,qBAAsBhB,EAAQW,oBAAoBM,cAClDA,cAAef,EAASe,cACxBL,gBAAiBA,KALb,kBAUJM,EACJxB,GAAmBG,EAAW5E,MAAMkG,GAAUA,IAAUP,IAE1D,OACEpH,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,MACEG,UACEoG,GACAA,IAAwBC,EAAQW,oBAAoBC,gBAChDtH,EAAQ,wBACR8H,EACL1H,SAAA,CAEAuG,IAAeK,GAAoBnH,EAAe6C,OAAS,GAC1DpC,cAACkH,EAAS,IAEX3H,EAAe4B,KAAI,CAACG,EAAQmC,IAC3BzD,cAAA,MAAAF,SACEF,eAAA,OACEG,UAAWL,EAAQ,eACnBgE,MAAO,CACLb,MAAOE,EAAYzB,EAAOC,MAC1BoC,SAAUZ,EAAYzB,EAAOC,OAC7BzB,SAAA,CAEDgG,GAA8B,IAAXrC,GAClBzD,cAAAH,WAAA,CAAAC,SACEE,cAAA,QACED,UAAWL,EAAQ,YACnBU,QAASA,IACPiD,EAAS,CACPlD,KAAMmH,EACFG,IAAoBC,UACpBD,IAAoBE,SACxBJ,MAAOP,IAEVlH,SAEDE,cAAC4H,IAAI,CAACC,KAAMP,EAAc,aAAe,oBAI9CQ,YAAoB1B,EAAQ9E,EAAOC,MAAOD,EAAOiB,SAAU,CAC1DqD,aACAmC,UAAWzG,EAAOC,KAClByG,aAAc1G,EAAO2G,QACrBvC,SACAwC,gBAAiB5G,EAAO4G,gBACxBlB,wBA/BG1F,EAAOC,QAoCjB8E,GAAcK,GAAoBnH,EAAe6C,OAAS,GACzDpC,cAACkH,EAAS,OAGbI,GACCtH,cAAA,MAAAF,SACEE,cAAA,MAAImI,QAAS5I,EAAe6C,QAAUiE,EAAa,EAAI,GAAGvG,SACxDE,cAACoI,IAAY,CACXpB,gBAAiBA,EACjBL,KAAMA,EACNC,MAAOA,EACPC,cAAeA,UAKtB,EASPX,EAAYmC,aAAe,CACzB/B,SAAU,CAAC,EACXC,sBAAuB,CAAC,GAGXL,QClJf,MAAM/G,EAAYC,YAAgBmG,GAE5B+C,EAActJ,GAAUA,EAAMuJ,aAC9BC,EAA0BxJ,GAAUA,EAAMyG,cAAciB,iBA0B/C+B,MAxBOC,IACpB,MAAMC,EAAOhJ,YAAY2I,GACnB5B,EAAmB/G,YAAY6I,GAE/B9I,EAAUP,IAEhB,OACEa,cAAA,SAAOD,UAAWL,EAAQ,cAAcI,SACrC6I,EAAKxH,KAAI,CAACiF,EAAS3C,IAClBzD,cAACkG,EAAW,CAEVE,QAASA,EACTM,iBAAkBA,KACdgC,GAHCjF,MAMH,ECpBGmF,MAPM,CACnBC,SAAU,CACR,eAAgB,OAChB7K,QAAS,gBCAb,MAAMmB,EAAYC,YAAgBwJ,GAenBE,MAbU7K,IAA4B,IAA3B,SAAEiE,EAAQ,QAAEC,GAASlE,EAC7C,MAAMyB,EAAUP,IAEhB,OACEa,cAAA,SACEG,KAAK,WACLJ,UAAWL,EAAkB,SAC7BwC,SAAUA,EACVC,QAASA,GACT,E,SCgES4G,MA9EI,CACjBC,OAAQ,CACNC,WAAY,SACZjL,QAAS,OACTkL,eAAgB,gBAChBzK,QAAS,WACT,eAAgB,mCAChB,eAAgB,MAChB,eAAgB,uBAChB,4BAA6B,CAC3B,iBAAkB,WAGtB,eAAgB,CACdT,QAAS,OACT,iBAAkB,SAClBS,QAAS,WACT,eAAgB,mCAChB,eAAgB,MAChB,eAAgB,wBAElB,eAAgB,CACdT,QAAS,OACT,iBAAkBC,IAAA,IAAC,eAAEkL,GAAgBlL,EAAA,OACnCkL,EAAiB,SAAW,KAAK,EACnC,UAAW,CACTnL,QAAS,OACT,iBAAkB,MAClB,cAAe,SACfS,QAAS,MACT,kBAAmB,OAErB,gBAAiB,CACf2K,aAAc,QAGlBC,WAAY,CACVtL,SAAU,aACV,eAAgB,CACduL,OAAQ,IACR,aAAc,SAGlB,YAAa,CACXvL,SAAU,YACV,cAAe,CACbM,OAAQ,YAGZ,cAAe,CACbN,SAAU,eACV,iBAAkB,CAChBwL,aAAc,IACd1G,MAAO,QACP2G,WAAY,OACZC,YAAa,SAGjB,kBAAmB,CACjB,KAAM,CAAEC,UAAW,gBACnB,OAAQ,CAAEA,UAAW,mBAEvBC,OAAQ,CACN/K,OAAQ,oBACR,gBAAiB,MACjB,aAAc,oBACdiE,MAAO,OACPD,OAAQ,OACR,oBAAqB,2BACrBzE,UAAW,2BACX,eAAgB,QAElB,oBAAqB,CACnBJ,SAAU,eACV,YAAa,SCnEjB,MAAMoB,GAAYC,YAAgB2J,GA2JnBa,OAzJSlB,IACtB,MAAMhJ,EAAUP,GAAUuJ,IAEpB,qBACJmB,EAAoB,cACpBC,EAAa,aACbC,EAAY,aACZC,EAAY,iBACZC,EAAgB,SAChBC,EACAC,KAAMC,EAAW,WACjBC,EAAU,aACVC,EAAY,QACZC,EAAO,cACPC,EAAa,YACbC,EAAW,cACXC,EAAa,cACbC,EAAa,UACbC,EAAS,gBACTC,GACEnC,EAEJ,OAAIkC,EAEAhL,eAAA,OAAKG,UAAWL,EAAQ,gBAAgBI,SAAA,CACtCE,cAAA,KAAAF,SAAG,oMAKHE,cAAA,KAAAF,SACEE,cAAA,UAAQD,UAAU,uBAAuBK,QAASyK,EAAgB/K,SAAC,qBASzEF,eAAA,OAAKG,UAAWL,EAAQsJ,OAAOlJ,SAAA,CAC7BE,cAAA,OAAKD,UAAWL,EAAQ,gBAAgBI,SACrC6K,EAAcvI,OAAS,GACtBxC,eAAA,OAAAE,SAAA,CACEE,cAAA,OAAAF,SAAK,SACLE,cAAA,OAAAF,SACEE,cAAA,UACED,UAAWL,EAAQ,qBACnBwC,SAAUsI,EACVjG,MAAOgG,EAAQzK,SAEd6K,EAAcxJ,KAAK2J,GAClB9K,cAAA,UAAyBuE,MAAOuG,EAAWhL,SACxCgL,GADUA,SAMnB9K,cAAA,OAAAF,SAAK,iBAIXF,eAAA,OAAKG,UAAWL,EAAQ,gBAAgBI,SAAA,CACrC4K,GACC1K,cAAA,OAAAF,SACEE,cAAA,OAAKD,UAAWL,EAAQiK,WAG3BE,IAAyBa,EACxB1K,cAAA,OAAAF,SACEE,cAAC+K,IAAwB,CACvBX,YAAaA,EACbE,aAAcA,EACdC,QAASA,EACTV,qBAAsBA,MAGxB,KACJ7J,cAAA,OAAAF,SACEF,eAAA,MAAIG,UAAWL,EAAQ2J,WAAWvJ,SAAA,CAChCE,cAAA,MACED,UAAWsF,IAAW,YAAa,CACjC2F,SAA0B,IAAhBZ,IACTtK,SAEHE,cAAA,UACED,UAAWL,EAAQ,aACnBU,QAASA,IAAM0J,EAAcM,EAAaF,GAAUpK,SAEpDE,cAAC4H,IAAI,CAACC,KAAK,sBAGf7H,cAAA,MACED,UAAWsF,IAAW,YAAa,CACjC2F,SAA0B,IAAhBZ,IACTtK,SAEHE,cAAA,UACED,UAAWL,EAAQ,aACnBU,QAASA,IAAM6J,EAAiBG,EAAaF,GAAUpK,SAEvDE,cAAC4H,IAAI,CAACC,KAAK,qBAGf7H,cAAA,MAAID,UAAU,YAAWD,SACvBE,cAAA,SACEG,KAAK,SACLJ,UAAWL,EAAQ,eACnB6E,MAAO6F,EACPlI,SAAW+B,GAAUoG,EAAWpG,EAAOmG,EAAaF,GACpDc,SAAmC,IAAzBnB,EACVoB,QAAUhH,IACU,UAAdA,EAAMiH,KACRT,GACF,MAINzK,cAAA,MACED,UAAWsF,IAAW,YAAa,CACjC2F,SAAUZ,IAAgBF,IACzBpK,SAEHE,cAAA,UACED,UAAWL,EAAQ,aACnBU,QAASA,IAAM4J,EAAaI,EAAaF,GAAUpK,SAEnDE,cAAC4H,IAAI,CAACC,KAAK,sBAGf7H,cAAA,MACED,UAAWsF,IAAW,YAAa,CACjC2F,SAAUZ,IAAgBF,IACzBpK,SAEHE,cAAA,UACED,UAAWL,EAAQ,aACnBU,QAASA,IAAM2J,EAAaK,EAAaF,GAAUpK,SAEnDE,cAAC4H,IAAI,CAACC,KAAK,+BAMjB,EClHKsD,OAxCI,CACjB,gBAAiB,CACf,YAAa,QACb,iBAAkB,UAEpB,yBAA0B,CACxBpN,SAAU,mCACVC,QAAS,cACT,eAAgB,MAChB,iBAAkB,SAClB,cAAe,UAEjB,yBAA0B,CACxBK,OAAQ,WAEV,wBAAyB,CACvB,cAAe,SACfL,QAAS,OACT4E,OAAQ,QAEV,gBAAiB,CACf5E,QAAS,OACT,kBAAmB,gBACnB,cAAe,SACfQ,SAAU,YAGZ,aAAc,CACZT,SAAU,gBAEZ,eAAgB,CACdA,SAAU,4BAEZ,sBAAuB,CAAC,EACxB,gBAAiB,CACf,cAAe,SACf,cAAe,S,mBCpBnB,MAAMoB,GAAYC,YAAgB+L,IAC5B3C,GAA0BxJ,GAAUA,EAAMyG,cAAciB,iBAExD0E,GAAkB1C,IACtB,MAAM,eACJ2C,EAAc,aACdC,EAAY,mBACZC,EAAkB,4BAClBC,EAA2B,mBAC3BC,EAAkB,YAClBhB,EAAW,WACXpE,EAAU,0BACVqF,EAAyB,qBACzBC,EACA1D,SAAS,oBAAE2D,EAAmB,yBAAEC,EAAwB,eAAEC,GAAgB,2BAC1EC,EAA0B,YAC1BC,EAAW,QACXC,EAAO,WACPC,EAAU,eACV3M,EAAc,kBACd4M,EAAiB,eACjBhD,EAAc,6BACdiD,EACA7F,uBAAuB,sBAAE8F,IACvB3D,EAEEhJ,EAAUP,GAAUuJ,GAEpBhC,EAAmB/G,YAAY6I,IAE/B8D,EAA+C,IAA9Bb,EAAmBrJ,OAEpCmK,EAAwBhN,EAAeiN,MAC1ClL,GAAWA,EAAOmL,eAGfC,GACHZ,GAAkBD,KAA8B1C,EAC7CwD,EAAqBJ,GAAyBG,EAE9CxF,EAAYA,IAChBlH,cAAA,MAAID,UAAWL,EAAQ,iBAAiBI,SACtCE,cAAA,OAAKD,UAAWL,EAAQ,yBAAyBI,SAC9C4M,GACC9M,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC8I,EAAgB,CACf5G,SAAUyJ,EACVxJ,QAAS4J,IAEVC,EAAY5J,OAAS,GACpBxC,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,UACEO,KAAK,SACLJ,UAAWL,EAAQ,0BACnBU,QAASsL,EAA0B5L,SAAA,CAEnCE,cAAC4H,IAAI,CAACC,KAAK,UAAU,WAEpB+D,GACC5L,cAAA,QAAAF,SAAOG,IAAKC,EAAE,sBAGjB2L,GACCO,EAA6BjL,KAAKyL,GAChChN,eAAA,KACEG,UAAWL,EAAQ,0BACnBmN,KAAMC,aAAqB,CAAEF,SAAQZ,gBACrCvH,OAAQmI,EAAOG,OAAS,cAAWvF,EACnCwF,IAAI,aAAYlN,SAAA,CAEhBE,cAAC4H,IAAI,CAACC,KAAM+E,EAAOK,WAAY,WAE/BjN,cAAA,QAAAF,SAAO8M,EAAOM,aAGnBb,GACCA,EAAsBlL,KAAKyL,GACzBhN,eAAA,UACEG,UAAWL,EAAQ,0BACnBU,QAASA,KACHwM,EAAOxM,SACTwM,EAAOxM,QAAQ,CAAE4L,eACnB,EACAlM,SAAA,CAEFE,cAAC4H,IAAI,CAACC,KAAM+E,EAAOK,WAAY,WAE/BjN,cAAA,QAAAF,SAAO8M,EAAOM,uBAWlC,OACEtN,eAAA,SAAAE,SAAA,CACEF,eAAA,MAAAE,SAAA,CACGuG,IAAeK,GAAoBnH,EAAe6C,OAAS,GAC1DpC,cAAA,MAAID,UAAWL,EAAQ,iBAAiBI,SAAEG,IAAKC,EAAE,aAElDX,EAAe4B,KAAI,CAACG,EAAQmC,IAC3BzD,cAAA,MACED,UACEuB,EAAO6L,YAAczN,EAAQ,+BAA4B8H,EAG3DpH,QAASA,KACHkB,EAAO6L,aACT9B,EAAe,CACbjK,WAAYE,EAAOC,KACnB0K,QACc,KAAZA,GAA8B,SAAZA,EAAqB,MAAQ,QAErD,EACAnM,SAEFF,eAAA,OAAKG,UAAWL,EAAQ,iBAAiBI,SAAA,CACvCE,cAAA,QAAAF,SAAOwB,EAAOO,YACbP,EAAO6L,aACNnN,cAAAH,WAAA,CAAAC,SACGoM,IAAe5K,EAAOC,KACrBvB,cAAC4H,IAAI,CACHC,KACc,QAAZoE,EACI,uBACA,qBAIRjM,cAAC4H,IAAI,CAACC,KAAK,eAxBdvG,EAAOC,QA+Bf8E,GAAcK,GAAoBnH,EAAe6C,OAAS,GACzDpC,cAAA,MAAAF,SAAKG,IAAKC,EAAE,gBAGfyM,GACC/M,eAAA,MAAAE,SAAA,CACGuG,IAAeK,GAAoBnH,EAAe6C,OAAS,GAC1DpC,cAACkH,EAAS,IAEX3H,EAAe4B,KAAKG,IACnB,MAAM8L,EAAuBC,aAC3B/L,EAAOiB,UAGT,OACEvC,cAAA,MAAsBD,UAAWL,EAAQ,iBAAiBI,SACvDwM,GAAkBhL,EAAOmL,cACxBzM,cAACoN,EAAoB,CACnBrN,UACEL,EAAQ4N,YAAwBhM,EAAOiB,WAEzCT,YAAa7B,IAAKC,EAAE,gBACpBgI,gBAAiB5G,EAAO4G,gBACxBiE,kBAAmBA,EACnBjK,SAAW+B,IACTqH,EAAa,CACXlK,WAAYE,EAAOC,KACnBgM,YACgC,kBAAvBtJ,EAAMQ,OAAOF,MAChBN,EAAMQ,OAAOF,MAAM2G,IACnBjH,EAAMQ,OAAOF,MACnBiJ,qBACgC,kBAAvBvJ,EAAMQ,OAAOF,MAChBN,EAAMQ,OAAOF,MAAM1C,UACnB,MAG0C,IAAhD4L,aAA2BnM,EAAOiB,WAElCkI,GACF,EAEFQ,QAAUhH,IACU,UAAdA,EAAMiH,KACRT,GACF,EAEFlG,MACEgH,EAAmBjK,EAAOC,MACtBgK,EAAmBjK,EAAOC,MAC1B,GAENM,UACE2J,EAA4BlK,EAAOC,MAC/BiK,EAA4BlK,EAAOC,MACnC,GAENwG,UAAWzG,EAAOC,QA1CfD,EAAOC,KA6CX,IAGR8E,GAAcK,GAAoBnH,EAAe6C,OAAS,GACzDpC,cAACkH,EAAS,SAIV,EAgBZkE,GAAe/C,aAAe,CAC5BgE,sBAAuB,GACvBd,mBAAoB,CAAC,EACrBC,4BAA6B,CAAC,EAC9BjF,sBAAuB,CAAE8F,sBAAuB,IAChDZ,mBAAoB,GACpBpF,YAAY,EACZ4B,QAAS,CAAE2D,qBAAqB,EAAMC,0BAA0B,GAChEG,YAAa,GACbzM,eAAgB,IAGH6L,UCjPA7F,OAXE,CACfmI,MAAO,CACL3P,SAAU,mBACVW,WAAY,4BACZC,MAAO,uCACPkE,MAAO,OACPpE,QAAS,WACT,aAAc,SCJlB,MAAMU,GAAYC,YAAgBuO,IAUnBC,OARQlF,IACrB,MAAM,MAAEgF,GAAUhF,EAEZhJ,EAAUP,GAAUuJ,GAE1B,OAAO1I,cAAA,OAAKD,UAAWL,EAAe,MAAEI,SAAE4N,GAAgB1N,cAAAH,WAAA,CAAAC,SAAE,UAAgB,ECe/D+N,OAzBG,CAChB,iBAAkB,CAChBrP,SAAU,WACVC,QAAS,OACTT,QAAS,OACT,kBAAmB,iBAErB,gBAAiB,CACfD,SAAU,uBACV,cAAe,OAEjB,iBAAkB,CAChBA,SAAU,kBACV,cAAe,OAEjB,gBAAiB,CACfA,SAAU,iBACV,cAAe,OAEjB,iBAAkB,CAChBA,SAAU,kBACV,cAAe,Q,4BCDJ+P,OAlBQ,CACrB,gBAAiB,CACf/P,SAAU,gBACV,kBAAmB,CACjBC,QAASC,IAAA,IAAC,OAAE8P,GAAQ9P,EAAA,OAAM8P,EAAS,QAAU,MAAM,EACnDpL,MAAOvE,IAAA,IAAC,UAAE4P,GAAW5P,EAAA,OACnB4P,IAAcC,KAAmBC,MAAQ,IAAM,MAAM,IAG3D,0BAA2B,CACzBnQ,SAAU,YACV,cAAeoQ,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAAMC,EAAY,MAAQ,GAAG,GAE5D,uBAAwB,CACtBrQ,SAAU,yCCTd,MAAMoB,GAAYC,YAAgB0O,IAE5BO,GAAiBpQ,IAMhB,IANiB,QACtBqQ,EAAO,WACPC,EAAU,YACVC,EAAW,UACXR,EAAS,UACTI,GACDnQ,EACC,MAAMwQ,EAAoBC,iBAAO,OAC1BX,EAAQY,GAAWzJ,oBAAS,GAanC,MAAMxF,EAAUP,GAAU,CAAE4O,SAAQC,YAAWI,cAE/C,OAAuB,IAAnBE,EAAQlM,OACH,KAIPxC,eAAA,OAAKG,UAAWL,EAAQ,2BAA4BsB,IAAKyN,EAAkB3O,SAAA,CACzEF,eAAA,UACEG,UAAWL,EAAQ,wBACnBU,QArBN,WACEuO,GAASZ,EACX,EAoBMa,OAlBN,SAAe3K,GAEb4K,YAAW,KACTF,GAAQ,EAAM,GACb,IACL,EAaoB7O,SAAA,CAEbyO,GACC3O,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC4H,IAAI,CAACC,KAAM0G,IAAc,UAI7BC,EAAY,OACbxO,cAAC4H,IAAI,CAACC,KAAK,aAGb7H,cAAA,MAAID,UAAWL,EAAQ,iBAAiBI,SACrCwO,EAAQnN,KAAKyL,GACZ5M,cAAA,MAAAF,SACEF,eAAA,KACEiN,KAAMD,EAAOkC,IAAMlC,EAAOkC,IAAM,GAChCrK,OAAQmI,EAAOG,OAAS,cAAWvF,EACnCzH,UAAU,gBACViN,IAAI,aACJ5M,QACEwM,EAAOxM,QACF6D,IACCA,EAAM8K,iBACFnC,EAAOxM,SACTwM,EAAOxM,QAAQ,CACb4G,gBAAiB4F,EAAO5F,iBAE5B,OAEFQ,EACL1H,SAAA,CAEA8M,EAAO/E,MACNjI,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC4H,IAAI,CAACC,KAAM+E,EAAO/E,OAAQ,cAI9B+E,EAAOoC,SAzBHpC,EAAO1B,WA8BhB,EAYVmD,GAAehG,aAAe,CAC5BiG,QAAS,GACTC,WAAY,GACZC,YAAa,GACbR,UAAW,OACXI,WAAW,GAGEC,UClGAY,OAPK,CAClB,gBAAiB,CACflR,SAAU,uBACV,cAAe,QCCnB,MAAMoB,GAAYC,YAAgB6P,IAuCnBC,OArCAjR,IAAmD,IAAlD,QAAEmC,EAAO,KAAEyH,EAAI,MAAEqF,EAAK,KAAEiC,GAAO,EAAK,KAAEtC,GAAM5O,EAC1D,MAAMyB,EAAUP,KAEhB,OAAIgQ,EAEAvP,eAAA,KACEG,UAAWL,EAAQ,iBACnBU,QAASA,EACTyM,KAAMA,EACNa,MAAOR,EAAMpN,SAAA,CAEZ+H,GACCjI,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC4H,IAAI,CAACC,KAAMA,IAAa,UAG5BqF,KAMLtN,eAAA,UACEG,UAAWL,EAAQ,iBACnBU,QAASA,EACTsN,MAAOR,EAAMpN,SAAA,CAEZ+H,GACCjI,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC4H,IAAI,CAACC,KAAMA,IAAa,UAG5BqF,IACM,E,4BCrBb,MAAM/N,GAAYC,YAAgByO,IAyNnBuB,OAlNQ1G,IACrB,MAAM,OACJ2G,EAAM,mBACN9D,EAAkB,mBAClBE,EAAkB,OAClB6D,EAAM,MACNC,EAAK,aACLC,EAAY,iBACZC,EAAgB,qBAChBC,EAAoB,gBACpBC,EAAe,UACfC,EAAS,QACT3D,EAAO,WACPC,EAAU,QACV2D,EAAO,cACPC,EAAa,4BACbC,GACErH,EAEEhJ,EAAUP,GAAUuJ,GACpBrF,EAAWC,cAEX0M,EAAarQ,aAAaX,GAAUA,EAAMyG,cAAcuK,aACxDC,EAAiBtQ,aACpBX,GAAUA,EAAMyG,cAAcwK,iBAG3BC,EAAcvQ,aAAaX,GAAUA,EAAMyG,cAAcyK,cACzDC,EAAWxQ,aAAaX,GAAUA,EAAMyG,cAAc0K,WACtDC,EAAazQ,aAAaX,GAAUA,EAAMyG,cAAc2K,aACxDC,EAAmB1Q,aACtBX,GAAUA,EAAMyG,cAAc4K,mBAE3BC,EAAgB3Q,aACnBX,GAAUA,EAAMyG,cAAc6K,gBAE3BC,EAAe5Q,aAAaX,GAAUA,EAAMyG,cAAc8K,eAC1DC,EAAiB7Q,aACpBX,GAAUA,EAAMyG,cAAc+K,iBAG3BC,EAAoB9Q,aACvBX,GAAUA,EAAMyG,cAAcgL,oBAE3BC,EAAqB/Q,aACxBX,GAAUA,EAAMyG,cAAciL,qBAG3BC,EAAyBhR,aAC5BX,GAAUA,EAAMyG,cAAckL,yBAG3BC,EAA0BjR,aAC7BX,GAAUA,EAAMyG,cAAcmL,0BAG3BC,EAAgBJ,GAAqBC,EAErCI,EAAmBhB,EAAa,IAAAxL,OAAOwL,GAAkB,GAEzDiB,EAAgB,CACpB1B,SACA9D,qBACAU,UACAC,aACA6D,8BACAtE,sBAGF,IACE,OAAOoF,EACLjR,eAAA,OAAKG,UAAWL,EAAQ,kBAAkBI,SAAA,CACxCF,eAAA,OAAAE,SAAA,CACG2Q,GACCzQ,cAAAH,WAAA,CAAAC,SACGwP,GACCtP,cAACkP,GAAM,CACLC,MAAM,EACNtC,KACEmD,EAAU,GAAA1L,OAAM2L,GAAc3L,OAAGwM,EAAgB,QAAS,GAE5DjJ,KAAK,OACLqF,MAAO8D,aAAoBC,KAAYC,IAAKrB,GAC5CzP,QAAU6D,IACRA,EAAM8K,iBACNQ,GAAO,MAMjBvP,cAACmR,KAAe,CAACjC,OAAQA,GAAQZ,QAASqC,OAE5C3Q,cAAA,OAAAF,SACG4Q,GACC9Q,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAACmR,KAAe,CACdjC,OAAQA,GACRZ,QAASsC,IAEVR,GACCxQ,eAAA,UACEG,UACE0L,EAAmBrJ,OAAS,EACxB1C,EAAQ,kBACRA,EAAQ,iBAEdU,QAASsP,EAAqB5P,SAAA,CAE9BE,cAAC4H,IAAI,CAACC,KAAK,WAAgB,OAC1BuJ,aAAsB3F,EAAmBrJ,WAG7CgO,IACE3E,EAAmBrJ,OAAS,GAC3BY,OAAOC,KAAKsI,GAAoBnJ,OAAS,IACzCxC,eAAA,UACEG,UAAWL,EAAQ,kBACnBU,QAASqP,EAAiB3P,SAAA,CAE1BE,cAAC4H,IAAI,CAACC,KAAK,WAAgB,OAC1B5H,IAAKC,EAAE,+BAGbmQ,GACCrQ,cAACkP,GAAM,CACL9O,QAASA,IAnICiD,IAC1BA,EAAS,CACPlD,KAAMkR,KAAeC,aAiIQC,CAAmBlO,GAClC6J,MAAOjN,IAAKC,EAAE,WACd2H,KAAK,aAGRsI,GACCvQ,eAAA,KACEG,UAAWL,EAAQ,iBACnBmN,KAAM2E,aAAST,GACf/D,IAAI,aACJvI,OAAO,SAAQ3E,SAAA,CAEfE,cAAC4H,IAAI,CAACC,KAAK,UAAe,OACzB5H,IAAKC,EAAE,YAGXoQ,GACCtQ,cAACqO,GAAc,CACbC,QAAS,CACPkC,GAAkB,CAChB3I,KAAM,aACNmH,KAAM,QACNF,IAAK2C,aAAeV,GACpBhE,QAAQ,EACR7B,IAAK,SAEPqF,GAAgB,CACd1I,KAAM,WACNmH,KAAM,MACNF,IAAK4C,aAAaX,GAClBhE,QAAQ,EACR7B,IAAK,QAGTsD,YAAavO,IAAKC,EAAE,kBACpBqO,WAAW,WACXH,WAAW,IAGd8B,GACClQ,cAACqO,GAAc,CACbD,WAAW,EACXJ,UAAWC,KAAmBC,MAC9BI,QAAS,CACP,CACEzG,KAAM,QACNmH,KAAM/O,IAAKC,EAAE,eACbE,QAASoP,EACTtE,IAAK,eAEP,CACErD,KAAM,SACNmH,KAAM/O,IAAKC,EAAE,mBACbE,QAASqP,EACTvE,IAAK,mBAEP,CACErD,KAAM,SACNmH,KAAM/O,IAAKC,EAAE,kBACbE,QAASuP,EACTzE,IAAK,kBAEP,CACErD,KAAM,WACNmH,KAAM/O,IAAKC,EAAE,WACbE,QAASwP,EACT1E,IAAK,YAGTsD,YAAavO,IAAKC,EAAE,YACpBqO,WAAW,gBAOrB,IACN,CAAE,MAAOoD,GAEP,OADAC,QAAQC,IAAIF,GACL3R,cAAC8R,KAAiB,GAC3B,GCzNaC,OAfK,CAClBC,QAAS,CACPjU,SAAU,mCACV,gBAAiB,MACjB8E,MAAO5E,IAAA,IAAC,YAAE8E,GAAa9E,EAAA,OACrB+E,OAAOC,KAAKF,GAAaX,OAAS,EAAI,OAAS,MAAM,GAEzD,mBAAoB,CAClBrE,SAAU,uBACV,gBAAiB,MACjB8E,MAAOzE,IAAA,IAAC,YAAE2E,GAAa3E,EAAA,OACrB4E,OAAOC,KAAKF,GAAaX,OAAS,EAAI,OAAS,MAAM,I,UCN3D,MAAMjD,GAAYC,YAAgB2S,IAC5BhM,GAAoB/G,GAAUA,EAAMgH,aAAaC,WAkBxCgM,OAhBShU,IAAmB,IAAlB,SAAE6B,GAAU7B,EACnC,MAAM8E,EAAcpD,YAAYwD,MAC1B8C,EAAatG,YAAYoG,IACzBrG,EAAUP,GAAU,CAAE4D,cAAakD,eAEzC,OACEjG,cAAA,SACED,UACEkG,EAAW7D,OAAS,EAAI1C,EAAQ,oBAAsBA,EAAQsS,QAC/DlS,SAEAA,GACK,ECiHGoS,OAnII,CACjB,oBAAqB,CACnB,KAAM,CAAEpU,QAAS,OACjB,MAAO,CAAEA,QAAS,QAClB,OAAQ,CAAEA,QAAS,MAErB,mBAAoB,CAClBqU,GAAI,CACF,sBAAuB,WAG3B,cAAe,CACbpU,SAAU,QACV,UAAW,CACTC,QAASC,IAAA,IAAC,cAAEmU,GAAenU,EAAA,OAAMmU,EAAgB,QAAU,MAAM,EACjEtU,QAAS,IACTK,UAAWC,IAAA,IAAC,cAAEgU,GAAehU,EAAA,OAC3BgU,EAAgB,0CAA4C,MAAM,IAGxE,mBAAoB,CAClBrU,SAAU,QACV,UAAW,CACTC,QAASmQ,IAAA,IAAC,mBAAEkE,GAAoBlE,EAAA,OAC9BkE,EAAqB,QAAU,MAAM,EACvCvU,QAAS,IACTK,UAAWmU,IAAA,IAAC,mBAAED,GAAoBC,EAAA,OAChCD,EAAqB,0CAA4C,MAAM,IAG7E,eAAgB,CACdtU,SAAU,QACV,UAAW,CACTM,OAAQ,YAGZ,wBAAyB,CACvBN,SAAU,QACV,UAAW,CACTC,QAASuU,IAAA,IAAC,wBAAEC,GAAyBD,EAAA,OACnCC,EAA0B,QAAU,MAAM,EAC5C1U,QAAS,IACTK,UAAWsU,IAAA,IAAC,wBAAED,GAAyBC,EAAA,OACrCD,EACI,0CACA,MAAM,IAGhB,eAAgB,CACdzU,SAAU,QACV,UAAW,CACTM,OAAQ,YAGZ,cAAe,CACb,aAAc,SACd,aAAc,OACdG,SAAU,WACV,aAAckU,IAAA,IAAC,YAAEC,GAAaD,EAAA,OAC5BC,EAAc,2BAAwBnL,CAAS,EACjD/I,QAAS,YAEX,6BAA8B,CAC5B,cAAe,CACb,aAAc,SAGlB,kBAAmB,CACjBoE,MAAO,OACPD,OAAQ,OACRhE,OAAQ,6BACR,gBAAiB,MACjBZ,QAAS,QACT,oBAAqB,WACrB,kBAAmB,aACnB,sBAAuB,MACvBU,WACE,+HACFP,UAAW,qBACX,kBAAmB,QAErB,uBAAwB,CACtBM,QAAS,UACTG,OAAQ,OACR,mBAAoB,mCACpB,2BAA4B,CAC1BA,OAAQ,OACRgU,QAAS,OACT,mBAAoB,qCAGxB,aAAc,CACZ7U,SAAU,gBAEZ,gBAAiB,CACfA,SAAU,eACV,YAAa,CACX,aAAc,UAGlB,cAAe,CACbA,SAAU,4BAEZ8U,KAAM,CACJ9U,SAAU,kBACVS,SAAU,WACV,WAAY,CACVR,QAAU0K,GAAWA,EAAMoK,mBAAqB,QAAU,OAC1DC,QAAUrK,GACRA,EAAMoK,mBAAkB,IAAAxO,OAAOrE,IAAKC,EAAE,WAAU,KAAM,OACxDpC,QAAU4K,GAAWA,EAAMoK,mBAAqB,MAAQ,IACxD,YAAa,OACbtU,SAAU,WACV,aAAc,SACd,UAAW,OACXG,MAAO,wCACPD,WAAY,6BACZL,OAAQ,UACRwE,MAAO,OACPD,OAAQ,SAGZ,kBAAmB,CACjBlE,WAAY,4BACZC,MAAO,uCACPkE,MAAO,OACPpE,QAAS,WACT,aAAc,SCzHlB,MAAMU,GAAYC,YAAgB0D,GAE5B0C,GAAmBxG,GAAUA,EAAMyG,cAAcC,OACjDC,GAAoB3G,GAAUA,EAAMyG,cAAcG,WAyDzCoN,OAvDU/U,IAA+B,IAA9B,eAAEsB,EAAc,KAAEoJ,GAAM1K,EAChD,MAAMyH,EAAS/F,YAAY6F,IACrBI,EAAajG,YAAYgG,IACzB5C,EAAcpD,YAAYwD,MAE1BzD,EAAUP,GAAU,CAAE4D,gBAE5B,OACE/C,cAAA,OAAKD,UAAWL,EAAQ,qBAAqBI,SAC3CF,eAAA,SAAOG,UAAWL,EAAQ,aAAaI,SAAA,CACrCE,cAAA,SAAAF,SACEE,cAAA,MAAAF,SACGP,EAAe4B,KAAKG,GACnBA,EAAOiB,WAAaC,IAAWC,UAAY,KACzCzC,cAAA,MAAAF,SAAuBwB,EAAOO,WAArBP,EAAOC,YAKxBvB,cAAA,SAAOD,UAAWL,EAAQ,kBAAkBI,SACzC6I,EAAKxH,KAAI,CAACiF,EAAS3C,IAClBzD,cAAA,MAAAF,SACGP,EAAe4B,KAAKG,GACnBA,EAAOiB,WAAaC,IAAWC,UAAY,KACzCzC,cAAA,MAAAF,SACEE,cAAA,OAAKD,UAAWL,EAAQ,eAAeI,SACpCgI,YACC1B,EAAQ9E,EAAOC,MACfD,EAAOiB,SACP,CACE2F,gBAAiB5G,EAAO4G,gBACxBH,UAAWzG,EAAOC,KAClBmE,SACAE,aACAoB,gBACEZ,EAAQW,oBAAoBC,qBAX7B1F,EAAOC,SAHbkC,WAyBX,ECpDV,MAAMtE,GAAYC,YAAgB8S,IA8EnBe,OA5EcvK,IAC3B,MAAM,wBACJ8J,EAAuB,yBACvBU,EAAwB,eACxBpH,EAAc,YACdE,EAAW,0BACXjH,EAAyB,KACzB4D,GACED,EAEEhJ,EAAUP,GAAU,CAAEqT,4BAE5B,OACExS,cAAA,OACED,UAAWL,EAAQ,yBACnByF,SAAS,KACTC,KAAK,SACL,kBAAgB,eAActF,SAE9BE,cAAA,OAAKD,UAAU,wBAAwBqF,KAAK,WAAUtF,SACpDF,eAAA,OAAKG,UAAU,gBAAeD,SAAA,CAC5BF,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,MAAID,UAAU,cAAaD,SAAEG,IAAKC,EAAE,mBACpCF,cAAA,UACEG,KAAK,SACLJ,UAAWL,EAAQ,gBACnB,eAAa,QACb,aAAW,QACXU,QAAS8S,OAGbtT,eAAA,OAAKG,UAAU,aAAYD,SAAA,CACzBE,cAAA,KAAAF,SAAIqT,aAA6BnH,EAAY5J,UAC5CoQ,GACCxS,cAACgT,GAAgB,CACfzT,eAAgBwF,EAChB4D,KAAMA,EAAKtG,QAAQ+Q,GACjBpH,EAAYpK,SAASwR,EAAIrM,oBAAoBC,wBAKpDwL,GACC5S,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,UACEG,KAAK,SACLJ,UAAU,mCACV,eAAa,QACbK,QAAS8S,EAAyBpT,SAEjCG,IAAKC,EAAE,YAGT8L,EAAY5J,OAAS,GACpBpC,cAAA,UACEG,KAAK,SACLJ,UAAU,mDACVK,QAAS0L,EAAehM,SAEvBG,IAAKC,EAAE,4BAOhB,ECrEV,MAAMf,GAAYC,YAAgB8S,IA4EnBmB,OA1EY3K,IACzB,MAAM,mBACJ2J,EAAkB,oBAClBiB,EAAmB,UACnBC,EAAS,0BACTxO,EAAyB,gBACzBiC,EAAe,KACf2B,GACED,EAEEhJ,EAAUP,GAAU,CAAEkT,uBAE5B,OACErS,cAAA,OACED,UAAWL,EAAQ,oBACnByF,SAAS,KACTC,KAAK,SACL,kBAAgB,eAActF,SAE9BE,cAAA,OAAKD,UAAU,wBAAwBqF,KAAK,WAAUtF,SACpDF,eAAA,OAAKG,UAAU,gBAAeD,SAAA,CAC5BF,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,MAAID,UAAU,cAAaD,SAAEG,IAAKC,EAAE,mBACpCF,cAAA,UACEG,KAAK,SACLJ,UAAWL,EAAQ,gBACnB,eAAa,QACb,aAAW,QACXU,QAASkT,OAGb1T,eAAA,OAAKG,UAAU,aAAYD,SAAA,CACzBE,cAAA,KAAAF,SAAIG,IAAKC,EAAE,oBACVmS,GACCrS,cAACgT,GAAgB,CACfzT,eAAgBwF,EAChB4D,KAAMA,EAAKtG,QACR+Q,GACCA,EAAIrM,oBAAoBC,kBAAoBA,SAKrDqL,GACCzS,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,UACEG,KAAK,SACLJ,UAAU,mCACV,eAAa,QACbK,QAASkT,EAAoBxT,SAE5BG,IAAKC,EAAE,YAEVF,cAAA,UACEG,KAAK,SACLJ,UAAU,mDACVK,QAASmT,EAAUzT,SAElBG,IAAKC,EAAE,4BAMd,EC1DKsT,OAdK,CAClB,eAAgB,CACdzV,SAAU,QACV,UAAW,CACT,UAAW,OACXC,QAASC,IAAA,IAAC,UAAEwV,GAAWxV,EAAA,OAAMwV,EAAY,QAAU,MAAM,IAG7D,gBAAiB,CACf5Q,MAAO,OACPD,OAAQ,UCLZ,MAAMzD,GAAYC,YAAgBoU,IAE5BE,GAAczV,IAAkD,IAAjD,WAAE0V,EAAU,UAAEF,EAAS,QAAEG,EAAO,QAAEC,GAAS5V,EAC9D,MAAMyB,EAAUP,GAAU,CAAEsU,cAE5B,OACEzT,cAAA,OACED,UAAWL,EAAQ,gBACnByF,SAAS,KACTC,KAAK,SACL,kBAAgB,eAActF,SAE9BE,cAAA,OAAKD,UAAU,wBAAwBqF,KAAK,WAAUtF,SACpDF,eAAA,OAAKG,UAAU,gBAAeD,SAAA,CAC5BF,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,MAAID,UAAU,cAAaD,SAAEG,IAAKC,EAAE,yBACpCF,cAAA,UACEG,KAAK,SACLJ,UAAU,QACV,eAAa,QACb,aAAW,QACXK,QAASuT,OAGb/T,eAAA,OAAKG,UAAU,aAAYD,SAAA,CACzBF,eAAA,OAAAE,SAAA,CACGG,IAAKC,EAAE,iBAAiB,KAAG2T,KAE9BjU,eAAA,OAAAE,SAAA,CAAMG,IAAKC,EAAE,cAAc,OAC3BF,cAAA,OAAAF,SACEE,cAAA,YACE8T,aAAcF,GAAW,GACzB7T,UAAWL,EAAQ,wBAIzBM,cAAA,OAAKD,UAAU,eAAcD,SAC3BE,cAAA,UACEG,KAAK,SACLJ,UAAU,mCACV,eAAa,QACbK,QAASuT,EAAW7T,SAEnBG,IAAKC,EAAE,yBAKZ,EAUVwT,GAAYrL,aAAe,CACzB0L,WAAY,IAGCL,UC3CAM,OAxBa,CAC1B,oBAAqB,CACnB,KAAM,CAAElW,QAAS,OACjB,MAAO,CAAEA,QAAS,QAClB,OAAQ,CAAEA,QAAS,MAErB,kBAAmB,CACjBC,SAAU,QACV,UAAW,CACTC,QAASC,IAAA,IAAC,mBAAEgW,GAAoBhW,EAAA,OAC9BgW,EAAqB,QAAU,MAAM,EACvCnW,QAAS,IACTK,UAAWC,IAAA,IAAC,mBAAE6V,GAAoB7V,EAAA,OAChC6V,EAAqB,0CAA4C,MAAM,IAG7E,cAAe,CACb,aAAc,SACd,aAAc,OACdzV,SAAU,WACV,aAAc,wB,oBCIH0V,OAxBO,CACpB,gBAAiB,CACfnW,SAAU,MACV,cAAe,OACf,iBAAkB,QAEpB,mBAAoB,CAElBY,MAAO,WAET,aAAc,CACZZ,SAAU,gBAEZ,cAAe,CACbA,SAAU,gBAEZ,eAAgB,CACdA,SAAU,QACV,UAAW,CACTM,OAAQ,a,4BCLC8V,OAdUlW,IAA6B,IAA5B,UAAE8B,EAAS,QAAEK,GAASnC,EAC9C,OACE+B,cAAA,UACEG,KAAK,SACLJ,UAAWA,EACX,eAAa,QACb,aAAW,QACXK,QAASA,EAAQN,SAEjBE,cAAA,QAAM,cAAY,OAAMF,SAAC,UAClB,ECcb,MAAMX,GAAYC,YAAgB8U,IAyTnBE,OAvTI1L,IACjB,MAAM,sBACJ2L,EAAqB,QACrB/U,EACAgV,SAAUC,EAAgB,uBAC1BC,EAAsB,mBACtB/I,EAAkB,kBAClBU,GACEzD,GAEE,QAAE+L,EAAO,aAAEC,EAAY,UAAEC,GAAcC,aAAQ,CACnDC,cAAe,CACbC,eAAgBN,GAA0B,MAC1CO,gBACEtJ,EAAmBrJ,OAAS,EACxBqJ,EACA,CACE,CACElK,KAAMjC,EAAQ,GAAGiC,KACjBc,OAAQ,WACRkC,MAAO,SAKf,OAAEyQ,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,GAAWC,aAAc,CACvDX,UACAlT,KAAM,oBAGF7B,EAAUP,GAAUuJ,GAmBpB2M,EAAiBL,EAAO5S,OAE9B,OACExC,eAAA,QACEG,UAAU,kBACVuU,SAAUI,GAtBIY,IAChB,GAAIf,EAAkB,CAEpB,IAAIgB,EAAiB,GACrBD,EAAsB,gBAAEE,SAASC,IAC/BF,EAAeG,KAAKD,EAAW,IAEjClB,EACEoB,aAAe,IACVL,EACHP,gBAAiBQ,IAGvB,KAEcK,CAACC,EAAQC,IAAMlE,QAAQC,IAAIgE,EAAQC,KAOLhW,SAAA,CAE1CF,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,MAAID,UAAU,cAAaD,SAAEG,IAAKC,EAAE,2BACpCF,cAACmU,GAAgB,CACfpU,UAAWL,EAAQ,gBACnBU,QAASiU,OAIbzU,eAAA,OAAKG,UAAU,aAAYD,SAAA,CACzBF,eAAA,OAAKG,UAAU,MAAKD,SAAA,CAClBF,eAAA,SAAOG,UAAU,yBAAwBD,SAAA,CACtCG,IAAKC,EAAE,sBAAsB,QAEhCF,cAAA,OAAKD,UAAU,WAAUD,SACvBE,cAAC+V,KAAU,CACTC,OAAQ/X,IAAA,IAAGgY,OAAO,SAAE/T,EAAQ,OAAE0M,EAAM,MAAErK,IAAStG,EAAA,OAC7C2B,eAAA,UACE2B,KAAK,iBACLW,SAAUA,EACVnC,UAAU,2BACV+T,aAAcvP,EAAMzE,SAAA,CAEpBE,cAAA,UAAQuE,MAAM,MAAKzE,SAChBG,IAAKC,EAAE,6BAEVF,cAAA,UAAQuE,MAAM,KAAIzE,SAAEG,IAAKC,EAAE,8BACpB,EAEXqB,KAAK,iBACLkT,QAASA,EACTX,aAAa,aAInB9T,cAAA,OAAAF,SACGkV,EAAO7T,KAAI,CAAC+U,EAAMxV,KACjB,MAAMU,EAAauT,EAAU,mBAADrQ,OAAoB5D,EAAK,MAAKa,KAEpDD,EAAShC,EAAQ+B,MAAMC,GAAWA,EAAOC,OAASH,IAExD,OACExB,eAAA,OAAKG,UAAWL,EAAQ,iBAAiBI,SAAA,CACvCE,cAAA,OAAKD,UAAU,WAAUD,SACvBE,cAAA,UACED,UAAU,iCACVI,KAAK,SACLC,QAASA,IAAM8U,EAAOxU,GACtBsK,SAA6B,IAAnBqK,EAAqBvV,SAE/BE,cAAC4H,IAAI,CAACC,KAAK,cAGf7H,cAAA,OACED,UAAWsF,IACT,WACA3F,EAAQ,qBACRI,SAEFE,cAAC+V,KAAU,CACTC,OAAQ5X,IAA6C,IAA1C6X,OAAO,SAAE/T,EAAQ,OAAE0M,EAAM,MAAErK,IAASnG,EAC7C,MAAMmD,EAAI,mBAAA+C,OAAsB5D,EAAK,UAC/BuH,EAAU3I,EACb+C,QACEf,GACCA,EAAOmL,cACPnL,EAAOiB,WAAaC,IAAWC,YAElCtB,KAAKG,IAAM,CACViD,MAAOjD,EAAOC,KACd2L,MAAO5L,EAAOO,cAElB,OACE7B,cAACmW,KAAM,CACLjU,SAAW+B,IACT,MAAMmS,EAAY,IACbzB,EAAU,mBAADrQ,OAAoB5D,EAAK,OAEjC2V,EAAWpS,EAAMM,MAEjB+R,EAAYhX,EAAQ+B,MACvBC,GAAWA,EAAOC,OAAS6U,EAAU7U,OAElCgV,EAAYjX,EAAQ+B,MACvBC,GAAWA,EAAOC,OAAS8U,IAI5BG,aACEF,EAAU/T,SACVgU,EAAUhU,YAGZ2S,EAAOxU,GACPyU,EAAOzU,EAAO,CACZa,KAAM8U,EACNhU,OAAQoU,aACNF,EAAUhU,UAEZgC,MAAO,MAIXrC,EAAS,CAAEuC,OAAQ,CAAElD,OAAMgD,MAAON,EAAMM,QAAU,EAEpDhD,KAAMA,EACNgD,MAAO0D,EAAQ5F,QACZqU,GAAWA,EAAOnS,QAAUA,IAE/B0D,QAASA,GACT,EAGN1G,KAAI,mBAAA+C,OAAqB5D,EAAK,UAC9B+T,QAASA,EACTX,aAAcoC,EAAKS,cAGvB3W,cAAA,OACED,UAAWsF,IACT,WACA3F,EAAQ,qBACRI,SAEFE,cAAC+V,KAAU,CACTC,OAAQ7H,IAAqC,IAAlC8H,OAAO,SAAE/T,EAAQ,MAAEqC,IAAS4J,EACrC,OACEnO,cAAC4W,KAAsB,CACrB1U,SAAW+B,IACT,MAAMmS,EAAY,IACbzB,EAAU,mBAADrQ,OAAoB5D,EAAK,OAEjC2V,EAAWpS,EAAMQ,OAAOF,MAE5BsS,aACET,EAAU/T,OACVgU,KAGFnB,EAAOxU,GACPyU,EAAOzU,EAAO,CACZa,KAAM6U,EAAU7U,KAChBc,OAAQgU,EAER9R,MAAOuS,KAAmBT,GAAY,KAAO,MAIjDnU,EAAS+B,EAAM,EAEjBlE,UAAU,2BACVwB,KAAI,mBAAA+C,OAAqB5D,EAAK,YAC9B6D,MAAOA,EACPhC,SAAUjB,EAAOiB,UACjB,EAGNhB,KAAI,mBAAA+C,OAAqB5D,EAAK,YAC9B+T,QAASA,EACTX,aAAcoC,EAAK7T,WAGvBrC,cAAA,OACED,UAAWsF,IACT,WACA3F,EAAQ,qBACRI,SAEFE,cAAC+V,KAAU,CACTC,OAAQ1D,IAED,IADL2D,OAAO,SAAE/T,EAAQ,OAAE0M,EAAQrK,MAAOwS,IACnCzE,EAEC,GAAsB,OAAlByE,EACF,OAAO,KAGT,MAAM,SAAExU,EAAQ,gBAAE2F,GAAoB5G,EAEhCO,EACqB,kBAAlBkV,EACHA,EAAclV,UACd,GACA0C,EACqB,kBAAlBwS,EACHA,EAAc7L,IACd6L,EAEAC,EACJ3J,aAAwB9K,GAE1B,OACEvC,cAACgX,EAAoB,CACnB9U,SAAUA,EACV0M,OAAQA,EACR7O,UAAWL,EAAQuX,aAAmB1U,IACtChB,KAAI,mBAAA+C,OAAqB5D,EAAK,WAC9B6D,MAAOA,EACP2S,UAAU,EACVhP,gBAAiBA,EACjBH,UAAWzG,EAAOC,KAClBM,UAAWA,EACXsK,kBAAmBA,GACnB,EAGN5K,KAAI,mBAAA+C,OAAqB5D,EAAK,WAC9B+T,QAASA,EACTX,aAAcoC,EAAK3R,YAtKsB2R,EAAKiB,GAyK9C,MAIZnX,cAAA,OAAKD,UAAWL,EAAQ,iBAAiBI,SACvCE,cAAA,OAAKD,UAAU,YAAWD,SACxBF,eAAA,UACEO,KAAK,SACLJ,UAAU,mCACVK,QAASA,KACP6U,EAAO,CACL1T,KAAMjC,EAAQ,GAAGiC,KACjBc,OAAQ,WACRkC,MAAO,IACP,EACFzE,SAAA,CAEFE,cAAC4H,IAAI,CAACC,KAAK,SAAS,OAEnB5H,IAAKC,EAAE,gCAMhBN,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,UACEG,KAAK,SACLJ,UAAU,mCACV,eAAa,QACbK,QAASiU,EAAsBvU,SAE9BG,IAAKC,EAAE,sBAEVF,cAAA,UACEG,KAAK,SACLJ,UAAU,sDAAqDD,SAE9DG,IAAKC,EAAE,gCAGP,ECzUX,MAAMf,GAAYC,YAAgB4U,IA6BnBoD,OA3BS1O,IACtB,MAAM,mBAAEuL,EAAkB,kBAAEoD,EAAiB,QAAE/X,GAAYoJ,EAErDhJ,EAAUP,GAAUuJ,GAE1B,OACE1I,cAAA,OACED,UAAWL,EAAQ,mBACnByF,SAAS,KACTC,KAAK,SACL,kBAAgB,eAActF,SAE9BE,cAAA,OAAKD,UAAU,wBAAuBD,SACpCE,cAAA,OAAKD,UAAU,gBAAeD,SAC3BmU,GACCjU,cAACoU,GAAS,IACJ1L,EACJpJ,QAASA,EACTgV,SAAU+C,SAKd,E,4BCZV,MAAMC,GAA0BtY,GAAUA,EAAM6T,KAAK0E,iBAE/CpY,GAAYC,YAAgB8S,IAE5BsF,GAAOvZ,IAWN,IAXO,sBACZsI,EAAqB,WACrBwN,EACA0D,eAAgBC,EAAQ,mBACxB5E,EAAkB,eAClB6E,EAAc,UACdC,EAAS,kBACTzL,EAAiB,aACjB0L,EAAY,aACZC,EAAY,cACZjR,GACD5I,EACC,MAAMsZ,EAAmB5X,YAAY2X,IAC/B3E,EAAchT,aAAaX,GAAUA,EAAMyG,cAAckN,cACzDtP,EAAWC,eACX,aAAEoR,EAAY,QAAED,EAAO,SAAEsD,EAAQ,SAAEC,GAAapD,eAEtDqD,qBAAU,KACR,MAAMC,EAAoB9Z,IAAiB,IAAhB,OAAE+Z,GAAQ/Z,EACnC4Z,EAASG,EAAOpQ,UAAWoQ,EAAOC,WAAW,EAQ/C,OALIvR,GACFwR,aAAeC,KAAuBJ,GAIjC,KACDrR,GACF0R,aAAiBD,KAAuBJ,EAC1C,CACD,GACA,CAACF,EAAUnR,IAEd,MAUMnH,EAAUP,GAAU,CACxB4U,aACAjB,qBACA6E,iBACAE,eACAH,WACA/E,gBAGF,OACE/S,eAAA,QACEG,UAAWL,EAAc,KACzB4U,SAAUI,GAtBIY,IAChB,MAAMkD,EAAkBC,aAAyBnD,EAAMvB,GAEvD+D,EAAa,CACXF,YACAtC,KAAMkD,GACN,IAEY5C,CAACC,EAAQC,IAAMlE,QAAQC,IAAIgE,EAAQC,KAcLhW,SAAA,CAE1CE,cAAA,OAAKD,UAAWL,EAAQ,eAAeI,SACpC+X,EACG,aACA9D,EAAW5S,KAAK8U,GAEZjW,cAAC0Y,KAAc,CACbjE,QAASA,EACTwB,MAAOA,EACP0C,wBAAwB,WACxBC,WAAYlZ,EAEZmZ,eAAe,0BACfC,wBAAwB,WACxB3M,kBAAmBA,EACnBuL,SAAUA,EACVK,SAAUA,EACVC,SAAUA,EACVzR,sBAAuBA,EACvBqR,UAAWA,GARN3B,EAAMlO,eAavBnI,eAAA,OAAKG,UAAU,eAAcD,SAAA,EACzB4X,GACA9X,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,SAAOG,UAAU,kBAAiBD,SAAA,CAChCE,cAAA,SACEG,KAAK,WACLgC,QAASoV,EACTrV,SAAUA,IACRmB,EAAS,CACPlD,KAAM8Q,KAAY8H,+BAGrB,IACF9Y,IAAKC,EAAE,0BACD,IAAI,eAIjBF,cAAA,UACEG,KAAK,SACLJ,UAAU,mCACV,eAAa,QACbK,QAASuX,EAAe7X,SAEvBG,IAAKC,EAAE,kBAERwX,GACA1X,cAAA,UAAQG,KAAK,SAASJ,UAAU,kBAAiBD,SAC9CG,IAAKC,EAAE,qBAIT,EAQXsX,GAAKnP,aAAe,CAClB9B,sBAAuB,CAAC,GAGXiR,UC3If,MAAMrY,GAAYC,YAAgB8S,IAE5B8G,GAAStQ,IACb,MAAM,iBAAEuQ,EAAgB,eAAEtB,EAAc,UAAEC,EAAS,cAAExF,GAAkB1J,EAEjEhJ,EAAUP,GAAUuJ,GACpBmH,EAAUlQ,aAAaX,GAAUA,EAAMyG,cAAcoK,UAE3D,OACE7P,cAAA,OAAKD,UAAWL,EAAQ,eAAgByF,SAAS,KAAKC,KAAK,SAAQtF,SACjEE,cAAA,OAAKD,UAAU,wBAAwBqF,KAAK,WAAUtF,SACpDF,eAAA,OAAKG,UAAU,gBAAeD,SAAA,CAC5BF,eAAA,OAAKG,UAAU,eAAcD,SAAA,CAC3BE,cAAA,MAAID,UAAU,cAAaD,SACxBkR,aAAoB4G,EAAW/H,KAElC7P,cAAA,UACEG,KAAK,SACLJ,UAAWL,EAAQ,gBACnB,aAAW,QACXU,QAASuX,EAAe7X,SAExBE,cAAA,QAAM,cAAY,OAAMF,SAAC,cAG5BsS,GACCpS,cAAA,OAAKD,UAAU,aAAYD,SACxBmZ,EACCjZ,cAAA,OAAKD,UAAWL,EAAQ,qBAExBM,cAACwX,GAAI,IAAK9O,YAMhB,EAWVsQ,GAAM3Q,aAAe,CACnB0L,WAAY,GACZpB,aAAa,GAGAqG,UCpDf,MAAM7Z,GAAYC,YAAgB8S,IAE5BgH,GAAYxQ,IAChB,MAAM,iBAAEuQ,EAAgB,UAAErB,EAAS,cAAExF,GAAkB1J,EAEjDhJ,EAAUP,GAAUuJ,GACpBmH,EAAUlQ,aAAaX,GAAUA,EAAMyG,cAAcoK,UAE3D,OACEjQ,eAAA,OAAKG,UAAWL,EAAQ,aAAcyF,SAAS,KAAIrF,SAAA,CACjDE,cAAA,OAAKD,UAAWL,EAAQ,mBAAmBI,SACxCkR,aAAoB4G,EAAW/H,KAElC7P,cAAA,OAAAF,SACGsS,GACCpS,cAAA,OAAKD,UAAU,aAAYD,SACxBmZ,EACCjZ,cAAA,OAAKD,UAAWL,EAAQ,qBAExBM,cAACwX,GAAI,IAAK9O,UAKd,EAWVwQ,GAAS7Q,aAAe,CACtB0L,WAAY,GACZpB,aAAa,GAGAuG,UCtCAC,OALIlb,IAAmB,OAAbyK,GAAOzK,EAE9B,OADoB0B,aAAaX,GAAUA,EAAMyG,cAAckN,cAC1C3S,cAACgZ,GAAK,IAAKtQ,IAAY1I,cAACkZ,GAAQ,IAAKxQ,GAAS,ECErE,MAAMvJ,GAAYC,YAAgBga,IAE5BC,GAAgB3Q,IACpB,MAAM,QAAE4F,EAAO,iBAAEgL,EAAgB,eAAEnQ,GAAmBT,EAChDhJ,EAAUP,GAAUuJ,GAEpB6Q,EAAapQ,EACfmQ,EAAiBE,OACjBF,EAAiBG,QAEfC,EAAuBpL,EAAQlM,OAASmX,EAE9C,OACE3Z,eAAAC,WAAA,CAAAC,SAAA,CACGwO,EAIEjM,QAAO,CAACsX,EAAUzO,IACjBwO,EAAuBxO,EAAMqO,EAAa,EAAIrO,EAAMqO,IAErDpY,KAAKyL,GACJhN,eAAA,KACEiN,KAAMD,EAAOkC,IAAMlC,EAAOkC,IAAM,GAChC/O,UAAWL,EAAQ,iBAEnBgO,MAAOd,EAAOM,MACdzI,OAAQmI,EAAOG,OAAS,cAAWvF,EACnCwF,IAAI,aACJ5M,QACEwM,EAAOxM,QACF6D,IACCA,EAAM8K,iBACFnC,EAAOxM,SACTwM,EAAOxM,QAAQ,CACb4G,gBAAiB4F,EAAO5F,iBAE5B,OAEFQ,EACL1H,SAAA,CAEA8M,EAAO/E,MACNjI,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC4H,IAAI,CAACC,KAAM+E,EAAO/E,OAAQ,UAI9B+E,EAAOoC,OAvBHpC,EAAO1B,OA0BlBlL,cAACqO,GAAc,CACbC,QACEoL,EACIpL,EAAQjM,QAAO,CAACsX,EAAUzO,IAAQA,GAAOqO,EAAa,IACtD,GAEN/K,YAA4B,IAAf+K,EAAmBtZ,IAAKC,EAAE,WAAaD,IAAKC,EAAE,QAC3DkO,WAAW,MAEZ,EAYPiL,GAAahR,aAAe,CAC1BiG,QAAS,GACTgL,iBAAkB,CAChBE,OAAQ,EACRC,QAAS,ICrEb,MAAMG,GAAkB,CACtB/U,eACA4D,eACAK,mBACAc,kBACAwB,kBACAwC,iBACAwB,iBACA6C,mBACAgB,uBACAI,qBACAK,eACA0D,kBACA+B,cACAE,aD2DaA,ICxDAO,Y,mCChCf,kCAAO,MAAMzW,EAAqBnE,GAAUA,EAAM+D,W,8CCmBnCoO,IAnBSlT,IAA0B,IAAzB,QAAEqQ,EAAO,OAAEY,GAAQjR,EAC1C,OACE+B,cAAAH,WAAA,CAAAC,SACGwO,EAAQnN,KAAI,CAACyL,EAAQlM,IAElBV,cAACkP,EAAM,CAELhC,MAAON,EAAOM,MACdrF,KAAM+E,EAAOK,SACbJ,KAAMD,EAAOkC,IACb/B,OAAQH,EAAOG,OACfoC,MAAM,GALDzO,MASV,C,mCCfP,oJAEA,IAAImZ,EACAC,EACAC,EACAC,EACAjX,EACJ,MAGae,EAA0BG,IACrC,MAAMgW,EAAgBhW,EAAMgW,cAE5BA,EAAcC,QAAQ,MAAMxW,MAAMhF,WAAa,4BAC/Cub,EAAcvW,MAAM5F,QAAU,IAE9B+b,EAAyB5V,EAAMgW,cAAcE,gBAC7CL,EAAkB7V,EAAMgW,cAAcC,QAAQ,MAE9CL,EAAuBnW,MAAMhF,WAC3B,sCACFmb,EAAuBnW,MAAMf,MAAQ,IACrCkX,EAAuBnW,MAAMlF,SAAW,QACxCqb,EAAuBnW,MAAM0W,KAAOnW,EAAMoW,QAftB,GAegD,KACpER,EAAuBnW,MAAM1F,QAAU,QAEvCgc,EAAe/V,EAAMoW,QACrBtX,EAAc+W,EAAgBQ,YAC9BP,EAAeD,EAAgBS,WAAaxX,CAAW,EAG5CiB,EAAqBC,IACD,OAA3B4V,IACFA,EAAuBnW,MAAM0W,KAC3BL,EAAe9V,EAAMoW,QAAUL,EAAe,KAClD,EAGWxV,EAA0BA,CAACpD,EAAY2B,EAAaM,KAC/DA,EAAS,CACPlD,KAAMoD,IAAmBiX,aACzBpZ,aACA2B,eACA,EAGSmB,EAAuBA,CAACD,EAAO7C,EAAYiC,KAC9B,OAApByW,IACFA,EAAgBpW,MAAM+W,eAAe,cACrCjW,EACEpD,EACAsZ,KAAKC,IACH5X,EAAckB,EAAMoW,QAAUL,EA5ChB,GADJ,KAgDZ3W,IAGJY,EAAMgW,cAAcvW,MAAM+W,eAAe,SACzCxW,EAAMgW,cAAcvW,MAAM+W,eAAe,cACzCxW,EAAMgW,cAAcvW,MAAM+W,eAAe,YACzCxW,EAAMgW,cAAcvW,MAAM+W,eAAe,QACzCxW,EAAMgW,cAAcvW,MAAM+W,eAAe,WAEzCZ,EAAuBnW,MAAM+W,eAAe,SAC5CZ,EAAuBnW,MAAM+W,eAAe,cAC5CZ,EAAuBnW,MAAM+W,eAAe,YAC5CZ,EAAuBnW,MAAM+W,eAAe,QAC5CZ,EAAuBnW,MAAM+W,eAAe,WAE5CG,SAASC,KAAKnX,MAAM+W,eAAe,SAAS,C,mCCtE9C,yBAGA,MAAMK,EAA4B9b,GAAUA,EAAMgH,aAAaqJ,OACzD0L,EAAoBC,EAAQ,IAA6BC,QA+BhD7S,IA7BMnK,IAAsD,IAArD,gBAAE+I,EAAe,KAAEL,EAAI,MAAEC,EAAK,cAAEC,GAAe5I,EACnE,MAAMoR,EAAS1P,YAAYmb,GACrBI,EAAcxM,iBAAO,MAE3BuJ,qBAAU,KACJiD,EAAYC,SACdJ,EAAkBG,EAAYC,QAChC,GACC,CAACD,IAEJ,MAAME,EAAWC,KAAKC,MAEtB,OACEtb,cAAA,OACEgB,IAAKka,EACLnb,UAAU,eACV,eAAcsP,EACd,iBAAgB+L,EAChB,YAAWzU,EACX,aAAYC,EACZ,gCAA+BI,EAC/B,sBAAoB,QACpB,sBAAoB,QACpB,sBAAoB,QACpB,sBAAqBH,EAAgB,OAAS,SACzC,C,8DCxBX,MAAM0U,EAAyBvc,GAAUA,EAAM6T,KAAK7L,gBAqErCwU,MAnEDvd,IAkBP,IAlBQ,UACb8B,EAAS,QACT0U,EAAO,SACPlS,EAAQ,aACRyF,EAAY,GACZmP,EAAE,kBACFsE,EAAiB,WACjBC,EAAU,kBACVvP,EAAiB,KACjB5K,EAAI,gBACJ2G,EAAe,SACfwP,EAAQ,SACRK,EAAQ,SACRC,EAAQ,MACRzT,EAAK,WACLoX,EAAU,UACV/D,EAAS,sBACTrR,GACDtI,EACC,MAAM+I,EAAkBrH,YAAY4b,GAE9BK,EAAiBC,YAAyB,CAAEtZ,WAAUmV,cACtD,QAAEoE,EAAO,UAAEC,GAAcC,YAAqB,CAClDzV,wBACAhE,WACAwF,UAAWxG,EACXqW,cAGF,OACE5X,cAAC4b,EAAc,CACb7b,UAAWA,EACX0U,QAASA,EACTzM,aAAcA,EACdmP,GAAIA,EACJsE,kBAAmBA,EACnBC,WAAYA,EACZvP,kBAAmBA,EACnB5K,KAAMA,EACN2G,gBAAiBA,EACjBlB,gBAAiBA,EACjB+Q,SAAUA,EACVC,SAAUA,EACVzT,MAAOA,EACPoX,WAAYA,EACZG,QAASA,EACTC,UAAWA,GACX,E,OCpDN,MAAMrD,EAAiBza,IAchB,IAdiB,QACtBwW,EAAO,MACPwB,EAAK,eACLgG,EAAc,wBACdtD,EAAuB,WACvBC,EAAU,eACVC,EAAc,wBACdC,EAAuB,kBACvB3M,EAAiB,SACjBuL,EAAQ,SACRK,EAAQ,SACRC,EAAQ,sBACRzR,EAAqB,UACrBqR,GACD3Z,EACC,MAAMie,EAAaxE,GAAYzB,EAAMiG,WAGrC,OAFuBjG,EAAM1T,WAAaC,IAAW2Z,OAIjDvc,eAAA,OAAKG,UAAW+Y,EAAwBhZ,SAAA,CACtCF,eAAA,SACEG,UAAW8Y,EACXuD,QAAO,WAAA9X,OAAa2R,EAAMlO,WAAYjI,SAAA,CAErCmW,EAAMoG,YAAcrc,cAAA,QAAAF,SAAM,MAC1BmW,EAAMpU,aAET7B,cAAA,OAAKD,UAAW4Y,EAAwB7Y,SACtCE,cAACwb,EAAK,CACJzb,UACE6Y,EAAW3B,YAAmBhB,EAAM1T,SAAU2Z,IAEhDzH,QAASA,EACTlS,SAAU0T,EAAM1T,SAChByF,aAAciO,EAAMhO,SAAW,CAAC,EAChCkP,GAAE,WAAA7S,OAAa2R,EAAMlO,WACrB0T,kBAAmBxF,EAAMwF,kBACzBC,WAAYzF,EAAMyF,WAClBvP,kBAAmBA,EACnB5K,KAAM0U,EAAMlO,UACZG,gBAAiB+N,EAAM/N,gBACvBwP,SAAUwE,EACVnE,SAAUA,EACVC,SAAUA,EACVzT,MAAO0R,EAAMmC,WACbuD,WAAY1F,EAAM0F,WAClB/D,UAAWA,EACXrR,sBAAuBA,SAS/BvG,cAACwb,EAAK,CACJzb,UAAWkc,EACXxH,QAASA,EACTlS,SAAU0T,EAAM1T,SAChB4U,GAAE,WAAA7S,OAAa2R,EAAMlO,WACrB2T,WAAYzF,EAAMyF,WAClBna,KAAM0U,EAAMlO,UACZ2P,SAAUwE,EACV3X,MAAO0R,EAAMmC,YACb,EAQNM,EAAerQ,aAAe,CAC5BuQ,WAAY,CAAC,GAGAF,K","file":"static/js/101.08fe8752.chunk.js","sourcesContent":["const columnsModalSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"columns-modal\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ columnsModalOpen }) => (columnsModalOpen ? \"block\" : \"none\"),\n      opacity: \"0\",\n      animation: ({ columnsModalOpen }) =>\n        columnsModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"close-button\": {\n    composes: \"close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"3px\",\n    \"margin-bottom\": \"3px\",\n  },\n  tabs: {\n    composes: \"nav nav-tabs\",\n    \".nav-tabs&\": {\n      \"margin-bottom\": \"10px\",\n      \"list-style\": \"none\",\n      \"padding-inline-start\": \"unset\",\n    },\n  },\n  \"tab-button\": {\n    composes: \"nav-link\",\n    \".nav-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default columnsModalSkin;\n","const orderingBox = {\n  position: \"relative\",\n  padding: \"16px\",\n  \"margin-bottom\": \"5px\",\n  background: \"var(--gc-light-background)\",\n  color: \"var(--gc-default-text-color)\",\n  border: \"1px solid var(--gc-border-separator-color)\",\n  \"border-radius\": \"4px\",\n};\n\nconst columnsOrderingSkin = {\n  \"ordering-box\": {\n    ...orderingBox,\n  },\n  \"ordering-box-disabled\": {\n    ...orderingBox,\n    opacity: 0.5,\n  },\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n  \"droppable-area\": {\n    background: \"var(--gc-light-background)\",\n    padding: \"4px\",\n  },\n  \"is-dragging-over\": {\n    background: \"var(--gc-dark-background)\",\n    padding: \"4px\",\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n  },\n};\n\nexport default columnsOrderingSkin;\n","import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport columnsOrderingSkin from \"../skin/columns/columns-ordering.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst selectOrderedColumns = (state) => state.datagrid.orderedColumns;\n\nconst useStyles = createUseStyles(columnsOrderingSkin);\n\nconst ColumnsOrdering = ({\n  columns,\n  visibleColumns,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const classes = useStyles();\n  const orderedColumns = useSelector(selectOrderedColumns);\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"ordering_drag_column\")}</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() => resetColumnsOrdering(columns)}\n          >\n            {i18n.t(\"reset_ordering\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      <DragDropContext\n        onDragEnd={({ source, destination, draggableId }) => {\n          if (source && destination && source.index !== destination.index) {\n            changeOrdering(draggableId, source.index, destination.index);\n          }\n        }}\n      >\n        <Droppable droppableId=\"columns\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={\n                snapshot.isDraggingOver\n                  ? classes[\"is-dragging-over\"]\n                  : classes[\"droppable-area\"]\n              }\n            >\n              {orderedColumns\n                .map((columnName) =>\n                  columns.find((column) => column.name === columnName)\n                )\n                .map((column, columnIndex) => (\n                  <Draggable\n                    draggableId={column.name}\n                    index={columnIndex}\n                    key={column.name}\n                  >\n                    {(provided) => (\n                      <div\n                        key={column.name}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={\n                          visibleColumns.includes(column.name)\n                            ? classes[\"ordering-box\"]\n                            : classes[\"ordering-box-disabled\"]\n                        }\n                      >\n                        {column.displayAs}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default ColumnsOrdering;\n","import PropTypes from \"prop-types\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { fieldTypes } from \"../../../constants/field-types\";\n\nconst ColumnsVisibility = ({\n  columns,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  classes,\n}) => {\n  return (\n    <>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={() => selectColumnsAllOrNone(columns)}\n            checked={visibleColumns.length === columns.length}\n          />\n          &nbsp;&nbsp;{i18n.t(\"select_all\")}\n        </label>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      {columns\n        .filter((c) => c.dataType !== fieldTypes.INVISIBLE)\n        .map((column) => (\n          <div key={column.name}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={visibleColumns.includes(column.name)}\n                onChange={() => toggleVisibleColumn(column.name, columns)}\n              />\n              &nbsp;&nbsp;\n              {column.displayAs}\n            </label>\n          </div>\n        ))}\n    </>\n  );\n};\n\nColumnsVisibility.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default ColumnsVisibility;\n","const widthChanging = {\n  display: \"block\",\n  position: \"absolute\",\n  right: \"-13px\",\n  height: \"39px\",\n  width: \"10px\",\n  cursor: \"col-resize\",\n  opacity: \"0.8\",\n  \"z-index\": \"10\",\n  \"&:hover\": {\n    background: \"var(--gc-emphasis-background-color)\",\n    cursor: \"col-resize\",\n  },\n  \"&:focus, &:active\": {\n    background: \"transparent\",\n    cursor: \"col-resize\",\n  },\n};\n\nconst miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"interactive-grid\": {\n    composes: \"table table-bordered\",\n    width: ({ columnWidth }) =>\n      typeof columnWidth === \"object\" && Object.keys(columnWidth).length > 0\n        ? \"auto\"\n        : \"100%\",\n  },\n  \"scrolling-wrapper\": {\n    composes: \"gc-mini-grid-scrolling-wrapper\",\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n    \"margin-bottom\": \"10px\",\n  },\n  \"width-changing\": {\n    ...widthChanging,\n  },\n  \"width-changing-last\": {\n    ...widthChanging,\n    right: \"-8px\",\n  },\n  \"header-column\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n    \"min-width\": \"100px\",\n    \"white-space\": \"nowrap\",\n    \"padding-right\": \"10px\",\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport PropTypes from \"prop-types\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport {\n  columnChangeWidthAction,\n  columnWidthOnDrag,\n  columnWidthOnDragEnd,\n  columnWidthOnDragStart,\n} from \"../../../utils/column-width\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnWidthActions } from \"../../../actions/column-width-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(miniGridSkin);\nconst selectColumnWidth = (state) => state.columnWidth;\n\nconst DatagridColumnWidth = ({ visibleColumns }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"column_width_drag\")}&nbsp;</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() =>\n              dispatch({\n                type: columnWidthActions.RESET_COLUMN_WIDTH,\n              })\n            }\n          >\n            {i18n.t(\"reset_column_width\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"scrolling-wrapper\"]}>\n        <table className={classes[\"interactive-grid\"]}>\n          <thead>\n            <tr>\n              {visibleColumns.map((column, numRow) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <th key={column.name}>\n                    <div\n                      className={classes[\"header-column\"]}\n                      style={{\n                        width: columnWidth[column.name],\n                        maxWidth: columnWidth[column.name],\n                      }}\n                    >\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        style={{\n                          display: \"none\",\n                        }}\n                      ></div>\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        draggable={true}\n                        onDragStart={columnWidthOnDragStart}\n                        onDrag={columnWidthOnDrag}\n                        onDragEnd={(event) =>\n                          columnWidthOnDragEnd(event, column.name, dispatch)\n                        }\n                      ></div>\n                      <span>{column.displayAs}</span>\n                    </div>\n                  </th>\n                )\n              )}\n            </tr>\n          </thead>\n        </table>\n      </div>\n      <div>\n        <br />\n        <p>{i18n.t(\"column_width_set_width_manually\")}</p>\n      </div>\n      <div>\n        {visibleColumns.map((column) => {\n          const columnWidthValue = columnWidth[column.name]\n            ? columnWidth[column.name].replace(\"px\", \"\")\n            : \"\";\n\n          return (\n            <div className=\"mb-3 row\" key={column.name}>\n              <label\n                className=\"col-sm-2 col-form-label\"\n                for={`gc-column-width-${column.name}`}\n              >\n                {column.displayAs}\n              </label>\n              <div className=\"col-sm-2\">\n                <input\n                  type=\"number\"\n                  value={columnWidthValue}\n                  name={`gc-column-width-${column.name}`}\n                  className=\"form-control\"\n                  onChange={(event) =>\n                    columnChangeWidthAction(\n                      column.name,\n                      event.target.value,\n                      dispatch\n                    )\n                  }\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nDatagridColumnWidth.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridColumnWidth;\n","import { createUseStyles } from \"react-jss\";\nimport classNames from \"classnames\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport columnsModalSkin from \"../skin/columns/columns-modal.skin\";\nimport ColumnsOrdering from \"./columns-ordering\";\nimport ColumnsVisibility from \"./columns-visibility\";\nimport { useState } from \"react\";\nimport DatagridColumnWidth from \"../datagrid/datagrid-column-width\";\n\nconst useStyles = createUseStyles(columnsModalSkin);\n\nconst TAB_VISIBILITY = \"tab-visibility\";\nconst TAB_ORDERING = \"tab-ordering\";\nconst TAB_WIDTH = \"tab-width\";\n\nconst ColumnsModal = ({\n  columns,\n  columnsModalOpen,\n  onColumnsModalClose,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  visibleColumnsWithDetails,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const [tabSelected, setTabSelection] = useState(TAB_VISIBILITY);\n  const classes = useStyles({ columnsModalOpen });\n\n  return (\n    <div className={classes[\"columns-modal\"]} tabIndex=\"-1\" role=\"dialog\">\n      <div\n        className={classNames(\"modal-dialog\", {\n          \"modal-l\": tabSelected !== TAB_WIDTH,\n          \"w-100 mw-100\": tabSelected === TAB_WIDTH,\n        })}\n        role=\"document\"\n      >\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"columns\")}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={onColumnsModalClose}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            {columnsModalOpen && (\n              <>\n                <ul className={classes[\"tabs\"]}>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_VISIBILITY,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_VISIBILITY);\n                      }}\n                    >\n                      {i18n.t(\"tab_visibility\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_ORDERING,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_ORDERING);\n                      }}\n                    >\n                      {i18n.t(\"tab_ordering\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_WIDTH,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_WIDTH);\n                      }}\n                    >\n                      {i18n.t(\"tab_width\")}\n                    </button>\n                  </li>\n                </ul>\n                {tabSelected === TAB_VISIBILITY && (\n                  <ColumnsVisibility\n                    columns={columns}\n                    selectColumnsAllOrNone={selectColumnsAllOrNone}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    classes={classes}\n                  />\n                )}\n                {tabSelected === TAB_ORDERING && (\n                  <ColumnsOrdering\n                    columns={columns}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    changeOrdering={changeOrdering}\n                    resetColumnsOrdering={resetColumnsOrdering}\n                  />\n                )}\n                {tabSelected === TAB_WIDTH && (\n                  <DatagridColumnWidth\n                    visibleColumns={visibleColumnsWithDetails}\n                  />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnsModal;\n","const bodySkin = {\n  \"@keyframes flash\": {\n    \"0%\": { opacity: \"1\" },\n    \"25%\": { opacity: \"0\" },\n    \"50%\": { opacity: \"1\" },\n    \"75%\": { opacity: \"0\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"animation-flash\": {\n    animation: \"$flash 1s ease 0s normal forwards 1\",\n    position: \"relative\",\n    \"z-index\": \"1\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n  \"table-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  \"open-row\": {\n    cursor: \"pointer\",\n    padding: \"0 5px\",\n    \"min-width\": \"28px\",\n  },\n};\n\nexport default bodySkin;\n","import { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ActionsColumn from \"../../../components/datagrid/body/actions-column\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport { masterDetailActions } from \"../../../actions/master-detail-actions\";\nimport MasterDetail from \"../../../components/common/master-detail\";\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\nconst selectHasMasterDetail = (state) => state.configuration.hasMasterDetail;\nconst selectColumnWidth = (state) => state.columnWidth;\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst DatagridRow = ({\n  lastPrimaryKeyValue,\n  rowData,\n  hasActions,\n  visibleColumns,\n  settings,\n  configurationSettings: { onRowUpdate, onRowUnmount },\n  rightSideActions,\n  skin,\n  theme,\n  publishEvents,\n  ...rest\n}) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n  const hasMasterDetail = useSelector(selectHasMasterDetail);\n  const openedRows = useSelector(selectOpenedRows);\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  const {\n    grocery_crud_extras: { primaryKeyValue },\n  } = rowData;\n\n  useLayoutEffect(() => {\n    if (onRowUpdate) {\n      onRowUpdate({ primaryKeyValue });\n    }\n\n    return () => {\n      if (onRowUnmount) {\n        onRowUnmount({ primaryKeyValue });\n      }\n    };\n  }, [primaryKeyValue, rowData, onRowUpdate, onRowUnmount]);\n\n  const ActionsTd = () => (\n    <td key=\"column__action\" className={classes[\"column-action\"]}>\n      <ActionsColumn\n        {...rest}\n        backendActionButtons={rowData.grocery_crud_extras.actionButtons}\n        actionButtons={settings.actionButtons}\n        primaryKeyValue={primaryKeyValue}\n      />\n    </td>\n  );\n\n  const isRowOpened =\n    hasMasterDetail && openedRows.find((rowId) => rowId === primaryKeyValue);\n\n  return (\n    <>\n      <tr\n        className={\n          lastPrimaryKeyValue &&\n          lastPrimaryKeyValue === rowData.grocery_crud_extras.primaryKeyValue\n            ? classes[\"animation-flash\"]\n            : undefined\n        }\n      >\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n        {visibleColumns.map((column, numRow) => (\n          <td key={column.name}>\n            <div\n              className={classes[\"column-text\"]}\n              style={{\n                width: columnWidth[column.name],\n                maxWidth: columnWidth[column.name],\n              }}\n            >\n              {hasMasterDetail && numRow === 0 && (\n                <>\n                  <span\n                    className={classes[\"open-row\"]}\n                    onClick={() =>\n                      dispatch({\n                        type: isRowOpened\n                          ? masterDetailActions.CLOSE_ROW\n                          : masterDetailActions.OPEN_ROW,\n                        rowId: primaryKeyValue,\n                      })\n                    }\n                  >\n                    <Icon icon={isRowOpened ? \"caret-down\" : \"caret-right\"} />\n                  </span>\n                </>\n              )}\n              {formatDatagridValue(rowData[column.name], column.dataType, {\n                dateFormat,\n                fieldName: column.name,\n                fieldOptions: column.options,\n                locale,\n                permittedValues: column.permittedValues,\n                primaryKeyValue,\n              })}\n            </div>\n          </td>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n      </tr>\n      {isRowOpened && (\n        <tr>\n          <td colSpan={visibleColumns.length + (hasActions ? 1 : 0)}>\n            <MasterDetail\n              primaryKeyValue={primaryKeyValue}\n              skin={skin}\n              theme={theme}\n              publishEvents={publishEvents}\n            />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nDatagridRow.propTypes = {\n  settings: PropTypes.object,\n  configurationSettings: PropTypes.object,\n};\n\nDatagridRow.defaultProps = {\n  settings: {},\n  configurationSettings: {},\n};\n\nexport default DatagridRow;\n","import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport DatagridRow from \"./datagrid-row\";\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst selectRows = (state) => state.datagridRows;\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\n\nconst DatagridBody = (props) => {\n  const rows = useSelector(selectRows);\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const classes = useStyles();\n\n  return (\n    <tbody className={classes[\"table-body\"]}>\n      {rows.map((rowData, numRow) => (\n        <DatagridRow\n          key={numRow}\n          rowData={rowData}\n          rightSideActions={rightSideActions}\n          {...props}\n        />\n      ))}\n    </tbody>\n  );\n};\n\nDatagridBody.propTypes = {\n  rows: PropTypes.array,\n};\n\nexport default DatagridBody;\n","const checkboxSkin = {\n  checkbox: {\n    \"margin-right\": \"10px\",\n    display: \"inline-flex\",\n  },\n};\n\nexport default checkboxSkin;\n","import { createUseStyles } from \"react-jss\";\nimport checkboxSkin from \"../skin/datagrid/checkbox.skin\";\n\nconst useStyles = createUseStyles(checkboxSkin);\n\nconst DatagridCheckbox = ({ onChange, checked }) => {\n  const classes = useStyles();\n\n  return (\n    <input\n      type=\"checkbox\"\n      className={classes[\"checkbox\"]}\n      onChange={onChange}\n      checked={checked}\n    />\n  );\n};\n\nexport default DatagridCheckbox;\n","const footerSkin = {\n  footer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"16px 5px\",\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n    \"@media (max-width: 768px)\": {\n      \"flex-direction\": \"column\",\n    },\n  },\n  \"footer-error\": {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    padding: \"16px 5px\",\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n  },\n  \"footer-child\": {\n    display: \"flex\",\n    \"flex-direction\": ({ isMobileDevice }) =>\n      isMobileDevice ? \"column\" : \"row\",\n    \"& > div\": {\n      display: \"flex\",\n      \"flex-direction\": \"row\",\n      \"align-items\": \"center\",\n      padding: \"5px\",\n      \"justify-content\": \"end\",\n    },\n    \"& > div > div\": {\n      paddingRight: \"5px\",\n    },\n  },\n  pagination: {\n    composes: \"pagination\",\n    \".pagination&\": {\n      margin: \"0\",\n      \"list-style\": \"none\",\n    },\n  },\n  \"page-link\": {\n    composes: \"page-link\",\n    \".page-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"page-number\": {\n    composes: \"form-control\",\n    \"&.form-control\": {\n      borderRadius: \"0\",\n      width: \"100px\",\n      borderLeft: \"none\",\n      borderRight: \"none\",\n    },\n  },\n  \"@keyframes spin\": {\n    \"0%\": { transform: \"rotate(0deg)\" },\n    \"100%\": { transform: \"rotate(360deg)\" },\n  },\n  loader: {\n    border: \"4px solid #f3f3f3\",\n    \"border-radius\": \"50%\",\n    \"border-top\": \"4px solid #3498db\",\n    width: \"16px\",\n    height: \"16px\",\n    \"-webkit-animation\": \"$spin 2s linear infinite\" /* Safari */,\n    animation: \"$spin 2s linear infinite\",\n    \"margin-right\": \"10px\",\n  },\n  \"per-page-dropdown\": {\n    composes: \"form-control\",\n    \"min-width\": \"70px\",\n  },\n};\n\nexport default footerSkin;\n","import { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport DatagridPagingItemsLabel from \"../../../components/datagrid/footer/datagrid-paging-items-label\";\nimport footerSkin from \"../skin/datagrid/footer.skin\";\n\nconst useStyles = createUseStyles(footerSkin);\n\nconst DatagridFooter = (props) => {\n  const classes = useStyles(props);\n\n  const {\n    filteredTotalEntries,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    lastPage,\n    page: currentPage,\n    pageChange,\n    totalEntries,\n    perPage,\n    perPageChange,\n    forceSearch,\n    pagingLoading,\n    pagingOptions,\n    initError,\n    onClearAllCache,\n  } = props;\n\n  if (initError) {\n    return (\n      <div className={classes[\"footer-error\"]}>\n        <p>\n          Couldn't load initial data sorry 😞 . This message usually appears\n          when the server is down or there is an error in the code! If the issue\n          still persist, consider clearing the cache.\n        </p>\n        <p>\n          <button className=\"btn btn-outline-dark\" onClick={onClearAllCache}>\n            Clear Cache\n          </button>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.footer}>\n      <div className={classes[\"footer-child\"]}>\n        {pagingOptions.length > 0 && (\n          <div>\n            <div>Show</div>\n            <div>\n              <select\n                className={classes[\"per-page-dropdown\"]}\n                onChange={perPageChange}\n                value={perPage}\n              >\n                {pagingOptions.map((pageOption) => (\n                  <option key={pageOption} value={pageOption}>\n                    {pageOption}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>entries</div>\n          </div>\n        )}\n      </div>\n      <div className={classes[\"footer-child\"]}>\n        {pagingLoading && (\n          <div>\n            <div className={classes.loader} />\n          </div>\n        )}\n        {filteredTotalEntries && !pagingLoading ? (\n          <div>\n            <DatagridPagingItemsLabel\n              currentPage={currentPage}\n              totalEntries={totalEntries}\n              perPage={perPage}\n              filteredTotalEntries={filteredTotalEntries}\n            />\n          </div>\n        ) : null}\n        <div>\n          <ul className={classes.pagination}>\n            <li\n              className={classNames(\"page-item\", {\n                disabled: currentPage === 1,\n              })}\n            >\n              <button\n                className={classes[\"page-link\"]}\n                onClick={() => goToFirstPage(currentPage, lastPage)}\n              >\n                <Icon icon=\"step-backward\" />\n              </button>\n            </li>\n            <li\n              className={classNames(\"page-item\", {\n                disabled: currentPage === 1,\n              })}\n            >\n              <button\n                className={classes[\"page-link\"]}\n                onClick={() => goToPreviousPage(currentPage, lastPage)}\n              >\n                <Icon icon=\"chevron-left\" />\n              </button>\n            </li>\n            <li className=\"page-item\">\n              <input\n                type=\"number\"\n                className={classes[\"page-number\"]}\n                value={currentPage}\n                onChange={(event) => pageChange(event, currentPage, lastPage)}\n                disabled={filteredTotalEntries === 0}\n                onKeyUp={(event) => {\n                  if (event.key === \"Enter\") {\n                    forceSearch();\n                  }\n                }}\n              />\n            </li>\n            <li\n              className={classNames(\"page-item\", {\n                disabled: currentPage === lastPage,\n              })}\n            >\n              <button\n                className={classes[\"page-link\"]}\n                onClick={() => goToNextPage(currentPage, lastPage)}\n              >\n                <Icon icon=\"chevron-right\" />\n              </button>\n            </li>\n            <li\n              className={classNames(\"page-item\", {\n                disabled: currentPage === lastPage,\n              })}\n            >\n              <button\n                className={classes[\"page-link\"]}\n                onClick={() => goToLastPage(currentPage, lastPage)}\n              >\n                <Icon icon=\"step-forward\" />\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDatagridFooter.propTypes = {\n  page: PropTypes.number,\n};\n\nexport default DatagridFooter;\n","const headerSkin = {\n  \"search-column\": {\n    \"min-width\": \"160px\",\n    \"vertical-align\": \"middle\",\n  },\n  \"multiple-action-button\": {\n    composes: \"btn btn-default btn-outline-dark\",\n    display: \"inline-flex\",\n    \"margin-right\": \"5px\",\n    \"vertical-align\": \"middle\",\n    \"align-items\": \"center\",\n  },\n  \"table-th-with-ordering\": {\n    cursor: \"pointer\",\n  },\n  \"actions-column-header\": {\n    \"align-items\": \"center\",\n    display: \"flex\",\n    height: \"39px\",\n  },\n  \"with-ordering\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n  },\n\n  \"input-text\": {\n    composes: \"form-control\",\n  },\n  \"input-select\": {\n    composes: \"form-control form-select\",\n  },\n  \"input-select-search\": {},\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n};\n\nexport default headerSkin;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport headerSkin from \"../skin/datagrid/header.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getSearchInputComponent,\n  requireForceSearchOnChange,\n} from \"../../../utils/field-types\";\nimport { getClassNamesByDataType } from \"../../../utils/datagrid\";\nimport DatagridCheckbox from \"./datagrid-checkbox\";\nimport { getMultipleActionUrl } from \"../../../utils/urls\";\n\nconst useStyles = createUseStyles(headerSkin);\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\n\nconst DatagridHeader = (props) => {\n  const {\n    columnOrdering,\n    columnSearch,\n    columnSearchValues,\n    columnSearchValuesDisplayAs,\n    extendedSearchData,\n    forceSearch,\n    hasActions,\n    onMultipleDeleteModalOpen,\n    onSelectRowAllOrNone,\n    options: { actionButtonHasText, hasActionButtonsMultiple, deleteMultiple },\n    selectRowsAllOrNoneChecked,\n    selectedIds,\n    sorting,\n    sortingFor,\n    visibleColumns,\n    loadCssThirdParty,\n    isMobileDevice,\n    backendActionButtonsMultiple,\n    configurationSettings: { actionButtonsMultiple },\n  } = props;\n\n  const classes = useStyles(props);\n\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const hasQuickSearch = extendedSearchData.length === 0;\n\n  const isAnyColumnSearchable = visibleColumns.some(\n    (column) => column.isSearchable\n  );\n\n  const hasMultipleActions =\n    (deleteMultiple || hasActionButtonsMultiple) && !isMobileDevice;\n  const hasSecondaryHeader = isAnyColumnSearchable || hasMultipleActions;\n\n  const ActionsTd = () => (\n    <td className={classes[\"column-action\"]}>\n      <div className={classes[\"actions-column-header\"]}>\n        {hasMultipleActions && (\n          <>\n            <DatagridCheckbox\n              onChange={onSelectRowAllOrNone}\n              checked={selectRowsAllOrNoneChecked}\n            />\n            {selectedIds.length > 0 && (\n              <>\n                <button\n                  type=\"button\"\n                  className={classes[\"multiple-action-button\"]}\n                  onClick={onMultipleDeleteModalOpen}\n                >\n                  <Icon icon=\"trash\" />\n                  &nbsp;&nbsp;\n                  {actionButtonHasText && (\n                    <span>{i18n.t(\"action_delete\")}</span>\n                  )}\n                </button>\n                {hasActionButtonsMultiple &&\n                  backendActionButtonsMultiple.map((button) => (\n                    <a\n                      className={classes[\"multiple-action-button\"]}\n                      href={getMultipleActionUrl({ button, selectedIds })}\n                      target={button.newTab ? \"_blank\" : undefined}\n                      rel=\"noreferrer\"\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </a>\n                  ))}\n                {actionButtonsMultiple &&\n                  actionButtonsMultiple.map((button) => (\n                    <button\n                      className={classes[\"multiple-action-button\"]}\n                      onClick={() => {\n                        if (button.onClick) {\n                          button.onClick({ selectedIds });\n                        }\n                      }}\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </button>\n                  ))}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </td>\n  );\n\n  return (\n    <thead>\n      <tr>\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <th className={classes[\"column-action\"]}>{i18n.t(\"actions\")}</th>\n        )}\n        {visibleColumns.map((column, numRow) => (\n          <th\n            className={\n              column.hasOrdering ? classes[\"table-th-with-ordering\"] : undefined\n            }\n            key={column.name}\n            onClick={() => {\n              if (column.hasOrdering) {\n                columnOrdering({\n                  columnName: column.name,\n                  sorting:\n                    sorting === \"\" || sorting === \"desc\" ? \"asc\" : \"desc\",\n                });\n              }\n            }}\n          >\n            <div className={classes[\"with-ordering\"]}>\n              <span>{column.displayAs}</span>\n              {column.hasOrdering && (\n                <>\n                  {sortingFor === column.name ? (\n                    <Icon\n                      icon={\n                        sorting === \"asc\"\n                          ? \"sort-amount-down-alt\"\n                          : \"sort-amount-down\"\n                      }\n                    />\n                  ) : (\n                    <Icon icon=\"sort\" />\n                  )}\n                </>\n              )}\n            </div>\n          </th>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <th>{i18n.t(\"actions\")}</th>\n        )}\n      </tr>\n      {hasSecondaryHeader && (\n        <tr>\n          {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n          {visibleColumns.map((column) => {\n            const InputSearchComponent = getSearchInputComponent(\n              column.dataType\n            );\n\n            return (\n              <td key={column.name} className={classes[\"search-column\"]}>\n                {hasQuickSearch && column.isSearchable && (\n                  <InputSearchComponent\n                    className={\n                      classes[getClassNamesByDataType(column.dataType)]\n                    }\n                    placeholder={i18n.t(\"quick_search\")}\n                    permittedValues={column.permittedValues}\n                    loadCssThirdParty={loadCssThirdParty}\n                    onChange={(event) => {\n                      columnSearch({\n                        columnName: column.name,\n                        searchValue:\n                          typeof event.target.value === \"object\"\n                            ? event.target.value.key\n                            : event.target.value,\n                        searchValueDisplayAs:\n                          typeof event.target.value === \"object\"\n                            ? event.target.value.displayAs\n                            : \"\",\n                      });\n                      if (\n                        requireForceSearchOnChange(column.dataType) === true\n                      ) {\n                        forceSearch();\n                      }\n                    }}\n                    onKeyUp={(event) => {\n                      if (event.key === \"Enter\") {\n                        forceSearch();\n                      }\n                    }}\n                    value={\n                      columnSearchValues[column.name]\n                        ? columnSearchValues[column.name]\n                        : \"\"\n                    }\n                    displayAs={\n                      columnSearchValuesDisplayAs[column.name]\n                        ? columnSearchValuesDisplayAs[column.name]\n                        : \"\"\n                    }\n                    fieldName={column.name}\n                  />\n                )}\n              </td>\n            );\n          })}\n          {hasActions && rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n        </tr>\n      )}\n    </thead>\n  );\n};\n\nDatagridHeader.propTypes = {\n  actionButtonsMultiple: PropTypes.array,\n  columnSearchValues: PropTypes.object,\n  columnSearchValuesDisplayAs: PropTypes.object,\n  configurationSettings: PropTypes.object,\n  extendedSearchData: PropTypes.array,\n  hasActions: PropTypes.bool,\n  options: PropTypes.object,\n  selectedIds: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nDatagridHeader.defaultProps = {\n  actionButtonsMultiple: [],\n  columnSearchValues: {},\n  columnSearchValuesDisplayAs: {},\n  configurationSettings: { actionButtonsMultiple: [] },\n  extendedSearchData: [],\n  hasActions: false,\n  options: { actionButtonHasText: true, hasActionButtonsMultiple: false },\n  selectedIds: [],\n  visibleColumns: [],\n};\n\nexport default DatagridHeader;\n","const bodySkin = {\n  title: {\n    composes: \"gc-caption-title\",\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default bodySkin;\n","import { createUseStyles } from \"react-jss\";\nimport titleSkin from \"../skin/datagrid/title.skin\";\n\nconst useStyles = createUseStyles(titleSkin);\n\nconst DatagridTitle = (props) => {\n  const { title } = props;\n\n  const classes = useStyles(props);\n\n  return <div className={classes[\"title\"]}>{title ? title : <>&nbsp;</>}</div>;\n};\n\nexport default DatagridTitle;\n","const toolsSkin = {\n  \"datagrid-tools\": {\n    position: \"relative\",\n    padding: \"10px\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n  },\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n  },\n  \"success-button\": {\n    composes: \"btn btn-success\",\n    \"margin-left\": \"5px\",\n  },\n  \"danger-button\": {\n    composes: \"btn btn-danger\",\n    \"margin-left\": \"5px\",\n  },\n  \"warning-button\": {\n    composes: \"btn btn-warning\",\n    \"margin-left\": \"5px\",\n  },\n};\n\nexport default toolsSkin;\n","import { DROPDOWN_DIRECTION } from \"../../../../constants/dropdown\";\n\nconst buttonDropdown = {\n  \"dropdown-menu\": {\n    composes: \"dropdown-menu\",\n    \".dropdown-menu&\": {\n      display: ({ opened }) => (opened ? \"block\" : \"none\"),\n      right: ({ direction }) =>\n        direction === DROPDOWN_DIRECTION.RIGHT ? \"0\" : \"auto\",\n    },\n  },\n  \"dropdown-menu-container\": {\n    composes: \"btn-group\",\n    \"margin-left\": ({ leftSpace }) => (leftSpace ? \"5px\" : \"0\"),\n  },\n  \"dropdown-menu-button\": {\n    composes: \"btn btn-outline-dark dropdown-toggle\",\n  },\n};\n\nexport default buttonDropdown;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\nimport { useState, useRef } from \"react\";\n\nimport buttonDropdown from \"../skin/buttons/button-dropdown.skin\";\nimport Icon from \"../../../components/common/icon\";\n\nconst useStyles = createUseStyles(buttonDropdown);\n\nconst ButtonDropdown = ({\n  buttons,\n  buttonIcon,\n  buttonLabel,\n  direction,\n  leftSpace,\n}) => {\n  const buttonDropdownRef = useRef(null);\n  const [opened, setOpen] = useState(false);\n\n  function openToggle() {\n    setOpen(!opened);\n  }\n\n  function close(event) {\n    // Having enough time to close in case you press any click into the dropdown\n    setTimeout(() => {\n      setOpen(false);\n    }, 200);\n  }\n\n  const classes = useStyles({ opened, direction, leftSpace });\n\n  if (buttons.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={classes[\"dropdown-menu-container\"]} ref={buttonDropdownRef}>\n      <button\n        className={classes[\"dropdown-menu-button\"]}\n        onClick={openToggle}\n        onBlur={close}\n      >\n        {buttonIcon && (\n          <>\n            <Icon icon={buttonIcon} />\n            &nbsp;\n          </>\n        )}\n        {buttonLabel}&nbsp;\n        <Icon icon=\"caret\" />\n      </button>\n\n      <ul className={classes[\"dropdown-menu\"]}>\n        {buttons.map((button) => (\n          <li key={button.key}>\n            <a\n              href={button.url ? button.url : \"\"}\n              target={button.newTab ? \"_blank\" : undefined}\n              className=\"dropdown-item\"\n              rel=\"noreferrer\"\n              onClick={\n                button.onClick\n                  ? (event) => {\n                      event.preventDefault();\n                      if (button.onClick) {\n                        button.onClick({\n                          primaryKeyValue: button.primaryKeyValue,\n                        });\n                      }\n                    }\n                  : undefined\n              }\n            >\n              {button.icon && (\n                <>\n                  <Icon icon={button.icon} />\n                  &nbsp;&nbsp;\n                </>\n              )}\n              {button.text}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nButtonDropdown.propTypes = {\n  buttons: PropTypes.array,\n  buttonIcon: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  leftSpace: PropTypes.bool,\n};\n\nButtonDropdown.defaultProps = {\n  buttons: [],\n  buttonIcon: \"\",\n  buttonLabel: \"\",\n  direction: \"left\",\n  leftSpace: false,\n};\n\nexport default ButtonDropdown;\n","const buttonsSkin = {\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n  },\n};\n\nexport default buttonsSkin;\n","import Icon from \"../../../components/common/icon\";\nimport buttonsSkin from \"../skin/buttons/buttons.skin\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles(buttonsSkin);\n\nconst Button = ({ onClick, icon, label, link = false, href }) => {\n  const classes = useStyles();\n\n  if (link) {\n    return (\n      <a\n        className={classes[\"simple-button\"]}\n        onClick={onClick}\n        href={href}\n        title={label}\n      >\n        {icon && (\n          <>\n            <Icon icon={icon}></Icon>&nbsp;\n          </>\n        )}\n        {label}\n      </a>\n    );\n  }\n\n  return (\n    <button\n      className={classes[\"simple-button\"]}\n      onClick={onClick}\n      title={label}\n    >\n      {icon && (\n        <>\n          <Icon icon={icon}></Icon>&nbsp;\n        </>\n      )}\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import { createUseStyles } from \"react-jss\";\nimport toolsSkin from \"../skin/datagrid/tools.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getFiltersTranslation,\n  getTitleTranslation,\n} from \"../../../utils/translations-helper\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ButtonDropdown from \"../buttons/button-dropdown\";\nimport { DROPDOWN_DIRECTION } from \"../../../constants/dropdown\";\nimport { excelExportUrl, pdfExportUrl, printUrl } from \"../../../utils/urls\";\nimport Button from \"../buttons/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnsActions } from \"../../../actions/columns-actions\";\nimport FatalErrorMessage from \"../../../components/common/error/fatal-error-message\";\nimport MultipleButtons from \"../../../components/datagrid/button/MultipleButtons\";\n\nconst useStyles = createUseStyles(toolsSkin);\n\nconst onColumnsModalOpen = (dispatch) =>\n  dispatch({\n    type: columnsActions.MODAL_OPEN,\n  });\n\nconst DatagridTools = (props) => {\n  const {\n    apiUrl,\n    columnSearchValues,\n    extendedSearchData,\n    hasAdd,\n    onAdd,\n    onClearCache,\n    onClearFiltering,\n    onFilteringModalOpen,\n    onOrderingReset,\n    onRefresh,\n    sorting,\n    sortingFor,\n    subject,\n    urlUniqueHash,\n    visibleColumnsAsShortString,\n  } = props;\n\n  const classes = useStyles(props);\n  const dispatch = useDispatch();\n\n  const urlHistory = useSelector((state) => state.configuration.urlHistory);\n  const landingPageUrl = useSelector(\n    (state) => state.configuration.landingPageUrl\n  );\n\n  const hasSettings = useSelector((state) => state.configuration.hasSettings);\n  const hasPrint = useSelector((state) => state.configuration.hasPrint);\n  const hasFilters = useSelector((state) => state.configuration.hasFilters);\n  const hasColumnsButton = useSelector(\n    (state) => state.configuration.hasColumnsButton\n  );\n  const hasExportData = useSelector(\n    (state) => state.configuration.hasExportData\n  );\n  const hasExportPdf = useSelector((state) => state.configuration.hasExportPdf);\n  const hasExportExcel = useSelector(\n    (state) => state.configuration.hasExportExcel\n  );\n\n  const hasTopLeftButtons = useSelector(\n    (state) => state.configuration.hasTopLeftButtons\n  );\n  const hasTopRightButtons = useSelector(\n    (state) => state.configuration.hasTopRightButtons\n  );\n\n  const datagridButtonsTopLeft = useSelector(\n    (state) => state.configuration.datagridButtonsTopLeft\n  );\n\n  const datagridButtonsTopRight = useSelector(\n    (state) => state.configuration.datagridButtonsTopRight\n  );\n\n  const hasTopButtons = hasTopLeftButtons || hasTopRightButtons;\n  // TODO: To pass the urlUniqueHash at the future\n  const uniqueHashPrefix = urlUniqueHash ? `/${urlUniqueHash}` : \"\";\n\n  const dataForExport = {\n    apiUrl,\n    columnSearchValues,\n    sorting,\n    sortingFor,\n    visibleColumnsAsShortString,\n    extendedSearchData,\n  };\n\n  try {\n    return hasTopButtons ? (\n      <div className={classes[\"datagrid-tools\"]}>\n        <div>\n          {hasTopLeftButtons && (\n            <>\n              {hasAdd && (\n                <Button\n                  link={true}\n                  href={\n                    urlHistory ? `${landingPageUrl}${uniqueHashPrefix}/add` : \"\"\n                  }\n                  icon=\"plus\"\n                  label={getTitleTranslation(formActions.ADD, subject)}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    onAdd();\n                  }}\n                />\n              )}\n            </>\n          )}\n          <MultipleButtons Button={Button} buttons={datagridButtonsTopLeft} />\n        </div>\n        <div>\n          {hasTopRightButtons && (\n            <>\n              <MultipleButtons\n                Button={Button}\n                buttons={datagridButtonsTopRight}\n              />\n              {hasFilters && (\n                <button\n                  className={\n                    extendedSearchData.length > 0\n                      ? classes[\"success-button\"]\n                      : classes[\"simple-button\"]\n                  }\n                  onClick={onFilteringModalOpen}\n                >\n                  <Icon icon=\"filter\"></Icon>&nbsp;\n                  {getFiltersTranslation(extendedSearchData.length)}\n                </button>\n              )}\n              {hasFilters &&\n                (extendedSearchData.length > 0 ||\n                  Object.keys(columnSearchValues).length > 0) && (\n                  <button\n                    className={classes[\"warning-button\"]}\n                    onClick={onClearFiltering}\n                  >\n                    <Icon icon=\"eraser\"></Icon>&nbsp;\n                    {i18n.t(\"filtering_remove_filters\")}\n                  </button>\n                )}\n              {hasColumnsButton && (\n                <Button\n                  onClick={() => onColumnsModalOpen(dispatch)}\n                  label={i18n.t(\"columns\")}\n                  icon=\"list-alt\"\n                />\n              )}\n              {hasPrint && (\n                <a\n                  className={classes[\"simple-button\"]}\n                  href={printUrl(dataForExport)}\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Icon icon=\"print\"></Icon>&nbsp;\n                  {i18n.t(\"print\")}\n                </a>\n              )}\n              {hasExportData && (\n                <ButtonDropdown\n                  buttons={[\n                    hasExportExcel && {\n                      icon: \"file-excel\",\n                      text: \"Excel\",\n                      url: excelExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"excel\",\n                    },\n                    hasExportPdf && {\n                      icon: \"file-pdf\",\n                      text: \"PDF\",\n                      url: pdfExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"pdf\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"export_to_file\")}\n                  buttonIcon=\"download\"\n                  leftSpace={true}\n                />\n              )}\n              {hasSettings && (\n                <ButtonDropdown\n                  leftSpace={true}\n                  direction={DROPDOWN_DIRECTION.RIGHT}\n                  buttons={[\n                    {\n                      icon: \"broom\",\n                      text: i18n.t(\"clear_cache\"),\n                      onClick: onClearCache,\n                      key: \"clear_cache\",\n                    },\n                    {\n                      icon: \"eraser\",\n                      text: i18n.t(\"clear_filtering\"),\n                      onClick: onClearFiltering,\n                      key: \"clear_filtering\",\n                    },\n                    {\n                      icon: \"unlink\",\n                      text: i18n.t(\"reset_ordering\"),\n                      onClick: onOrderingReset,\n                      key: \"reset_ordering\",\n                    },\n                    {\n                      icon: \"sync-alt\",\n                      text: i18n.t(\"refresh\"),\n                      onClick: onRefresh,\n                      key: \"refresh\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"settings\")}\n                  buttonIcon=\"cog\"\n                />\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    ) : null;\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nexport default DatagridTools;\n","const wrapperSkin = {\n  wrapper: {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n    width: ({ columnWidth }) =>\n      Object.keys(columnWidth).length > 0 ? \"auto\" : \"100%\",\n  },\n  \"wrapper-no-hover\": {\n    composes: \"table table-bordered\",\n    \"margin-bottom\": \"0px\",\n    width: ({ columnWidth }) =>\n      Object.keys(columnWidth).length > 0 ? \"auto\" : \"100%\",\n  },\n};\n\nexport default wrapperSkin;\n","import { createUseStyles } from \"react-jss\";\nimport wrapperSkin from \"../skin/datagrid/wrapper.skin\";\nimport { useSelector } from \"react-redux\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(wrapperSkin);\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst DatagridWrapper = ({ children }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n  const openedRows = useSelector(selectOpenedRows);\n  const classes = useStyles({ columnWidth, openedRows });\n\n  return (\n    <table\n      className={\n        openedRows.length > 0 ? classes[\"wrapper-no-hover\"] : classes.wrapper\n      }\n    >\n      {children}\n    </table>\n  );\n};\n\nexport default DatagridWrapper;\n","import i18n from \"../../../../utils/locale/i18n\";\n\nconst formDialog = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"@keyframes shine\": {\n    to: {\n      \"background-position\": \"100% 0\",\n    },\n  },\n  \"form-dialog\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ formModalOpen }) => (formModalOpen ? \"block\" : \"none\"),\n      opacity: \"0\",\n      animation: ({ formModalOpen }) =>\n        formModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"modal-delete-one\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ deleteOneModalOpen }) =>\n        deleteOneModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ deleteOneModalOpen }) =>\n        deleteOneModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"button-close\": {\n    composes: \"close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"modal-delete-multiple\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ deleteMultipleModalOpen }) =>\n        deleteMultipleModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ deleteMultipleModalOpen }) =>\n        deleteMultipleModalOpen\n          ? \"$fadeIn 0.15s ease 0s normal forwards 1\"\n          : \"none\",\n    },\n  },\n  \"close-button\": {\n    composes: \"close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": ({ openInModal }) =>\n      openInModal ? \"calc(100vh - 240px)\" : undefined,\n    padding: \"0px 10px\",\n  },\n  \"@media (max-height: 300px)\": {\n    \"form-fields\": {\n      \"max-height\": \"none\",\n    },\n  },\n  \"skeleton-loader\": {\n    width: \"100%\",\n    height: \"15px\",\n    border: \"1px solid rgb(239,239,239)\",\n    \"border-radius\": \"4px\",\n    display: \"block\",\n    \"background-repeat\": \"repeat-y\",\n    \"background-size\": \"50px 500px\",\n    \"background-position\": \"0 0\",\n    background:\n      \"linear-gradient(to right, rgba(239, 239, 239, 0), rgba(239, 239, 239, 0.5) 50%, rgba(239, 239, 239, 0) 80%),rgb(255,255,255)\",\n    animation: \"$shine 2s infinite\",\n    \"animation-delay\": \"0.3s\",\n  },\n  \"form-input-read-only\": {\n    padding: \"7px 0px\",\n    border: \"none\",\n    \"background-color\": \"var(--gc-input-light-background)\",\n    \"&:focus-visible, &:focus\": {\n      border: \"none\",\n      outline: \"none\",\n      \"background-color\": \"var(--gc-input-light-background)\",\n    },\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-textarea\": {\n    composes: \"form-control\",\n    \"textarea&\": {\n      \"min-height\": \"250px\",\n    },\n  },\n  \"form-select\": {\n    composes: \"form-control form-select\",\n  },\n  form: {\n    composes: \"form-horizontal\",\n    position: \"relative\",\n    \"&:before\": {\n      display: (props) => (props.formLoadingOverlay ? \"block\" : \"none\"),\n      content: (props) =>\n        props.formLoadingOverlay ? `\"${i18n.t(\"loading\")}\"` : \"none\",\n      opacity: (props) => (props.formLoadingOverlay ? \"0.5\" : \"0\"),\n      \"font-size\": \"26px\",\n      position: \"absolute\",\n      \"text-align\": \"center\",\n      \"z-index\": \"9999\",\n      color: \"var(--gc-light-background-text-color)\",\n      background: \"var(--gc-light-background)\",\n      cursor: \"default\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n  \"full-page-title\": {\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default formDialog;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === fieldTypes.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          permittedValues: column.permittedValues,\n                          fieldName: column.name,\n                          locale,\n                          dateFormat,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { getDeleteConfirmationMessage } from \"../../../utils/translations-helper\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteMultipleModal = (props) => {\n  const {\n    deleteMultipleModalOpen,\n    deleteMultipleModalClose,\n    deleteMultiple,\n    selectedIds,\n    visibleColumnsWithDetails,\n    rows,\n  } = props;\n\n  const classes = useStyles({ deleteMultipleModalOpen });\n\n  return (\n    <div\n      className={classes[\"modal-delete-multiple\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"action_delete\")}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={deleteMultipleModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <p>{getDeleteConfirmationMessage(selectedIds.length)}</p>\n            {deleteMultipleModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter((row) =>\n                  selectedIds.includes(row.grocery_crud_extras.primaryKeyValue)\n                )}\n              />\n            )}\n          </div>\n          {deleteMultipleModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteMultipleModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              {/* making sure that we have at least one selection to remove */}\n              {selectedIds.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger delete-single-confirmation-button\"\n                  onClick={deleteMultiple}\n                >\n                  {i18n.t(\"action_delete\")}\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteMultipleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteMultipleModal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteSingleModal = (props) => {\n  const {\n    deleteOneModalOpen,\n    deleteOneModalClose,\n    deleteOne,\n    visibleColumnsWithDetails,\n    primaryKeyValue,\n    rows,\n  } = props;\n\n  const classes = useStyles({ deleteOneModalOpen });\n\n  return (\n    <div\n      className={classes[\"modal-delete-one\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"action_delete\")}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={deleteOneModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <p>{i18n.t(\"confirm_delete\")}</p>\n            {deleteOneModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter(\n                  (row) =>\n                    row.grocery_crud_extras.primaryKeyValue === primaryKeyValue\n                )}\n              />\n            )}\n          </div>\n          {deleteOneModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteOneModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger delete-single-confirmation-button\"\n                onClick={deleteOne}\n              >\n                {i18n.t(\"action_delete\")}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteSingleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteSingleModal;\n","const errorDialog = {\n  \"error-dialog\": {\n    composes: \"modal\",\n    \".modal&\": {\n      \"z-index\": \"1100\", // more than 1050 that is the default of bootstrap modal\n      display: ({ showError }) => (showError ? \"block\" : \"none\"),\n    },\n  },\n  \"error-details\": {\n    width: \"100%\",\n    height: \"200px\",\n  },\n};\n\nexport default errorDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport errorDialog from \"../skin/error-dialog/error-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(errorDialog);\n\nconst ErrorDialog = ({ closeModal, showError, details, message }) => {\n  const classes = useStyles({ showError });\n\n  return (\n    <div\n      className={classes[\"error-dialog\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"error_generic_title\")}</h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={closeModal}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <div>\n              {i18n.t(\"error_message\")}: {message}\n            </div>\n            <div>{i18n.t(\"error_text\")}:</div>\n            <div>\n              <textarea\n                defaultValue={details || \"\"}\n                className={classes[\"error-details\"]}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              data-dismiss=\"modal\"\n              onClick={closeModal}\n            >\n              {i18n.t(\"close_modal\")}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorDialog.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nErrorDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default ErrorDialog;\n","const filteringDialogSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"filtering-modal\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ filteringModalOpen }) =>\n        filteringModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ filteringModalOpen }) =>\n        filteringModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default filteringDialogSkin;\n","const filteringSkin = {\n  \"filtering-row\": {\n    composes: \"row\",\n    \"padding-top\": \"10px\",\n    \"padding-bottom\": \"10px\",\n  },\n  \"filtering-column\": {\n    // hardcoding the color here since we have an issue with third party components that inherits the color from the parent\n    color: \"#212529\",\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-select\": {\n    composes: \"form-control\",\n  },\n  \"close-button\": {\n    composes: \"close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default filteringSkin;\n","const ModalCloseButton = ({ className, onClick }) => {\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      data-dismiss=\"modal\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  );\n};\n\nexport default ModalCloseButton;\n","import { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport classNames from \"classnames\";\n\nimport filteringSkin from \"../skin/filtering/filtering.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport { deepCloneArray } from \"../../../utils/array-helper\";\nimport {\n  doTriggerFilterRefresh,\n  doTriggerFilterValueRefresh,\n  emptyFilterMapping,\n  getFilterValueFromDataType,\n} from \"../../../utils/filtering-helper\";\nimport FilterComparisonSelect from \"../../../components/filtering/filter-comparison-select\";\nimport {\n  getJssNameFromType,\n  getSearchInputComponent,\n} from \"../../../utils/field-types\";\nimport ModalCloseButton from \"../common/modal-close-button\";\nimport { fieldTypes } from \"../../../constants/field-types\";\n\nconst useStyles = createUseStyles(filteringSkin);\n\nconst Filtering = (props) => {\n  const {\n    onFilteringModalClose,\n    columns,\n    onSubmit: onSubmitCallback,\n    extendedSearchOperator,\n    extendedSearchData,\n    loadCssThirdParty,\n  } = props;\n\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      basic_operator: extendedSearchOperator || \"AND\",\n      extended_search:\n        extendedSearchData.length > 0\n          ? extendedSearchData\n          : [\n              {\n                name: columns[0].name,\n                filter: \"contains\",\n                value: \"\",\n              },\n            ],\n    },\n  });\n  const { fields, append, remove, insert } = useFieldArray({\n    control,\n    name: \"extended_search\",\n  });\n\n  const classes = useStyles(props);\n\n  const onSubmit = (data) => {\n    if (onSubmitCallback) {\n      // making sure that we are not sending any data by reference\n      let extendedSearch = [];\n      data[\"extended_search\"].forEach((searchData) => {\n        extendedSearch.push(searchData);\n      });\n      onSubmitCallback(\n        deepCloneArray({\n          ...data,\n          extended_search: extendedSearch,\n        })\n      );\n    }\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const numberOfFields = fields.length;\n\n  return (\n    <form\n      className=\"form-horizontal\"\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\">{i18n.t(\"filtering_filter_text\")}</h5>\n        <ModalCloseButton\n          className={classes[\"close-button\"]}\n          onClick={onFilteringModalClose}\n        />\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"row\">\n          <label className=\"col-md-3 control-label\">\n            {i18n.t(\"filtering_operator\")} :\n          </label>\n          <div className=\"col-md-3\">\n            <Controller\n              render={({ field: { onChange, onBlur, value } }) => (\n                <select\n                  name=\"basic_operator\"\n                  onChange={onChange}\n                  className=\"form-control form-select\"\n                  defaultValue={value}\n                >\n                  <option value=\"AND\">\n                    {i18n.t(\"filtering_and_statement\")}\n                  </option>\n                  <option value=\"OR\">{i18n.t(\"filtering_or_statement\")}</option>\n                </select>\n              )}\n              name=\"basic_operator\"\n              control={control}\n              defaultValue=\"AND\"\n            />\n          </div>\n        </div>\n        <div>\n          {fields.map((item, index) => {\n            const columnName = getValues(`extended_search[${index}]`).name;\n\n            const column = columns.find((column) => column.name === columnName);\n\n            return (\n              <div className={classes[\"filtering-row\"]} key={item.id}>\n                <div className=\"col-md-1\">\n                  <button\n                    className=\"btn btn-outline-dark btn-block\"\n                    type=\"button\"\n                    onClick={() => remove(index)}\n                    disabled={numberOfFields === 1}\n                  >\n                    <Icon icon=\"trash\" />\n                  </button>\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, onBlur, value } }) => {\n                      const name = `extended_search[${index}].name`;\n                      const options = columns\n                        .filter(\n                          (column) =>\n                            column.isSearchable &&\n                            column.dataType !== fieldTypes.INVISIBLE\n                        )\n                        .map((column) => ({\n                          value: column.name,\n                          label: column.displayAs,\n                        }));\n                      return (\n                        <Select\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.value;\n\n                            const oldColumn = columns.find(\n                              (column) => column.name === oldValues.name\n                            );\n                            const newColumn = columns.find(\n                              (column) => column.name === newValue\n                            );\n\n                            if (\n                              doTriggerFilterRefresh(\n                                oldColumn.dataType,\n                                newColumn.dataType\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: newValue,\n                                filter: getFilterValueFromDataType(\n                                  newColumn.dataType\n                                ),\n                                value: \"\",\n                              });\n                            }\n\n                            onChange({ target: { name, value: event.value } });\n                          }}\n                          name={name}\n                          value={options.filter(\n                            (option) => option.value === value\n                          )}\n                          options={options}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].name`}\n                    control={control}\n                    defaultValue={item.firstName} // make sure to set up defaultValue\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, value } }) => {\n                      return (\n                        <FilterComparisonSelect\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.target.value;\n                            if (\n                              doTriggerFilterValueRefresh(\n                                oldValues.filter,\n                                newValue\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: oldValues.name,\n                                filter: newValue,\n                                // null is an indication to not show an input\n                                value: emptyFilterMapping[newValue] ? null : \"\",\n                              });\n                            }\n\n                            onChange(event);\n                          }}\n                          className=\"form-control form-select\"\n                          name={`extended_search[${index}].filter`}\n                          value={value}\n                          dataType={column.dataType}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].filter`}\n                    control={control}\n                    defaultValue={item.filter}\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-5\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({\n                      field: { onChange, onBlur, value: originalValue },\n                    }) => {\n                      // null is an indication that we will not show an input\n                      if (originalValue === null) {\n                        return null;\n                      }\n\n                      const { dataType, permittedValues } = column;\n\n                      const displayAs =\n                        typeof originalValue === \"object\"\n                          ? originalValue.displayAs\n                          : \"\";\n                      const value =\n                        typeof originalValue === \"object\"\n                          ? originalValue.key\n                          : originalValue;\n\n                      const SearchInputComponent =\n                        getSearchInputComponent(dataType);\n\n                      return (\n                        <SearchInputComponent\n                          onChange={onChange}\n                          onBlur={onBlur}\n                          className={classes[getJssNameFromType(dataType)]}\n                          name={`extended_search[${index}].value`}\n                          value={value}\n                          required={true}\n                          permittedValues={permittedValues}\n                          fieldName={column.name}\n                          displayAs={displayAs}\n                          loadCssThirdParty={loadCssThirdParty}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].value`}\n                    control={control}\n                    defaultValue={item.value}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className={classes[\"filtering-row\"]}>\n          <div className=\"col-md-12\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              onClick={() => {\n                append({\n                  name: columns[0].name,\n                  filter: \"contains\",\n                  value: \"\",\n                });\n              }}\n            >\n              <Icon icon=\"plus\" />\n              &nbsp;\n              {i18n.t(\"filtering_add_more\")}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={onFilteringModalClose}\n        >\n          {i18n.t(\"filtering_cancel\")}\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-success delete-multiple-confirmation-button\"\n        >\n          {i18n.t(\"filtering_filter_text\")}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Filtering;\n","import { createUseStyles } from \"react-jss\";\nimport filteringDialogSkin from \"../skin/filtering/filtering-dialog.skin\";\nimport Filtering from \"./filtering\";\n\nconst useStyles = createUseStyles(filteringDialogSkin);\n\nconst FilteringModal = (props) => {\n  const { filteringModalOpen, onFilteringSubmit, columns } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classes[\"filtering-modal\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\">\n        <div className=\"modal-content\">\n          {filteringModalOpen && (\n            <Filtering\n              {...props}\n              columns={columns}\n              onSubmit={onFilteringSubmit}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilteringModal;\n","import { useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { formSubmitTransformation } from \"../../../utils/form-fields\";\nimport InputContainer from \"../../../components/common/input-container\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport {\n  EVENT_SET_FIELD_VALUE,\n  subscribeEvent,\n  unsubscribeEvent,\n} from \"../../../utils/events\";\n\nconst selectCloseModalOnSave = (state) => state.form.closeModalOnSave;\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Form = ({\n  configurationSettings,\n  formFields,\n  formIsReadOnly: readOnly,\n  formLoadingOverlay,\n  formModalClose,\n  formState,\n  loadCssThirdParty,\n  modalLoading,\n  onFormSubmit,\n  publishEvents,\n}) => {\n  const closeModalOnSave = useSelector(selectCloseModalOnSave);\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  const dispatch = useDispatch();\n  const { handleSubmit, control, register, setValue } = useForm();\n\n  useEffect(() => {\n    const handleCustomEvent = ({ detail }) => {\n      setValue(detail.fieldName, detail.fieldValue);\n    };\n\n    if (publishEvents) {\n      subscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n    }\n\n    // Clean up event listener on component unmount\n    return () => {\n      if (publishEvents) {\n        unsubscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n      }\n    };\n  }, [setValue, publishEvents]);\n\n  const onSubmit = (data) => {\n    const transformedData = formSubmitTransformation(data, formFields);\n\n    onFormSubmit({\n      formState,\n      data: transformedData,\n    });\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const classes = useStyles({\n    formFields,\n    formLoadingOverlay,\n    formModalClose,\n    modalLoading,\n    readOnly,\n    openInModal,\n  });\n\n  return (\n    <form\n      className={classes[\"form\"]}\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className={classes[\"form-fields\"]}>\n        {modalLoading\n          ? \"Loading...\"\n          : formFields.map((field) => {\n              return (\n                <InputContainer\n                  control={control}\n                  field={field}\n                  inputContainerClassName=\"col-sm-9\"\n                  jssClasses={classes}\n                  key={field.fieldName}\n                  labelClassName=\"col-sm-3 col-form-label\"\n                  labelContainerClassName=\"mb-3 row\"\n                  loadCssThirdParty={loadCssThirdParty}\n                  readOnly={readOnly}\n                  register={register}\n                  setValue={setValue}\n                  configurationSettings={configurationSettings}\n                  formState={formState}\n                />\n              );\n            })}\n      </div>\n      <div className=\"modal-footer\">\n        {!readOnly && (\n          <>\n            <label className=\"options-on-save\">\n              <input\n                type=\"checkbox\"\n                checked={closeModalOnSave}\n                onChange={() =>\n                  dispatch({\n                    type: formActions.TOGGLE_CLOSE_MODAL_ON_SAVE,\n                  })\n                }\n              />{\" \"}\n              {i18n.t(\"close_modal_on_save\")}\n            </label>{\" \"}\n            &nbsp; &nbsp;\n          </>\n        )}\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={formModalClose}\n        >\n          {i18n.t(\"close_modal\")}\n        </button>\n        {!readOnly && (\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {i18n.t(\"modal_save\")}\n          </button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  configurationSettings: PropTypes.object,\n};\n\nForm.defaultProps = {\n  configurationSettings: {},\n};\n\nexport default Form;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Modal = (props) => {\n  const { formModalLoading, formModalClose, formState, formModalOpen } = props;\n\n  const classes = useStyles(props);\n  const subject = useSelector((state) => state.configuration.subject);\n\n  return (\n    <div className={classes[\"form-dialog\"]} tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">\n              {getTitleTranslation(formState, subject)}\n            </h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              aria-label=\"Close\"\n              onClick={formModalClose}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          {formModalOpen && (\n            <div className=\"modal-body\">\n              {formModalLoading ? (\n                <div className={classes[\"skeleton-loader\"]} />\n              ) : (\n                <Form {...props} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default Modal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst FullPage = (props) => {\n  const { formModalLoading, formState, formModalOpen } = props;\n\n  const classes = useStyles(props);\n  const subject = useSelector((state) => state.configuration.subject);\n\n  return (\n    <div className={classes[\"full-page\"]} tabIndex=\"-1\">\n      <div className={classes[\"full-page-title\"]}>\n        {getTitleTranslation(formState, subject)}\n      </div>\n      <div>\n        {formModalOpen && (\n          <div className=\"modal-body\">\n            {formModalLoading ? (\n              <div className={classes[\"skeleton-loader\"]} />\n            ) : (\n              <Form {...props} />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nFullPage.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nFullPage.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default FullPage;\n","import Modal from \"./modal\";\nimport FullPage from \"./full-page\";\nimport { useSelector } from \"react-redux\";\n\nconst FormDialog = ({ ...props }) => {\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  return openInModal ? <Modal {...props} /> : <FullPage {...props} />;\n};\n\nexport default FormDialog;\n","import { createUseStyles } from \"react-jss\";\n\nimport groupButtonSkin from \"../skin/buttons/buttons.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport ButtonDropdown from \"./button-dropdown\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = createUseStyles(groupButtonSkin);\n\nconst GroupButtons = (props) => {\n  const { buttons, maxActionButtons, isMobileDevice } = props;\n  const classes = useStyles(props);\n\n  const maxButtons = isMobileDevice\n    ? maxActionButtons.mobile\n    : maxActionButtons.desktop;\n\n  const areWeGroupingButtons = buttons.length > maxButtons;\n\n  return (\n    <>\n      {buttons\n        // The logic here is that when we need to group buttons then we don't want to have the edge case situation\n        // when the grouping button is the last one button. In that case if we keep it as is (e.g. maxButtons -1)\n        // then we will have a More button that will lead to only one button which is undesirable.\n        .filter((__button, key) =>\n          areWeGroupingButtons ? key < maxButtons - 1 : key < maxButtons\n        )\n        .map((button) => (\n          <a\n            href={button.url ? button.url : \"\"}\n            className={classes[\"simple-button\"]}\n            key={button.key}\n            title={button.label}\n            target={button.newTab ? \"_blank\" : undefined}\n            rel=\"noreferrer\"\n            onClick={\n              button.onClick\n                ? (event) => {\n                    event.preventDefault();\n                    if (button.onClick) {\n                      button.onClick({\n                        primaryKeyValue: button.primaryKeyValue,\n                      });\n                    }\n                  }\n                : undefined\n            }\n          >\n            {button.icon && (\n              <>\n                <Icon icon={button.icon} />\n                &nbsp;\n              </>\n            )}\n            {button.text}\n          </a>\n        ))}\n      <ButtonDropdown\n        buttons={\n          areWeGroupingButtons\n            ? buttons.filter((__button, key) => key >= maxButtons - 1)\n            : []\n        }\n        buttonLabel={maxButtons === 1 ? i18n.t(\"actions\") : i18n.t(\"more\")}\n        leftSpace={true}\n      />\n    </>\n  );\n};\n\nGroupButtons.propTypes = {\n  buttons: PropTypes.array,\n  maxActionButtons: PropTypes.shape({\n    mobile: PropTypes.number,\n    desktop: PropTypes.number,\n  }),\n};\n\nGroupButtons.defaultProps = {\n  buttons: [],\n  maxActionButtons: {\n    mobile: 1,\n    desktop: 2,\n  },\n};\n\nexport default GroupButtons;\n","import ColumnsModal from \"./columns/columns-modal\";\nimport DatagridBody from \"./datagrid/datagrid-body\";\nimport DatagridCheckbox from \"./datagrid/datagrid-checkbox\";\nimport DatagridFooter from \"./datagrid/datagrid-footer\";\nimport DatagridHeader from \"./datagrid/datagrid-header\";\nimport DatagridTitle from \"./datagrid/datagrid-title\";\nimport DatagridTools from \"./datagrid/datagrid-tools\";\nimport DatagridWrapper from \"./datagrid/datagrid-wrapper\";\nimport DeleteMultipleModal from \"./delete-multiple/delete-multiple-modal\";\nimport DeleteSingleModal from \"./delete-single/delete-single-modal\";\nimport ErrorDialog from \"./error/error-dialog\";\nimport FilteringModal from \"./filtering/filtering-modal\";\nimport FormDialog from \"./form/form-dialog\";\nimport GroupButtons from \"./buttons/group-buttons\";\n\nconst themeComponents = {\n  ColumnsModal,\n  DatagridBody,\n  DatagridCheckbox,\n  DatagridFooter,\n  DatagridHeader,\n  DatagridTitle,\n  DatagridTools,\n  DatagridWrapper,\n  DeleteMultipleModal,\n  DeleteSingleModal,\n  ErrorDialog,\n  FilteringModal,\n  FormDialog,\n  GroupButtons,\n};\n\nexport default themeComponents;\n","export const selectColumnWidth = (state) => state.columnWidth;\n","const MultipleButtons = ({ buttons, Button }) => {\n  return (\n    <>\n      {buttons.map((button, index) => {\n        return (\n          <Button\n            key={index}\n            label={button.label}\n            icon={button.iconName}\n            href={button.url}\n            newTab={button.newTab}\n            link={true}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default MultipleButtons;\n","import { columnWidthActions } from \"../actions/column-width-actions\";\n\nlet previousSiblingElement;\nlet parentThElement;\nlet startOffsetX;\nlet startClientX;\nlet columnWidth;\nconst MIN_WIDTH = 100;\nconst EXTRA_PADDING = 13;\n\nexport const columnWidthOnDragStart = (event) => {\n  const currentTarget = event.currentTarget;\n\n  currentTarget.closest(\"th\").style.background = \"var(--gc-dark-background)\";\n  currentTarget.style.opacity = \"0\";\n\n  previousSiblingElement = event.currentTarget.previousSibling;\n  parentThElement = event.currentTarget.closest(\"th\");\n\n  previousSiblingElement.style.background =\n    \"var(--gc-emphasis-background-color)\";\n  previousSiblingElement.style.right = \"0\";\n  previousSiblingElement.style.position = \"fixed\";\n  previousSiblingElement.style.left = event.clientX - EXTRA_PADDING + \"px\";\n  previousSiblingElement.style.display = \"block\";\n\n  startClientX = event.clientX;\n  columnWidth = parentThElement.clientWidth;\n  startOffsetX = parentThElement.offsetLeft + columnWidth;\n};\n\nexport const columnWidthOnDrag = (event) => {\n  if (previousSiblingElement !== null) {\n    previousSiblingElement.style.left =\n      startOffsetX + event.clientX - startClientX + \"px\";\n  }\n};\n\nexport const columnChangeWidthAction = (columnName, columnWidth, dispatch) => {\n  dispatch({\n    type: columnWidthActions.CHANGE_WIDTH,\n    columnName,\n    columnWidth,\n  });\n};\n\nexport const columnWidthOnDragEnd = (event, columnName, dispatch) => {\n  if (parentThElement !== null) {\n    parentThElement.style.removeProperty(\"background\");\n    columnChangeWidthAction(\n      columnName,\n      Math.max(\n        columnWidth + event.clientX - startClientX - EXTRA_PADDING,\n        MIN_WIDTH\n      ),\n      dispatch\n    );\n  }\n  event.currentTarget.style.removeProperty(\"right\");\n  event.currentTarget.style.removeProperty(\"background\");\n  event.currentTarget.style.removeProperty(\"position\");\n  event.currentTarget.style.removeProperty(\"left\");\n  event.currentTarget.style.removeProperty(\"opacity\");\n\n  previousSiblingElement.style.removeProperty(\"right\");\n  previousSiblingElement.style.removeProperty(\"background\");\n  previousSiblingElement.style.removeProperty(\"position\");\n  previousSiblingElement.style.removeProperty(\"left\");\n  previousSiblingElement.style.removeProperty(\"opacity\");\n\n  document.body.style.removeProperty(\"cursor\");\n};\n","import { useSelector } from \"react-redux\";\nimport { useEffect, useRef } from \"react\";\n\nconst selectMasterDetailApiUrl = (state) => state.masterDetail.apiUrl;\nconst groceryCrudLoader = require(\"../../grocery-crud-loader\").default;\n\nconst MasterDetail = ({ primaryKeyValue, skin, theme, publishEvents }) => {\n  const apiUrl = useSelector(selectMasterDetailApiUrl);\n  const datagridRef = useRef(null);\n\n  useEffect(() => {\n    if (datagridRef.current) {\n      groceryCrudLoader(datagridRef.current);\n    }\n  }, [datagridRef]);\n\n  const uniqueId = Date.now();\n\n  return (\n    <div\n      ref={datagridRef}\n      className=\"grocery-crud\"\n      data-api-url={apiUrl}\n      data-unique-id={uniqueId}\n      data-skin={skin}\n      data-theme={theme}\n      data-master-primary-key-value={primaryKeyValue}\n      data-load-css-theme=\"false\"\n      data-load-css-icons=\"false\"\n      data-remember-state=\"false\"\n      data-publish-events={publishEvents ? \"true\" : \"false\"}\n    ></div>\n  );\n};\n\nexport default MasterDetail;\n","import PropTypes from \"prop-types\";\nimport {\n  getComponentFromDataType,\n  getMountingCallbacks,\n} from \"../../utils/field-types\";\nimport { useSelector } from \"react-redux\";\n\nconst selectPrimaryKeyValue = (state) => state.form.primaryKeyValue;\n\nconst Input = ({\n  className,\n  control,\n  dataType,\n  fieldOptions,\n  id,\n  isDependencyField,\n  isNullable,\n  loadCssThirdParty,\n  name,\n  permittedValues,\n  readOnly,\n  register,\n  setValue,\n  value,\n  valueLabel,\n  formState,\n  configurationSettings,\n}) => {\n  const primaryKeyValue = useSelector(selectPrimaryKeyValue);\n\n  const InputComponent = getComponentFromDataType({ dataType, readOnly });\n  const { onMount, onUnmount } = getMountingCallbacks({\n    configurationSettings,\n    dataType,\n    fieldName: name,\n    formState,\n  });\n\n  return (\n    <InputComponent\n      className={className}\n      control={control}\n      fieldOptions={fieldOptions}\n      id={id}\n      isDependencyField={isDependencyField}\n      isNullable={isNullable}\n      loadCssThirdParty={loadCssThirdParty}\n      name={name}\n      permittedValues={permittedValues}\n      primaryKeyValue={primaryKeyValue}\n      register={register}\n      setValue={setValue}\n      value={value}\n      valueLabel={valueLabel}\n      onMount={onMount}\n      onUnmount={onUnmount}\n    />\n  );\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  control: PropTypes.object,\n  dataType: PropTypes.string,\n  id: PropTypes.string,\n  isNullable: PropTypes.bool,\n  name: PropTypes.string,\n  permittedValues: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  readOnly: PropTypes.bool,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.number,\n  ]),\n};\n\nexport default Input;\n","import PropTypes from \"prop-types\";\nimport Input from \"./input\";\nimport { fieldTypes } from \"../../constants/field-types\";\nimport { getJssNameFromType } from \"../../utils/field-types\";\nconst InputContainer = ({\n  control,\n  field,\n  inputClassName,\n  inputContainerClassName,\n  jssClasses,\n  labelClassName,\n  labelContainerClassName,\n  loadCssThirdParty,\n  readOnly,\n  register,\n  setValue,\n  configurationSettings,\n  formState,\n}) => {\n  const isReadOnly = readOnly || field.isReadOnly;\n  const isVisibleField = field.dataType !== fieldTypes.HIDDEN;\n\n  if (isVisibleField) {\n    return (\n      <div className={labelContainerClassName}>\n        <label\n          className={labelClassName}\n          htmlFor={`gc-form-${field.fieldName}`}\n        >\n          {field.isRequired && <span>*</span>}\n          {field.displayAs}\n        </label>\n        <div className={inputContainerClassName}>\n          <Input\n            className={\n              jssClasses[getJssNameFromType(field.dataType, isReadOnly)]\n            }\n            control={control}\n            dataType={field.dataType}\n            fieldOptions={field.options || {}}\n            id={`gc-form-${field.fieldName}`}\n            isDependencyField={field.isDependencyField}\n            isNullable={field.isNullable}\n            loadCssThirdParty={loadCssThirdParty}\n            name={field.fieldName}\n            permittedValues={field.permittedValues}\n            readOnly={isReadOnly}\n            register={register}\n            setValue={setValue}\n            value={field.fieldValue}\n            valueLabel={field.valueLabel}\n            formState={formState}\n            configurationSettings={configurationSettings}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // Not visible fields (e.g. hidden)\n  return (\n    <Input\n      className={inputClassName}\n      control={control}\n      dataType={field.dataType}\n      id={`gc-form-${field.fieldName}`}\n      isNullable={field.isNullable}\n      name={field.fieldName}\n      readOnly={isReadOnly}\n      value={field.fieldValue}\n    />\n  );\n};\n\nInputContainer.propTypes = {\n  jssClasses: PropTypes.object,\n};\n\nInputContainer.defaultProps = {\n  jssClasses: {},\n};\n\nexport default InputContainer;\n"],"sourceRoot":""}